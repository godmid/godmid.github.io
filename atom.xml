<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>冥狐的小站</title>
  
  <subtitle>如无必要，勿增实体</subtitle>
  <link href="https://www.darkfox.top/atom.xml" rel="self"/>
  
  <link href="https://www.darkfox.top/"/>
  <updated>2021-07-27T14:02:47.870Z</updated>
  <id>https://www.darkfox.top/</id>
  
  <author>
    <name>DarkFox</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>陀螺仪原理</title>
    <link href="https://www.darkfox.top/posts/611f9591/"/>
    <id>https://www.darkfox.top/posts/611f9591/</id>
    <published>2021-07-27T13:57:06.000Z</published>
    <updated>2021-07-27T14:02:47.870Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span><p>本帖翻译自 <a href="http://www.starlino.com/imu_guide.html">IMU（加速度计和陀螺仪设备）在嵌入式应用中使用的指南。</a><br>这篇文章主要介绍加速度计和陀螺仪的数学模型和基本算法，以及如何融合这两者，侧重算法、思想的讨论</p><p>介绍<br>本指南旨在向兴趣者介绍惯性MEMS（微机电系统）传感器，特别是加速度计和陀螺仪以及其他整合IMU（ <a href="http://en.wikipedia.org/wiki/Inertial_measurement_unit">惯性测量单元</a>）设备。<br><img src="http://image.geek-workshop.com/forum/201208/22/163854b9769h9p7kvq7omh.jpg" alt="1.jpg" loading="lazy"></p><p>2012-8-22 16:38 上传</p><p><a href="http://blog.csdn.net/zhuanghe_xing/article/details/forum.php?mod=attachment&amp;aid=NjQxM3xhNDgxYjAxZnwxMzQ2NTg2MjYwfDMxOTV8MTY5NQ%3D%3D&amp;nothumb=yes"><strong>下载附件</strong>(16.48 KB)</a></p><p>IMU单元例子：上图中MCU顶端的 <a href="http://www.starlino.com/store/acc-gyro">ACC Gyro 6DOF</a>，名为 <a href="http://www.gadgetgangster.com/find-a-project/56?projectnum=240">USBThumb</a>，支持USB/串口通信</p><p>在这篇文章中我将概括这么几个基本并且重要的话题：<br>- 加速度计（accelerometer）检测什么<br>- 陀螺仪（gyroscope，也称作 gyro）检测什么<br>- 如何将传感器ADC读取的数据转换为物理单位（加速度传感器的单位是g，陀螺仪的单位是 度/秒）<br>- 如何结合加速度传感器和陀螺仪的数据以得到设备和地平面之间的倾角的准确信息<br>在整篇文章中我尽量将数学运算降低到最少。如果你知道什么是正弦、余弦、正切函数，那无论你的项目使用哪种平台你应该都会明白和运用这篇文章中的思想，这些平台如Arduino、Propeller、Basic Stamp、Ateml芯片、PIC芯片等等。总有些人认为使用IMU单元需要复杂的数学运算（复杂的FIR或IIR滤波，如卡尔曼滤波，Parks-McClellan滤波等）。你如果研究这些会得到很棒且很复杂的结果。我解释事情的方式，只需要基本的数学。我非常坚信简单的原则。我认为一个简单的系统更容易操作和监控，另外许多嵌入式设备并不具备能力和资源去实现需要进行矩阵运算的复杂算法。<br>我会用我设计的一个新IMU模块—— <a href="http://www.starlino.com/store/acc-gyro">Acc_Gyro Accelerometer + Gyro IMU</a>作为例子。在下面的例子中我们会使用这个设备的参数。用这个模块作为介绍非常合适，因为它由3个设备组成：<br>- LIS331AL ( <a href="http://www.starlino.com/wp-content/uploads/data/acc_gyro/LIS331AL.pdf">datasheet</a>) – 3轴 2G 模拟加速度计<br>- LPR550AL ( <a href="http://www.starlino.com/wp-content/uploads/data/acc_gyro/LPR550AL.pdf">datasheet</a>) – 双轴（俯仰、翻滚） 500°/s 加速度传感器<br>- LY550ALH ( <a href="http://www.starlino.com/wp-content/uploads/data/acc_gyro/LY550ALH.pdf">datasheet</a>) –单轴（偏航）陀螺仪 最后这个设备在这篇介绍中不使用，不过他在 <a href="http://www.starlino.com/dcm_tutorial.html">DCM Matrix implementation</a>中有重要作用<br>它们一起组成了一个6自由度的惯性测量单元。这是个花哨的名字！然而，在花哨的名字后面是个非常有用的设备组合，接下来我们会详细介绍之。<br>第一部分 加速度计<br>要了解这个模块我们先从加速度计开始。当我们在想象一个加速度计的时候我们可以把它想作一个圆球在一个方盒子中。你可能会把它想作一个饼干或者甜圈，但我就把它当做一个球好了：<br><img src="http://image.geek-workshop.com/forum/201208/22/163855d7e99tne77u81b12.png" alt="2.png" loading="lazy"></p><p>2012-8-22 16:38 上传</p><p><a href="http://blog.csdn.net/zhuanghe_xing/article/details/forum.php?mod=attachment&amp;aid=NjQxNHw0ZDkxOTU3NXwxMzQ2NTg2MjYwfDMxOTV8MTY5NQ%3D%3D&amp;nothumb=yes"><strong>下载附件</strong>(15.85 KB)</a></p><p>我们假定这个盒子不在重力场中或者其他任何会影响球的位置的场中，球处于盒子的正中央。你可以想象盒子在外太空中，远离任何天体，如果很难想象，那就当做盒子在航天飞机中，一切东西都处于无重力状态。在上面的图中你可以看到我们给每个轴分配了一对墙（我们移除了Y+以此来观察里面的情况）。设想每面墙都能感测压力。如果我们突然把盒子向左移动（加速度为1g=9.8m/s^2），那么球会撞上X-墙。然后我们检测球撞击墙面产生的压力，X轴输出值为-1g。<br><img src="http://image.geek-workshop.com/forum/201208/22/163856r6orns2rocpzz5sp.png" alt="3.png" loading="lazy"></p><p>2012-8-22 16:38 上传</p><p><a href="http://blog.csdn.net/zhuanghe_xing/article/details/forum.php?mod=attachment&amp;aid=NjQxNXwxM2U2NjRkZXwxMzQ2NTg2MjYwfDMxOTV8MTY5NQ%3D%3D&amp;nothumb=yes"><strong>下载附件</strong>(19.23 KB)</a></p><p>请注意加速度计检测到得力的方向与它本身加速度的方向是相反的。这种力量通常被称为 <a href="http://en.wikipedia.org/wiki/Fictitious_force">惯性力或假想力</a> 。在这个模型中你你应该学到加速度计是通过间接测量力对一个墙面的作用来测量加速度的，在实际应用中，可能通过弹簧等装置来测量力。这个力可以是加速度引起的，但在下面的例子中，我们会发现它不一定是加速度引起的。<br>如果我们把模型放在地球上，球会落在Z-墙面上并对其施加一个1g的力，见下图：<br><img src="http://image.geek-workshop.com/forum/201208/22/163856lxjiqd8xlvzh775b.png" alt="4.png" loading="lazy"></p><p>2012-8-22 16:38 上传</p><p><a href="http://blog.csdn.net/zhuanghe_xing/article/details/forum.php?mod=attachment&amp;aid=NjQxNnxjNGIzNDM1YnwxMzQ2NTg2MjYwfDMxOTV8MTY5NQ%3D%3D&amp;nothumb=yes"><strong>下载附件</strong>(19.54 KB)</a></p><p>在这种情况下盒子没有移动但我们任然读取到Z轴有-1g的值。球在墙壁上施加的压力是由引力造成的。在理论上，它可以是不同类型的力量 - 例如，你可以想象我们的球是铁质的，将一个磁铁放在盒子旁边那球就会撞上另一面墙。引用这个例子只是为了说明加速度计的本质是检测力而非加速度。只是加速度所引起的惯性力正好能被加速度计的检测装置所捕获。<br>虽然这个模型并非一个MEMS传感器的真实构造，但它用来解决与加速度计相关的问题相当有效。实际上有些类似传感器中有金属小球，它们称作倾角开关，但是它们的功能更弱，只能检测设备是否在一定程度内倾斜，却不能得到倾斜的程度。<br>到目前为止，我们已经分析了单轴的加速度计输出，这是使用单轴加速度计所能得到的。三轴加速度计的真正价值在于它们能够检测全部三个轴的惯性力。让我们回到盒子模型，并将盒子向右旋转45度。现在球会与两个面接触：Z-和X-，见下图：<br><img src="http://image.geek-workshop.com/forum/201208/22/163857bferffolflo9ly9l.png" alt="5.png" loading="lazy"></p><p>2012-8-22 16:38 上传</p><p><a href="http://blog.csdn.net/zhuanghe_xing/article/details/forum.php?mod=attachment&amp;aid=NjQxN3w1ZGVjODFhOXwxMzQ2NTg2MjYwfDMxOTV8MTY5NQ%3D%3D&amp;nothumb=yes"><strong>下载附件</strong>(34.03 KB)</a></p><p>0.71g这个值是不是任意的，它们实际上是1/2的平方根的近似值。我们介绍加速度计的下一个模型时这一点会更清楚。<br>在上一个模型中我们引入了重力并旋转了盒子。在最后的两个例子中我们分析了盒子在两种情况下的输出值，力矢量保持不变。虽然这有助于理解加速度计是怎么和外部力相互作用的，但如果我们将坐标系换为加速度的三个轴并想象矢量力在周围旋转，这会更方便计算。<br><img src="http://image.geek-workshop.com/forum/201208/22/163858sssxmnssijjjczf3.png" alt="6.png" loading="lazy"></p><p>2012-8-22 16:38 上传</p><p><a href="http://blog.csdn.net/zhuanghe_xing/article/details/forum.php?mod=attachment&amp;aid=NjQxOHxjNDNlNzY5Y3wxMzQ2NTg2MjYwfDMxOTV8MTY5NQ%3D%3D&amp;nothumb=yes"><strong>下载附件</strong>(7.19 KB)</a></p><p>请看看在上面的模型，我保留了轴的颜色，以便你的思维能更好的从上一个模型转到新的模型中。想象新模型中每个轴都分别垂直于原模型中各自的墙面。矢量R是加速度计所检测的矢量（它可能是重力或上面例子中惯性力的合成）。RX，RY，RZ是矢量R在X，Y，Z上的投影。请注意下列关系：<br>，R ^ 2 = RX ^ 2 + RY ^ 2 + RZ ^ 2（ 公式1）<br>此公式等价于 <a href="http://demonstrations.wolfram.com/PythagoreanTheorem3D/">三维空间勾股定理</a>。<br>还记得我刚才说的1/2的平方根0.71不是个随机值吧。如果你把它们代回上式，回顾一下重力加速度是1g，那我们就能验证：<br>1 ^ 2 =（SQRT（1/2））^ 2 + 0 ^ 2 +（SQRT（1/2））^ 2<br>在 公式1中简单的取代： R=1, Rx = -SQRT(1/2), Ry = 0 , Rz = -SQRT(1/2)<br>经过一大段的理论序言后，我们和实际的加速度计很靠近了。RX，RY，RZ值是实际中加速度计输出的线性相关值，你可以用它们进行各种计算。<br>在我们运用它之前我们先讨论一点获取加速度计数据的方法。大多数加速度计可归为两类：数字和模拟。数字加速度计可通过I2C，SPI或USART方式获取信息，而模拟加速度计的输出是一个在预定范围内的电压值，你需要用ADC（模拟量转数字量）模块将其转换为数字值。我将不会详细介绍ADC是怎么工作的，部分原因是这是个很广的话题，另一个原因是不同平台的ADC都会有差别。有些MCU具有内置ADC模块，而有些则需要外部电路进行ADC转换。不管使用什么类型的ADC模块，你都会得到一个在一定范围内的数值。例如一个10位ADC模块的输出值范围在0 … 1023间，请注意，1023 = 2 ^ 10 -1。一个12位ADC模块的输出值范围在0 … 4095内，注意，4095 = 2 ^ 12-1。<br>我们继续，先考虑下一个简单的例子，假设我们从10位ADC模块得到了以下的三个轴的数据：<br>AdcRx = 586<br>AdcRy = 630<br>AdcRz = 561<br>每个ADC模块都有一个参考电压，假设在我们的例子中，它是3.3V。要将一个10位的ADC值转成电压值，我们使用下列公式：<br>VoltsRx = AdcRx * VREF / 1023<br>小注：8位ADC的最大值是255 = 2 ^ 8 -1，12位ADC最大值是4095 = 2 ^ 12 -1。<br>将3个轴的值代入上式，得到：<br>VoltsRx = 586 * 3.3 / 1023 =～1.89V（结果取两位小数）<br>VoltsRy = 630 * 3.3 / 1023 =～2.03V<br>VoltsRz = 561 * 3.3 / 1023 =～1.81V<br>每个加速度计都有一个零加速度的电压值，你可以在它的说明书中找到，这个电压值对应于加速度为0g。通过计算相对0g电压的偏移量我们可以得到一个有符号的电压值。比方说，0g电压值 VzeroG= 1.65V，通过下面的方式可以得到相对0g电压的偏移量:<br>DeltaVoltsRx = 1.89V - 1.65V = 0.24V<br>DeltaVoltsRy = 2.03V - 1.65V = 0.38V<br>DeltaVoltsRz = 1.81V - 1.65V = 0.16V<br>现在我们得到了加速度计的电压值，但它的单位还不是g（9.8m/s^2），最后的转换，我们还需要引入加速度计的灵敏度（Sensitivity），单位通常是 mV/g。比方说，加速度计的灵敏度 Sensitivity= 478.5mV / g = 0.4785V /g。灵敏度值可以在加速度计说明书中找到。要获得最后的单位为g的加速度，我们使用下列公式计算：<br>RX = DeltaVoltsRx /Sensitivity<br>RX = 0.24V / 0.4785V / G =～0.5g<br>RY = 0.38V / 0.4785V / G =～0.79g<br>RZ = 0.16V / 0.4785V / G =～0.33g<br>当然，我们可以把所有的步骤全部放在一个式子里，但我想通过介绍每一个步骤以便让你了解怎么读取一个ADC值并将其转换为单位为g的矢量力的分量。<br>Rx = (AdcRx * Vref / 1023 – VzeroG) / Sensitivity (公式2)<br>Ry = (AdcRy * Vref / 1023 – VzeroG) / Sensitivity<br>Rz = (AdcRz * Vref / 1023 – VzeroG) / Sensitivity<br>现在我们得到了惯性力矢量的三个分量，如果设备除了重力外不受任何外力影响，那我们就可以认为这个方向就是重力矢量的方向。如果你想计算设备相对于地面的倾角，可以计算这个矢量和Z轴之间的夹角。如果你对每个轴的倾角都感兴趣，你可以把这个结果分为两个分量：X轴、Y轴倾角，这可以通过计算重力矢量和X、Y轴的夹角得到。计算这些角度比你想象的简单，现在我们已经算出了Rx，Ry，Rz的值，让我们回到我们的上一个加速度模型，再加一些标注上去：<br><img src="http://image.geek-workshop.com/forum/201208/22/1638594bjbb147i1lqb7cz.png" alt="7.png" loading="lazy"></p><p>2012-8-22 16:38 上传</p><p><a href="http://blog.csdn.net/zhuanghe_xing/article/details/forum.php?mod=attachment&amp;aid=NjQxOXw1YTRiMGIyYnwxMzQ2NTg2MjYwfDMxOTV8MTY5NQ%3D%3D&amp;nothumb=yes"><strong>下载附件</strong>(9.9 KB)</a></p><p>我们感兴趣的角度是向量R和X，Y，Z轴之间的夹角，那就令这些角度为Axr，Ayr，Azr。观察由R和Rx组成的直角三角形：<br>cos(Axr) = Rx / R , 类似的：<br>cos(Ayr) = Ry / R<br>cos(Azr) = Rz / R<br>从 公式1我们可以推导出 R = SQRT( Rx^2 + Ry^2 + Rz^2)<br>通过arccos()函数（cos()的反函数）我们可以计算出所需的角度：<br>Axr = arccos(Rx/R)<br>Ayr = arccos(Ry/R)<br>Azr = arccos(Rz/R)<br>我们花了大段的篇幅来解释加速度计模型，最后所要的只是以上这几个公式。根据你的应用场合，你可能会用到我们推导出来的几个过渡公式。我们接下来要介绍陀螺仪模块，并向大家介绍怎么融合加速度计和陀螺仪的数据以得到更精确的倾角值。<br>但在此之前，我们再介绍几个很常用的公式：<br>cosX = cos(Axr) = Rx / R<br>cosY = cos(Ayr) = Ry / R<br>cosZ = cos(Azr) = Rz / R<br>这三个公式通常称作 <a href="http://en.wikipedia.org/wiki/Direction_cosine">方向余弦</a> ，它主要表达了单位向量（长度为1的向量）和R向量具有相同的方向。你可以很容易地验证：<br>SQRT（cosX ^ 2 + COSY ^ 2 + cosZ ^ 2）= 1<br>这是个很好的性质，因为它避免了我们一直检测R向量的模（长度）。通常如果我们只是对惯性力的方向感兴趣，那标准化模长以简化其他计算是个明智的选择。<br>第二部分陀螺仪<br>对于陀螺仪我们将不会像加速度计一样介绍它的等价盒子模型，而是直接跳到加速度计的第二个模型，通过这个模型我们会向大家介绍陀螺仪是怎么工作的。<br><img src="http://image.geek-workshop.com/forum/201208/22/163859eepfepkeh1glt1lw.png" alt="8.png" loading="lazy"></p><p>2012-8-22 16:38 上传</p><p><a href="http://blog.csdn.net/zhuanghe_xing/article/details/forum.php?mod=attachment&amp;aid=NjQyMHxlMzYwMGE3ZHwxMzQ2NTg2MjYwfDMxOTV8MTY5NQ%3D%3D&amp;nothumb=yes"><strong>下载附件</strong>(12.55 KB)</a></p><p>陀螺仪的每个通道检测一个轴的旋转。例如，一个2轴陀螺仪检测绕X和Y轴的旋转。为了用数字来表达这些旋转，我们先引进一些符号。首先我们定义：<br>Rxz – 惯性力矢量R在XZ平面上的投影<br>Ryz – 惯性力矢量R在YZ平面的上投影<br>在由Rxz和Rz组成的直角三角形中，运用勾股定理可得：<br>Rxz^2 = Rx^2 + Rz^2 ，同样：<br>Ryz^2 = Ry^2 + Rz^2<br>同时注意：<br>R^2 = Rxz^2 + Ry^2 ，这个公式可以 公式1和上面的公式推导出来，也可由R和Ryz所组成的直角三角形推导出来<br>R ^ 2 = Ryz ^ 2 + RX ^ 2<br>在这篇文章中我们不会用到这些公式，但知道模型中的那些数值间的关系有助于理解。<br>相反，我们按如下方法定义Z轴和Rxz、Ryz向量所成的夹角：<br>AXZ - Rxz（矢量R在XZ平面的投影）和Z轴所成的夹角<br>AYZ - Ryz（矢量R在YZ平面的投影）和Z轴所成夹角<br>现在我们离陀螺仪要测量的东西又近了一步。陀螺仪测量上面定义的角度的变化率。换句话说，它会输出一个与上面这些角度变化率线性相关的值。为了解释这一点，我们先假设在t0时刻，我们已测得绕Y轴旋转的角度（也就是Axz），定义为Axz0，之后在t1时刻我们再次测量这个角度，得到Axz1。角度变化率按下面方法计算：<br>RateAxz = (Axz1 – Axz0) / (t1 – t0).<br>如果用度来表示角度，秒来表示时间，那这个值的单位就是 度/秒。这就是陀螺仪检测的东西。<br>在实际运用中，陀螺仪一般都不会直接给你一个单位为度/秒的值（除非它是个特殊的数字陀螺仪）。就像加速度计一样，你会得到一个ADC值并且要用类似 公式2的式子将其转换成单位为 度/秒的值。让我们来介绍陀螺仪输出值转换中的ADC部分（假设使用10位ADC模块，如果是8位ADC，用1023代替255，如果是12为ADC用4095代替1023）。<br>RateAxz = (AdcGyroXZ * Vref / 1023 – VzeroRate) / Sensitivity <strong>公式3</strong><br>RateAyz = (AdcGyroYZ * Vref / 1023 – VzeroRate) / Sensitivity<br>AdcGyroXZ，AdcGyroYZ - 这两个值由ADC读取，它们分别代表矢量R的投影在XZ和YZ平面内里的转角，也可等价的说，旋转可分解为单独绕Y和X轴的运动。<br>Vref – ADC的参考电压，上例中我们使用3.3V<br>VzeroRate – 是零变化率电压，换句话说它是陀螺仪不受任何转动影响时的输出值，对 <a href="http://gadgetgangster.com/find-a-project/56?projectnum=213">Acc Gyro</a>板来说，可以认为是1.23V（此值通常可以在说明书中找到——但千万别相信这个值，因为大多数的陀螺仪在焊接后会有一定的偏差，所以可以使用电压计测量每个通道的输出值，通常这个值在焊接后就不会改变，如果有跳动，在设备使用前写一个校准程序对其进行测量，用户应当在设备启动的时候保持设备静止以进行校准）。<br>Sensitivity –陀螺仪的灵敏度，单位mV/(deg/s)，通常写作mV/deg/s,它的意思就是如果旋转速度增加1°/s,陀螺仪的输出就会增加多少mV。 <a href="http://gadgetgangster.com/find-a-project/56?projectnum=213">Acc_Gyro</a>板的灵敏度值是2mV/deg/s或0.002V/deg/s<br>让我们举个例子，假设我们的ADC模块返回以下值：<br>AdcGyroXZ = 571<br>AdcGyroXZ = 323<br>用上面的公式，在代入 <a href="http://gadgetgangster.com/find-a-project/56?projectnum=213">Acc Gyro</a>板的参数，可得：<br>RateAxz = (571 * 3.3V / 1023 – 1.23V) / ( 0.002V/deg/s) =~ 306 deg/s<br>RateAyz = (323 * 3.3V / 1023 – 1.23V) / ( 0.002V/deg/s) =~ -94 deg/s<br>换句话说设备绕Y轴（也可以说在XZ平面内）以306°/s速度和绕X轴（或者说YZ平面内）以-94°/s的速度旋转。请注意，负号表示该设备朝着反方向旋转。按照惯例，一个方向的旋转是正值。一份好的陀螺仪说明书会告诉你哪个方向是正的，否则你就要自己测试出哪个旋转方向会使得输出脚电压增加。最好使用示波器进行测试，因为一旦你停止了旋转，电压就会掉回零速率水平。如果你使用的是万用表，你得保持一定的旋转速度几秒钟并同时比较电压值和零速率电压值。如果值大于零速率电压值那说明这个旋转方向是正向。<br>第三部分 将它们综合起来。融合加速度计和陀螺仪的数据。<br>如果你在阅读这篇文章你可能已经有了或准备购买一个IMU设备，或者你准备用独立的加速度计和陀螺仪搭建一个。<br>注：具体的代码实现和算法测试，请阅读这篇文章：<br><a href="http://starlino.com/imu_kalman_arduino.html">http://starlino.com/imu_kalman_arduino.html</a></p><p>在使用整合了加速度计和陀螺仪的IMU设备时，首先要做的就是统一它们的坐标系。最简单的办法就是将加速度计作为参考坐标系。大多数的加速度计技术说明书都会指出对应于物理芯片或设备的XZY轴方向。例如，下面就是Acc Gyro板的说明书中给出的XYZ轴方向：<br><img src="http://image.geek-workshop.com/forum/201208/22/16390056u825bbb2j10x80.png" alt="9.png" loading="lazy"></p><p>2012-8-22 16:39 上传</p><p><a href="http://blog.csdn.net/zhuanghe_xing/article/details/forum.php?mod=attachment&amp;aid=NjQyMXxmZDNmNmQ3MnwxMzQ2NTg2MjYwfDMxOTV8MTY5NQ%3D%3D&amp;nothumb=yes"><strong>下载附件</strong>(35.18 KB)</a></p><p>接下来的步骤是：<br>- 确定陀螺仪的输出对应到上述讨论的RateAxz，RateAyz值。<br>- 根据陀螺仪和加速度计的位置决定是否要反转输出值<br>不要设想陀螺仪陀的输出有XY，它会适应加速度计坐标系里的任何轴，尽管这个输出是IMU模块的一部分。最好的办法就是测试。<br>接下来的示例用来确定哪个陀螺仪的输出对应RateAxz。<br>- 首先将设备保持水平。加速度计的XY轴输出会是零加速度电压（ <a href="http://gadgetgangster.com/find-a-project/56?projectnum=213">Acc Gyro</a>板的值是1.65V）<br>- 接下来将设备绕Y轴旋转，换句话说就是将设备在XZ平面内旋转，所以X、Z的加速度输出值会变化而Y轴保持不变。<br>-当以匀速旋转设备的时候，注意陀螺仪的哪个通道输出值变化了，其他输出应该保持不变。<br>- 在陀螺仪绕Y轴旋转（在XZ平面内旋转）的时候输出值变化的就是AdcGyroXZ，用于计算RateAxz<br>-最后一步，确认旋转的方向是否和我们的模型对应，因为陀螺仪和加速度的位置关系，有时候你可能要把RateAxz值反向<br>-重复上面的测试，将设备绕Y轴旋转，这次查看加速度计的X轴输出（也就是AdcRx）。如果AdcRx增大（从水平位置开始旋转的第一个90°），那AdcGyroXZ应当减小。这是因为我们观察的是重力矢量，当设备朝一个方向旋转时矢量会朝相反的方向旋转（相对坐标系运动）。所以，如果你不想反转RateAxz，你可以在 <strong>公式3</strong>中引入正负号来解决这个问题：<br>RateAxz = InvertAxz * (AdcGyroXZ * Vref / 1023 – VzeroRate) / Sensitivity ,其中InvertAxz= 1 或-1<br>同样的方法可以用来测试RateAyz，将设备绕X轴旋转，你就能测出陀螺仪的哪个输出对应于RateAyz，以及它是否需要反转。一旦你确定了InvertAyz，你就能可以用下面的公式来计算RateAyz：<br>RateAyz = InvertAyz * (AdcGyroYZ * Vref / 1023 – VzeroRate) / Sensitivity<br>如果对Acc Gyro板进行这些测试，你会得到下面的这些结果：<br>- RateAxz的输出管脚是GX4，InvertAxz = 1<br>- RateAyz输出管脚是GY4，InvertAyz = 1<br>从现在开始我们认为你已经设置好了IMU模块并能计算出正确的Axr，Ayr，Azr值（在第一部分加速度计中定义）以及RateAyz，RateAyz（在第二部分陀螺仪中）。下一步，我们分析这些值之间的关系并得到更准确的设备和地平面之间的倾角。<br>你可能会问自己一个问题，如果加速度计已经告诉我们Axr，Ayr，Azr的倾角，为什么还要费事去得到陀螺仪的数据？答案很简单：加速度计的数据不是100%准确的。有几个原因，还记加速度计测量的是惯性力，这个力可以由重力引起（理想情况只受重力影响），当也可能由设备的加速度（运动）引起。因此，就算加速度计处于一个相对比较平稳的状态，它对一般的震动和机械噪声很敏感。这就是为什么大部分的IMU系统都需要陀螺仪来使加速度计的输出更平滑。但是怎么办到这点呢？陀螺仪不受噪声影响吗？<br>陀螺仪也会有噪声，但由于它检测的是旋转，因此对线性机械运动没那么敏感，不过陀螺仪有另外一种问题，比如漂移（当选择停止的时候电压不会回到零速率电压）。然而，通过计算加速度计和陀螺仪的平均值我们能得到一个相对更准确的当前设备的倾角值，这比单独使用加速度计更好。<br>接下来的步骤我会介绍一种算法，算法受卡尔曼滤波中的一些思想启发，但是它更简单并且更容易在嵌入式设备中实现。在此之前，让我们先看看我们需要算法计算什么值。所要算的就是重力矢量R=[Rx,Ry,Rz]，它可由其他值推导出来，如Axr，Ayr，Azr或者cosX，cosY，cosZ，由这些值我们能得到设备相对地平面的倾角值，这些关系我们在第一部分已经讨论过。有人可能会说-根据第一部分的 公式2我们不是已经得到Rx，Ry，Rz的值了吗？是的，但是记住，这些值只是由加速度计数据推导出来的，如果你直接将它们用于你的程序你会得到难以忍受的噪声。为了避免进一步的混乱，我们重新定义加速度计的测量值：<br>Racc – 是由加速度计测量到得惯性力矢量，它可分解为下面的分量（在XYZ轴上的投影）：<br>RxAcc = (AdcRx * Vref / 1023 – VzeroG) / Sensitivity<br>RyAcc = (AdcRy * Vref / 1023 – VzeroG) / Sensitivity<br>RzAcc = (AdcRz * Vref / 1023 – VzeroG) / Sensitivity<br>现在我们得到了一组只来自于加速度计ADC的值。我们把这组数据叫做“vector”，并使用下面的符号：<br>Racc = [RxAcc,RyAcc,RzAcc]<br>因为这些Racc的分量可由加速度计数据得到，我们可以把它当做算法的输入。<br>请注意Racc测量的是重力，如果你得到的矢量长度约等于1g那么你就是正确的：<br>|Racc| = SQRT(RxAcc^2 +RyAcc^2 + RzAcc^2),<br>但是请确定把矢量转换成下面的矢量非常重要：<br>Racc(normalized) = [RxAcc/|Racc| , RyAcc/|Racc| , RzAcc/|Racc|].<br>这可以确保标准化Racc始终是1。<br>接来下我们引进一个新的向量：<br>Rest = [RxEst,RyEst,RzEst]<br>这就是算法的输出值，它经过陀螺仪数据的修正和基于上一次估算的值。<br>这是算法所做的事：<br>-加速度计告诉我们：“你现在的位置是Racc”<br>我们回答：“谢谢，但让我确认一下”<br>-然后根据陀螺仪的数据和上一次的Rest值修正这个值并输出新的估算值Rest。<br>-我们认为Rest是当前设备姿态的“最佳值”。<br>让我们看看它是怎么实现的。<br>数列的开始，我们先认为加速度值正确并赋值：<br>Rest(0) = Racc(0)<br>Rest和Racc是向量，所以上面的式子可以用3个简单的式子代替，注意别重复了：<br>RxEst（0）= RxAcc（0）<br>RyEst（0）= RyAcc（0）<br>RzEst（0）= RzAcc（0）<br>接下来我们在每个等时间间隔T秒做一次测量，得到新的测量值，并定义为Racc（1），Racc（2），Racc（3）等等。同时，在每个时间间隔我们也计算出新的估算值Rest（1）,Rest（2），Rest（3），等等。<br>假设我们在第n步。我们有两列已知的值可以用：<br>Rest(n-1) – 前一个估算值，Rest(0) = Racc(0)<br>Racc(n) – 当前加速度计测量值<br>在计算Rest（n）前，我们先引进一个新的值，它可由陀螺仪和前一个估算值得到。<br>叫做Rgyro，同样它是个矢量并由3个分量组成：<br>Rgyro = [RxGyro,RyGyro,RzGyro]<br>我们分别计算这个矢量的分量，从RxGyro开始。<br><img src="http://image.geek-workshop.com/forum/201208/22/163901qa8wfgaj8z8ca8kk.png" alt="10.png" loading="lazy"></p><p>2012-8-22 16:39 上传</p><p><a href="http://blog.csdn.net/zhuanghe_xing/article/details/forum.php?mod=attachment&amp;aid=NjQyMnwxZDk2MjFlNXwxMzQ2NTg2MjYwfDMxOTV8MTY5NQ%3D%3D&amp;nothumb=yes"><strong>下载附件</strong>(12.55 KB)</a></p><p>首先观察陀螺仪模型中下面的关系，根据由Rz和Rxz组成的直角三角形我们能推出：<br>tan(Axz) = Rx/Rz =&gt; Axz = atan2(Rx,Rz)<br>你可能从未用过atan2这个函数，它和atan类似，但atan返回值范围是（-PI/2,PI/2），atan2返回值范围是（-PI，PI），并且他有两个参数。它能将Rx，Rz值转换成360°（-PI，PI）内的角度。更多信息请阅读 <a href="http://en.wikipedia.org/wiki/Atan2">atan2</a>.<br>所以，知道了RxEst（n-1）和RzEst（n-1）我们发现：<br>Axz(n-1) = atan2( RxEst(n-1) , RzEst(n-1) ).<br>记住，陀螺仪测量的是Axz角度变化率，因此，我们可以按如下方法估算新的角度Axz（n）：<br>Axz(n) = Axz(n-1) + RateAxz(n) * T<br>请记住，RateAxz可由陀螺仪ADC读取得到。通过使用平均转速可由得到一个更准确的公式：<br>RateAxzAvg =（RateAxz（N）+ RateAxz（N-1））/ 2<br>Axz(n) = Axz(n-1) + RateAxzAvg * T<br>同理可得：<br>Ayz(n) = Ayz(n-1) + RateAyz(n) * T<br>好了，现在我们有了Axz（n），Ayz（n）。现在我们如何推导出RxGyro/RyGyro?根据 公式1我们可以把Rgyro长度写成下式：<br>| Rgyro | = SQRT（RxGyro ^ 2 + RyGyro ^ 2 + RzGyro ^ 2）<br>同时，因为我们已经将Racc标准化，我们可以认为它的长度是1并且旋转后保持不变，所以写成下面的方式相对比较安全：<br>| Rgyro | = 1<br>我们暂时采用更短的符号进行下面的计算：<br>x =RxGyro , y=RyGyro, z=RzGyro<br>根据上面的关系可得：<br>x = x / 1 = x / SQRT(x^2+y^2+z^2)<br>分子分母同除以SQRT（X ^ 2 + Z ^ 2）<br>x = ( x / SQRT(x^2 + z^2) ) / SQRT( (x^2 + y^2 + z^2) / (x^2 + z^2) )<br>注意x / SQRT(x^2 + z^2) = sin(Axz), 所以:<br>x = sin(Axz) / SQRT (1 + y^2 / (x^2 + z^2) )<br>将SQRT内部分式的分子分母同乘以z^2<br>x = sin(Axz) / SQRT (1 + y^2 * z ^2 / (z^2 * (x^2 + z^2)) )<br><strong>注意 z / SQRT(x^2 + z^2) = cos(Axz)， y / z = tan(Ayz), 所以最后可得:</strong><br>x = sin(Axz) / SQRT (1 + cos(Axz)^2 * tan(Ayz)^2 )<br>替换成原来的符号可得：<br>RxGyro = sin(Axz(n)) / SQRT (1 + cos(Axz(n))^2 * tan(Ayz(n))^2 )<br>同理可得：<br>RyGyro = sin(Ayz(n)) / SQRT (1 + cos(Ayz(n))^2 * tan(Axz(n))^2 )<br>提示：这个公式还可以更进一步简化。分式两边同除以sin（axz（你））可得：<br>RxGyro = 1 / SQRT (1/ sin(Axz(n))^2 + cos(Axz(n))^2 / sin(Axz(n))^2 * tan(Ayz(n))^2 )<br>RxGyro = 1 / SQRT (1/ sin(Axz(n))^2 + cot(Axz(n))^2 * sin(Ayz(n))^2 / cos(Ayz(n))^2 )<br>现在加减  cos(Axz(n))^2/sin(Axz(n))^2  = cot(Axz(n))^2<br>RxGyro = 1 / SQRT (1/ sin(Axz(n))^2 - cos(Axz(n))^2/sin(Axz(n))^2  + cot(Axz(n))^2 * sin(Ayz(n))^2 / cos(Ayz(n))^2 + cot(Axz(n))^2 )<br>综合条件1、2和3、4可得：<br>RxGyro = 1 / SQRT (1 +  cot(Axz(n))^2 * sec(Ayz(n))^2 ),   其中 cot(x) = 1 / tan(x) ， sec(x) = 1 / cos(x)<br>这个公式只用了2个三角函数并且计算量更低。如果你有Mathematica程序，通过使用 FullSimplify [Sin[A]^2/ ( 1 + Cos[A]^2 * Tan[B]^2)]你可以验证这个公式。</p><p>现在我们发现：<br>RzGyro = Sign(RzGyro)*SQRT(1 – RxGyro^2 – RyGyro^2).<br>其中，当 RzGyro&gt;=0时，Sign(RzGyro) = 1 , 当 RzGyro&lt;0时，Sign(RzGyro) = -1 。<br>一个简单的估算方法：<br>Sign(RzGyro) = Sign(RzEst(n-1))<br>在实际应用中，当心RzEst（n-1）趋近于0。这时候你可以跳过整个陀螺仪阶段并赋值：Rgyro=Rest（n-1）。Rz可以用作计算Axz和Ayz倾角的参考，当它趋近于0时，它可能会溢出并引发不好的后果。这时你会得到很大的浮点数据，并且tan()/atan()函数得到的结果会缺乏精度。</p><p>现在我们回顾一下已经得到的结果，我们在算法中的第n步，并计算出了下面的值：<br>Racc – 加速度计读取的当前值<br>Rgyro –根据Rest(-1)和当前陀螺仪读取值所得<br>我们根据哪个值来更新Rest（n）呢？你可能已经猜到，两者都采用。我们会用一个加权平均值，得：<br>Rest(n) = (Racc * w1 + Rgyro * w2 ) / (w1 + w2)<br>分子分母同除以w1，公式可简化成：<br>Rest(n) = (Racc * w1/w1 + Rgyro * w2/w1 ) / (w1/w1 + w2/w1)<br>令w2=w1=wGyro，可得：<br>Rest(n) = (Racc + Rgyro * wGyro ) / (1 + wGyro)<br>在上面的公式中，wGyro表示我们对加速度计和陀螺仪的相信程度。这个值可以通过测试确定，根据经验值5-20之间会得到一个很好的结果。<br>此算法和卡尔曼滤波最主要的差别是它的权重是相对固定的，而卡尔曼滤波中的权重会随着加速度计读取的噪声而改变。卡尔曼滤波注重给你一个“最好”的理论结果，而此算法给你的是实际项目中“够用”的结果。你可以实现一个算法，它能根据测量的噪声而改变wGyro值，但对大部分应用来说固定的权重也能工作的很好。<br>现在得到最新的估算值还差一步：<br>RxEst(n) = (RxAcc + RxGyro * wGyro ) / (1 + wGyro)<br>RyEst(n) = (RyAcc + RyGyro * wGyro ) / (1 + wGyro)<br>RzEst(n) = (RzAcc + RzGyro * wGyro ) / (1 + wGyro)<br>现在，再次标准化矢量：<br>R = SQRT(RxEst(n) ^2 + RyEst(n)^2 + RzEst(n)^2 )<br>RxEst(n) = RxEst(n)/R<br>RyEst(n) = RyEst(n)/R<br>RzEst(n) = RzEst(n)/R<br>现在，可以再次进行下一轮循环了。<br>**注：**关于此算法的具体实现和测试，请阅读这篇文章：<br><a href="http://starlino.com/imu_kalman_arduino.html">http://starlino.com/imu_kalman_arduino.html</a></p><p>加速度计和陀螺仪IMU融合的其他资源：<br><a href="http://www.mikroquad.com/pub/Research/ComplementaryFilter/filter.pdf">http://www.mikroquad.com/pub/Res … ryFilter/filter.pdf</a></p><p><a href="http://stackoverflow.com/questions/1586658/combine-gyroscope-and-accelerometer-data">http://stackoverflow.com/questio … -accelerometer-data</a><br><a href="http://www.dimensionengineering.com/accelerometers.htm">http://www.dimensionengineering.com/accelerometers.htm</a></p>]]></content>
    
    
    <summary type="html">&lt;center&gt;   &lt;/center&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>陀螺仪2--九轴</title>
    <link href="https://www.darkfox.top/posts/962b2335/"/>
    <id>https://www.darkfox.top/posts/962b2335/</id>
    <published>2021-07-27T13:50:59.000Z</published>
    <updated>2021-07-27T14:13:08.766Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span><h1>前言</h1><p>传感器的调试过程，一般根据原厂提供demo代码，调试数据接口，将数据流打通即可，在VR中，当带上头显设备，运行应用时，出现漂移、延迟、不回归问题，往往束手无策，解决这些小问题，往往占用很多的时间，希望通过自己整理的知识，明确调试的方向，提高调试效率，达到好的调试效果。自己近几年在Android平台上导入过多种9轴传感器，做过一些sensor内部分享，而且近半年来从事VR开发工作，VR对9轴传感器要求比手机、平板严格更多，遇到的问题也更多，在开发过程中不断学习和思考，与传感器原厂RD沟通和学习，对9轴传感器有了更深的认识，这整理、分享一下所学知识，希望这篇文章对大家理解9轴传感器有所帮助,:)，欢迎大家批评指正。</p><h1>9轴传感器</h1><p>9轴传感器包括3轴加速度计、3轴陀螺仪、3轴磁力计，在实际应用中，需要把这些数据需要经过融合算法后，才能够被应用程序使用，下面对每种传感器功能、原理以及融合算法进行介绍。</p><h2 id="加速度计">加速度计</h2><p>人们常说的G-sensor，用来检测物理在X、Y、Z轴上的重力加速度，单位:m/s^2.<br>以手机为例，X、Y、Z轴如下图所示（右手坐标系）：<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101251281" alt="这里写图片描述" loading="lazy"><br>当手机平放在桌面时，Z轴指向天空，这时候X、Y轴的数值接近为0，Z轴的重力加速度约为9.81m/s^2，将手机翻转后，即屏幕面朝向桌面，此时的Z轴重力加速度约为-9.81m/s^2。<br>X、Y轴指向天空时，与上面Z轴同理，有兴趣的可以在手机上安装一个”sensor_list.apk”来抓取这些数据。</p><ul><li>原理<br><a href="http://www.starlino.com/imu_guide.html">这里是英文介绍</a>，中文版本如下：<br>当我们在想象一个加速度计的时候我们可以把它想作一个圆球在一个方盒子中。你可能会把它想作一个饼干或者甜圈，但我就把它当做一个球好了：<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101306719" alt="这里写图片描述" loading="lazy"><br>我们假定这个盒子不在重力场中或者其他任何会影响球的位置的场中，球处于盒子的正中央。你可以想象盒子在外太空中，远离任何天体，如果很难想象，那就当做盒子在航天飞机中，一切东西都处于无重力状态。在上面的图中你可以看到我们给每个轴分配了一对墙（我们移除了Y+以此来观察里面的情况）。设想每面墙都能感测压力。如果我们突然把盒子向左移动（加速度为1g=9.8m/s^2），那么球会撞上X-墙。然后我们检测球撞击墙面产生的压力，根据F=ma，计算出X轴加速度输出值为-1g。<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101317203" alt="这里写图片描述" loading="lazy"><br>请注意加速度计检测到的力方向与它本身加速度的方向是相反的。这种力量通常被称为惯性力或假想力 。在这个模型中你应该明白加速度计是通过间接测量力对一个墙面的作用来测量加速度的，在实际应用中，可能通过弹簧等装置来测量力。这个力可以是加速度引起的，但在下面的例子中，我们会发现它不一定是加速度引起的。<br>如果我们把模型放在地球上，球会落在Z-墙面上并对其施加一个1g的力，见下图：<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101342743" alt="这里写图片描述" loading="lazy"><br>在这种情况下盒子没有移动但我们任然读取到Z轴有-1g的值。球在墙壁上施加的压力是由引力造成的。在理论上，它可以是不同类型的力量，例如，你可以想象我们的球是铁质的，将一个磁铁放在盒子旁边那球就会撞上另一面墙。引用这个例子只是为了说明加速度计的本质是检测力而非加速度。只是加速度所引起的惯性力正好能被加速度计的检测装置所捕获。<br>虽然这个模型并非一个MEMS传感器的真实构造，但它用来解决与加速度计相关的问题相当有效。实际上有些类似传感器中有金属小球，它们称作倾角开关，但是它们的功能更弱，只能检测设备是否在一定程度内倾斜，却不能得到倾斜的程度。<br>到目前为止，我们已经分析了单轴的加速度计输出，这是使用单轴加速度计所能得到的。三轴加速度计的真正价值在于它们能够检测全部三个轴的惯性力。让我们回到盒子模型，并将盒子向右旋转45度。现在球会与两个面接触：Z-和X-，见下图：<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101354118" alt="这里写图片描述" loading="lazy"><br>0.71g这个值是不是任意的，它们实际上是1/2的平方根的近似值。我们介绍加速度计的下一个模型时这一点会更清楚。<br>在上一个模型中我们引入了重力并旋转了盒子。在最后的两个例子中我们分析了盒子在两种情况下的输出值，力矢量保持不变。虽然这有助于理解加速度计是怎么和外部力相互作用的，但如果我们将坐标系换为加速度的三个轴并想象矢量力在周围旋转，这会更方便计算。<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101540369" alt="这里写图片描述" loading="lazy"><br>请看看在上面的模型，我保留了轴的颜色，以便你的思维能更好的从上一个模型转到新的模型中。想象新模型中每个轴都分别垂直于原模型中各自的墙面。矢量R是加速度计所检测的矢量（它可能是重力或上面例子中惯性力的合成）。RX，RY，RZ是矢量R在X，Y，Z上的投影。请注意下列关系：<br>R ^ 2 = RX ^ 2 + RY ^ 2 + RZ ^ 2（公式1）<br>此公式等价于三维空间勾股定理。<br>还记得我刚才说的1/2的平方根0.71不是个随机值吧。如果你把它们代回上式，回顾一下重力加速度是1g，那我们就能验证：<br>1 ^ 2 =（SQRT（1/2））^ 2 + 0 ^ 2 +（SQRT（1/2））^ 2<br>在公式1中简单的取代： R=1, Rx = -SQRT(1/2), Ry = 0 , Rz = -SQRT(1/2)<br>经过一大段的理论序言后，我们和实际的加速度计很靠近了。RX，RY，RZ值是实际中加速度计输出的线性相关值，你可以用它们进行各种计算。<br>在我们运用它之前我们先讨论一点获取加速度计数据的方法。大多数加速度计可归为两类：数字和模拟。数字加速度计可通过I2C，SPI或USART方式获取信息，而模拟加速度计的输出是一个在预定范围内的电压值，你需要用ADC（模拟量转数字量）模块将其转换为数字值。我将不会详细介绍ADC是怎么工作的，部分原因是这是个很广的话题，另一个原因是不同平台的ADC都会有差别。有些MCU具有内置ADC模块，而有些则需要外部电路进行ADC转换。不管使用什么类型的ADC模块，你都会得到一个在一定范围内的数值。例如一个10位ADC模块的输出值范围在0 … 1023间，请注意，1023 = 2 ^ 10 -1。一个12位ADC模块的输出值范围在0 … 4095内，注意，4095 = 2 ^ 12-1。<br>我们继续，先考虑下一个简单的例子，假设我们从10位ADC模块得到了以下的三个轴的数据：<br>AdcRx = 586<br>AdcRy = 630<br>AdcRz = 561<br>每个ADC模块都有一个参考电压，假设在我们的例子中，它是3.3V。要将一个10位的ADC值转成电压值，我们使用下列公式：<br>VoltsRx = AdcRx * VREF / 1023<br>小注：8位ADC的最大值是255 = 2 ^ 8 -1，12位ADC最大值是4095 = 2 ^ 12 -1。<br>将3个轴的值代入上式，得到：<br>VoltsRx = 586 * 3.3 / 1023 =～1.89V（结果取两位小数）<br>VoltsRy = 630 * 3.3 / 1023 =～2.03V<br>VoltsRz = 561 * 3.3 / 1023 =～1.81V<br>每个加速度计都有一个零加速度的电压值，你可以在它的说明书中找到，这个电压值对应于加速度为0g。通过计算相对0g电压的偏移量我们可以得到一个有符号的电压值。比方说，0g电压值 VzeroG= 1.65V，通过下面的方式可以得到相对0g电压的偏移量:<br>DeltaVoltsRx = 1.89V - 1.65V = 0.24V<br>DeltaVoltsRy = 2.03V - 1.65V = 0.38V<br>DeltaVoltsRz = 1.81V - 1.65V = 0.16V<br>现在我们得到了加速度计的电压值，但它的单位还不是g（9.8m/s^2），最后的转换，我们还需要引入加速度计的灵敏度（Sensitivity），单位通常是 mV/g。比方说，加速度计的灵敏度 Sensitivity= 478.5mV / g = 0.4785V /g。灵敏度值可以在加速度计说明书中找到。要获得最后的单位为g的加速度，我们使用下列公式计算：<br>RX = DeltaVoltsRx /Sensitivity<br>RX = 0.24V / 0.4785V / G =～0.5g<br>RY = 0.38V / 0.4785V / G =～0.79g<br>RZ = 0.16V / 0.4785V / G =～0.33g<br>当然，我们可以把所有的步骤全部放在一个式子里，但我想通过介绍每一个步骤以便让你了解怎么读取一个ADC值并将其转换为单位为g的矢量力的分量。<br>Rx = (AdcRx * Vref / 1023 – VzeroG) / Sensitivity (公式2)<br>Ry = (AdcRy * Vref / 1023 – VzeroG) / Sensitivity<br>Rz = (AdcRz * Vref / 1023 – VzeroG) / Sensitivity<br>现在我们得到了惯性力矢量的三个分量，如果设备除了重力外不受任何外力影响，那我们就可以认为这个方向就是重力矢量的方向。如果你想计算设备相对于地面的倾角，可以计算这个矢量和Z轴之间的夹角。如果你对每个轴的倾角都感兴趣，你可以把这个结果分为两个分量：X轴、Y轴倾角，这可以通过计算重力矢量和X、Y轴的夹角得到。计算这些角度比你想象的简单，现在我们已经算出了Rx，Ry，Rz的值，让我们回到我们的上一个加速度模型，再加一些标注上去：<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101555463" alt="这里写图片描述" loading="lazy"><br>我们感兴趣的角度是向量R和X，Y，Z轴之间的夹角，那就令这些角度为Axr，Ayr，Azr。观察由R和Rx组成的直角三角形：<br>cos(Axr) = Rx / R , 类似的：<br>cos(Ayr) = Ry / R<br>cos(Azr) = Rz / R<br>从公式1我们可以推导出 R = SQRT( Rx^2 + Ry^2 + Rz^2)<br>通过arccos()函数（cos()的反函数）我们可以计算出所需的角度：<br>Axr = arccos(Rx/R)<br>Ayr = arccos(Ry/R)<br>Azr = arccos(Rz/R)<br>我们花了大段的篇幅来解释加速度计模型，最后所要的只是以上这几个公式。根据你的应用场合，你可能会用到我们推导出来的几个过渡公式。我们接下来要介绍陀螺仪模块，并向大家介绍怎么融合加速度计和陀螺仪的数据以得到更精确的倾角值。<br>但在此之前，我们再介绍几个很常用的公式：<br>cosX = cos(Axr) = Rx / R<br>cosY = cos(Ayr) = Ry / R<br>cosZ = cos(Azr) = Rz / R<br>这三个公式通常称作方向余弦 ，它主要表达了单位向量（长度为1的向量）和R向量具有相同的方向。你可以很容易地验证：<br>SQRT（cosX ^ 2 + COSY ^ 2 + cosZ ^ 2）= 1<br>这是个很好的性质，因为它避免了我们一直检测R向量的模（长度）。通常如果我们只是对惯性力的方向感兴趣，那标准化模长以简化其他计算是个明智的选择。</li><li>常用加速度传感器<br>加速度计种类繁多，MMA、LSM、MPU、BMA等系列，如：MMA7460、MMA8452、MPU6050（A+G）、MPU6800(A+G)、LSM6DSL(A+G)、IMC20603(A+G)、MPU9150（A+G+M）</li><li>使用场景<br>加速度计通过一定的算法，就可以做成我们常用的功能，如：计步器、拍照防抖、GPS补偿、跌落保护、图像旋转、游戏控制器等。</li></ul><h2 id="陀螺仪">陀螺仪</h2><p>通常称为Gyro-sensor，用来测量在X、Y、Z轴上的旋转速率，单位:rad/s。<br>以手机为例，将手机平放桌面，屏幕朝上，以逆时针方向旋转手机，获得到的是Z轴的加速度值。<br>有兴趣可以安装“sensor_list.apk”工具，来查看X、Y、Z轴的加速度值。</p><ul><li>原理<br>对于陀螺仪我们将不会像加速度计一样介绍它的等价盒子模型，而是直接跳到加速度计的第二个模型，通过这个模型我们会向大家介绍陀螺仪是怎么工作的。<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101615317" alt="这里写图片描述" loading="lazy"><br>陀螺仪的每个通道检测一个轴的旋转。例如，一个2轴陀螺仪检测绕X和Y轴的旋转。为了用数字来表达这些旋转，我们先引进一些符号。首先我们定义：<br>Rxz – 惯性力矢量R在XZ平面上的投影<br>Ryz – 惯性力矢量R在YZ平面的上投影<br>在由Rxz和Rz组成的直角三角形中，运用勾股定理可得：<br>Rxz^2 = Rx^2 + Rz^2 ，同样：<br>Ryz^2 = Ry^2 + Rz^2<br>同时注意：<br>R^2 = Rxz^2 + Ry^2 ，这个公式可以公式1和上面的公式推导出来，也可由R和Ryz所组成的直角三角形推导出来<br>R ^ 2 = Ryz ^ 2 + RX ^ 2<br>在这篇文章中我们不会用到这些公式，但知道模型中的那些数值间的关系有助于理解。<br>相反，我们按如下方法定义Z轴和Rxz、Ryz向量所成的夹角：<br>AXZ - Rxz（矢量R在XZ平面的投影）和Z轴所成的夹角<br>AYZ - Ryz（矢量R在YZ平面的投影）和Z轴所成夹角<br>现在我们离陀螺仪要测量的东西又近了一步。陀螺仪测量上面定义的角度的变化率。换句话说，它会输出一个与上面这些角度变化率线性相关的值。为了解释这一点，我们先假设在t0时刻，我们已测得绕Y轴旋转的角度（也就是Axz），定义为Axz0，之后在t1时刻我们再次测量这个角度，得到Axz1。角度变化率按下面方法计算：<br>RateAxz = (Axz1 – Axz0) / (t1 – t0).<br>如果用度来表示角度，秒来表示时间，那这个值的单位就是 度/秒。这就是陀螺仪检测的东西。<br>在实际运用中，陀螺仪一般都不会直接给你一个单位为度/秒的值（除非它是个特殊的数字陀螺仪）。就像加速度计一样，你会得到一个ADC值并且要用类似公式2的式子将其转换成单位为 度/秒的值。让我们来介绍陀螺仪输出值转换中的ADC部分（假设使用10位ADC模块，如果是8位ADC，用1023代替255，如果是12为ADC用4095代替1023）。<br>RateAxz = (AdcGyroXZ * Vref / 1023 – VzeroRate) / Sensitivity 公式3<br>RateAyz = (AdcGyroYZ * Vref / 1023 – VzeroRate) / Sensitivity<br>AdcGyroXZ，AdcGyroYZ - 这两个值由ADC读取，它们分别代表矢量R的投影在XZ和YZ平面内里的转角，也可等价的说，旋转可分解为单独绕Y和X轴的运动。<br>Vref – ADC的参考电压，上例中我们使用3.3V<br>VzeroRate – 是零变化率电压，换句话说它是陀螺仪不受任何转动影响时的输出值，对调试板来说，可以认为是1.23V（此值通常可以在说明书中找到——但千万别相信这个值，因为大多数的陀螺仪在焊接后会有一定的偏差，所以可以使用电压计测量每个通道的输出值，通常这个值在焊接后就不会改变，如果有跳动，在设备使用前写一个校准程序对其进行测量，用户应当在设备启动的时候保持设备静止以进行校准）。<br>Sensitivity –陀螺仪的灵敏度，单位mV/(deg/s)，通常写作mV/deg/s,它的意思就是如果旋转速度增加1°/s,陀螺仪的输出就会增加多少mV。调试板的灵敏度值是2mV/deg/s或0.002V/deg/s<br>让我们举个例子，假设我们的ADC模块返回以下值：<br>AdcGyroXZ = 571<br>AdcGyroXZ = 323<br>用上面的公式，在代入调试板的参数，可得：<br>RateAxz = (571 * 3.3V / 1023 – 1.23V) / ( 0.002V/deg/s) =~ 306 deg/s<br>RateAyz = (323 * 3.3V / 1023 – 1.23V) / ( 0.002V/deg/s) =~ -94 deg/s<br>换句话说设备绕Y轴（也可以说在XZ平面内）以306°/s速度和绕X轴（或者说YZ平面内）以-94°/s的速度旋转。请注意，负号表示该设备朝着反方向旋转。按照惯例，一个方向的旋转是正值。一份好的陀螺仪说明书会告诉你哪个方向是正的，否则你就要自己测试出哪个旋转方向会使得输出脚电压增加。最好使用示波器进行测试，因为一旦你停止了旋转，电压就会掉回零速率水平。如果你使用的是万用表，你得保持一定的旋转速度几秒钟并同时比较电压值和零速率电压值。如果值大于零速率电压值那说明这个旋转方向是正向。</li><li>常用陀螺仪传感器<br>目前市面上较多的都是二合一模块（加速度+陀螺仪），如：MPU6050（A+G）、MPU6800(A+G)、LSM6DSL(A+G)、IMC20603(A+G)、MPU9150（A+G+M）。</li><li>使用场景<br>航海、航空、游戏、拍照防抖、控制等。</li></ul><h2 id="磁力计">磁力计</h2><ul><li>原理<br><a href="http://www.stmcu.org/article/id-261634">ST对电子罗盘的详细介绍</a>。</li><li>常用磁力计传感器<br>AKM8963（很经典的一颗，目前停产）、AKM09911、AKM09915、LIS3MDL，磁传感器目前还是AKM一家独大，其他家的性能差距还是比较明显的。</li><li>使用场景<br>主要是指南针，在应用中对6轴数据进行偏航校正。</li></ul><h2 id="融合算法">融合算法</h2><p>想想我们为什么需要9轴的数据来确认物体的姿态呢？有了加速度计数据可以确定物体摆放的状态，例如有加速度计的手机，可以根据手机的横竖屏状态来触发屏幕相应的旋转，但对于物体的翻转、旋转的快慢无从得知，检测不到物体的瞬时状态，这时候就需要加入陀螺仪，通过加速度和陀螺仪的积分运算（这部分计算可以看下面Oculus的融合算法说明），可以获得到物体的运动状态，积分运算与真实状态存在微小差值，短时间内影响很小，但这个误差会一直累积，随着使用时间增加，就会有明显的偏离，6轴的设备，在转动360度后，图像并不能回到原点，就是这个原因，就像人迷路后找不着北一样，这时候就需要一个准确的方向，因此引入磁力计，来找到正确的方向进行校正。融合算法是通过这9轴的数据来计算出物体正确的姿态。目前9轴融合算法包括卡尔曼滤波、粒子滤波、互补滤波算法，对于开发者而言，所有的融合算法本基本都是丢入9轴传感器的数据和时间戳，然后获取到融合算法输出的四元素，应用所需的就是这组四元素，目前我这里接触到的算法包括：</p><ul><li>Oculus融合算法<br>目前卡尔曼滤波和例子滤波都存在一定的局限性，比较好的选择是互补滤波算法，之前翻译过oculus传感器算法<a href="http://blog.csdn.net/dabenxiong666/article/details/52957370">Oculus:”sensor fusion:Keeping It Simple”</a><br>它的代码实现在openHMD中ofusion_update接口中，有兴趣可以下载openHMD来研究一下。<br><strong>注</strong>：openHMD中的oculus融合算法（已更新于2016.12.01），我们曾经把它应用到项目当中，后来发现这部分算法不包含航向偏移校正。</li><li>互补滤波算法<br>MIT上发表的互补滤波算法的原理和基于Android平台的算法实现，很完整的算法，oculus的算法也是基于互补滤波的，个人认为目前入门融合算法最好的选择<a href="https://www.codeproject.com/articles/729759/android-sensor-fusion-tutorial">MIT互补滤波算法</a>。</li><li>AHRS<br>在四轴飞行器论坛上，比较多人使用AHRS开源融合算法,<a href="https://github.com/TobiasSimon/MadgwickTests/blob/master/MadgwickAHRS.c">这里获取源码</a><br>如果是爱好者，使用开源的算法能满足大多数的需求，另外可以看一下AMO论坛上的这个讨论<a href="http://www.amobbs.com/thread-5492189-1-1.html">捷联惯导算法心得</a>。<br>产品化还是依赖原厂提供的算法。</li></ul><h2 id="传感器调试">传感器调试</h2><p>这里不对特定平台（MCU、Android、Linux等），传感器通讯接口（I2C、SPI等）、数据传递子系统(input、IIO等)详细说明，这部分代码由各sensor厂家直接提供，这里主要说明一下调试基本流程和方法：</p><ul><li>通讯接口<br>传感器IC的通讯接口I2C或SPI，通讯接口能够读写正常即可。</li><li>寄存器配置<br>寄存器参数配置，一般原厂会提供，根据自己需求设置full scale(量程)、ODR（采样速率）、中断、休眠模式 即可。</li><li>坐标系转换<br>这3种传感器在实际应用中，都需要调整IC的坐标系与实际坐标系相匹配。IC的坐标系是固定的，参考规格书，这里以20602为例：<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101725183" alt="这里写图片描述" loading="lazy"><br>而实际应用当中，也有自己的坐标系，手机应用（右手坐标系）：<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101733085" alt="这里写图片描述" loading="lazy"><br>unity应用（左手坐标系）：<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101748589" alt="这里写图片描述" loading="lazy"><br>坐标系的匹配，一般通过驱动的旋转矩阵，来调整。这里需要注意，融合算法一般直接适配的是右手坐标系，而VR应用多数是基于unity引擎开发的，即采用左手坐标系，这里不能将IC的坐标系直接与左手坐标系做匹配，否则会有漂移！这个转换应用会有对应的API去做转换，将驱动坐标系与世界坐标系匹配。</li><li>硬件环境<br>另外传感器对于硬件有所要求，比如IC摆放不能靠近边缘，下方走线规范，附近几毫米内不允许有大电流，马达，软磁、硬磁干扰等等，这方面最好是把PCB给原厂审核，磁方面用他们专门的设备扫描磁力计周围的磁场环境是否正常。<br>基本理论搞清楚调试起来就会得心应手，这里提供一个<a href="http://download.csdn.net/detail/dabenxiong666/9718883?locationNum=4&amp;fps=1">Android平台调试sensor的文档</a>，其他平台类似。</li></ul><h2 id="9轴方案选择">9轴方案选择</h2><p>上面主要对传感器的知识做了一些整理和归纳，下面是我们在做9轴方案选择的一些实验,目前选择市面上使用较多的两家（ST和Invensense）9轴方案进行评估、测试，均是用官方建议最优方案，即：<br>ST:LSM6DSL+LIS3MDL<br>Invensense: imc20603+akm09915<br>对比内容包括静态、动态对比以及结合应用体验来评估2种传感器方案，<a href="https://drive.google.com/open?id=0Bx5hCqFqKCggZHRRdV80ZXk0MWc">测试数据包和测试视频</a>。</p><ul><li><p>静态数据</p><p>放置30秒后，开始采集5分钟静态数据,3000~5000组数据（包括欧拉角、四元素、磁数据），数据见附件中的“静态数据”表格</p><ul><li>静态漂移：<br>根据四元素均方差数据计算，5分钟内ST与Invensense静态角度偏差均小于1度，此项2种方案相同。</li><li>Yaw角偏移：<br>Yaw均方差数值接近(ST为0.19，invensense为0.20)，YAW角偏移大概在1度左右，此项2种方案相同。</li></ul></li><li><p>动态数据</p><ul><li>回归测试：<br>放置到固定位置，任意角度运动1分钟，运动过程未超量程（即：运动中，加速度不超过4g，陀螺仪不超过2000dps），放回原位置，然后对比运动前后，看应用的画面是否与运动前一致。如”回归测试视频”所示，Invensense的画面能够基本回到原来的位置，ST的有明显偏移,这个视频对于2种sensor的优劣还是比较明显的。<br>此项Invensense优于ST。</li><li>磁数据测试<br>固定桌面，缓慢旋转2周，抓取3500个数据点，通过matlab作图。<br>Invensense磁数据图：<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101802996" alt="这里写图片描述" loading="lazy"><br>ST磁数据图：<br><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20161223101810965" alt="这里写图片描述" loading="lazy"><br>说明:测试时，平放板子到桌面，然后缓慢旋转2周（绕Z轴旋转），上图x/y轴分别未经算法处理的X、Y的磁数据，因为ST和Invensense抓取到的磁数据放大倍数不同所以看起来数据量级不一样，但不影响判断，数据的放大倍数只影响圆的半径大小。磁数据是用来对航向（yaw）校正的，关系到9轴数据的准确性。从图上可以看出invensense的磁数据基本落在一个圆内，ST的磁数据在圆内、圆外都有很多离散的点，影响9周数据的准确性。<br>此项Invensense优于ST。</li></ul></li><li><p>应用体验</p><ul><li>收敛速度<br>结合应用测试，Invensense在运动后1秒内收敛完成，而ST的需要2-3秒的校正时间后，才能收敛完。<br>此项Invensense优于ST.</li></ul></li></ul><p>结论：静态数据2种方案相差不大，5分钟内偏移角度都在1度以内，且有磁力计可以纠正航向问题，都能满足需要，但在动态数据上，Invense明显优于ST，在实际体验中Invense收敛快，能回归，所以9轴方案Invensense优于ST。</p><h1>参考链接</h1><p><a href="https://developer3.oculus.com/blog/sensor-fusion-keeping-it-simple/">oculars sensor doc</a><br><a href="http://www.starlino.com/imu_guide.html">starlino Imu introduce</a><br><a href="https://developer.android.com/guide/topics/sensors/sensors_overview.html">goole sensor introduce</a><br><a href="http://www.geek-workshop.com/thread-1695-1-1.html">geek-workshop</a><br><a href="http://www.amobbs.com/thread-5492189-1-1.html">捷联惯导算法心得</a></p>]]></content>
    
    
    <summary type="html">&lt;center&gt;   &lt;/center&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>陀螺仪(1)--6050</title>
    <link href="https://www.darkfox.top/posts/aff2bd6e/"/>
    <id>https://www.darkfox.top/posts/aff2bd6e/</id>
    <published>2021-07-27T13:49:10.000Z</published>
    <updated>2021-07-27T14:33:26.875Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><span id="more"></span><h1>Ⅰ.陀螺仪</h1><p>陀螺仪是用高速回转体的动量矩敏感壳体相对惯性空间绕正交于自转轴的一个或二个轴的角运动检测装置。利用其他原理制成的角运动检测装置起同样功能的也称陀螺仪。<br>从力学的观点近似的分析陀螺的运动时，可以把它看成是一个刚体，刚体上有一个万向支点，而陀螺可以绕着这个支点作三个自由度的转动，所以陀螺的运动是属于刚体绕一个定点的转动运动。更确切地说，一个绕对称铀高速旋转的飞轮转子叫陀螺。将陀螺安装在框架装置上，使陀螺的自转轴有角转动的自由度，这种装置的总体叫做陀螺仪。<br>陀螺仪的原理就是，一个旋转物体的旋转轴所指的方向在不受外力影响时，是不会改变的。人们根据这个道理，用它来保持方向，制造出来的东西就叫陀螺仪。我们骑自行车其实也是利用了这个原理。轮子转得越快越不容易倒，因为车轴有一股保持水平的力量。陀螺仪在工作时要给它一个力，使它快速旋转起来，一般能达到每分钟几十万转，可以工作很长时间。然后用多种方法读取轴所指示的方向，并自动将数据信号传给控制系统。</p><h1>Ⅱ.MPU6050模块</h1><p>简介：<br>MPU6050内部整合了<strong>三轴MEMS陀螺仪</strong>、<strong>三轴MEMS加速度计</strong>以及一个可扩展的<strong>数字运动处理器DMP(Digital Motion Processor)</strong>，而且还可以连接一个第三方数字传感器(如磁力计)，这样的话，就可以通过IIC接口输出一个9轴信号(链接第三方数字传感器才可以输出九轴信号，否则只有六轴信号)。更加方便的是，有了DMP，可以结合InvenSense公司提供的运动处理资料库，实现姿态解算。通过自带的DMP，可以通过<strong>IIC接口</strong>输出9轴融合演算的数据，大大降低了运动处理运算对操作系统的负荷，同时也降低了开发难度。<em><strong>其实，简单一句话说，陀螺仪就是测角速度的，加速度传感器就是测角加速度的，二者数据通过算法就可以得到PITCH、YAW、ROLL角了。</strong></em></p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20140401183456562" alt="右手笛卡尔坐标系" loading="lazy"></p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20140401183518578" alt="img" loading="lazy"></p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20140401183525562" alt="img" loading="lazy"></p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20140401183537890" alt="img" loading="lazy"></p><p>特点：</p><ol><li>以数字形式输出 6 轴或 9 轴（需外接磁传感器）的旋转矩阵、四元数(quaternion)、欧拉角格式(Euler Angle forma)的融合演算数据（需 DMP 支持）</li><li>具有 131 LSBs/° /sec 敏感度与全格感测范围为±250、±500、±1000 与±2000° /sec的 3 轴角速度感测器(陀螺仪)</li><li>集成可程序控制，范围为±2g、±4g、±8g 和±16g 的 3 轴加速度传感器</li><li>移除加速器与陀螺仪轴间敏感度，降低设定给予的影响与感测器的飘移</li><li>自带数字运动处理(DMP: Digital Motion Processing)引擎可减少 MCU 复杂的融合演算数据、感测器同步化、姿势感应等的负荷</li><li>内建运作时间偏差与磁力感测器校正演算技术，免除了客户须另外进行校正的需求</li><li>自带一个数字温度传感器</li><li>带数字输入同步引脚(Sync pin)支持视频电子影相稳定技术与 GPS</li><li>可程序控制的中断(interrupt)，支持姿势识别、摇摄、画面放大缩小、滚动、快速下降中断、 high-G 中断、零动作感应、触击感应、摇动感应功能</li><li>VDD 供电电压为 2.5V±5%、 3.0V±5%、 3.3V±5%； VLOGIC 可低至 1.8V± 5%</li><li>陀螺仪工作电流： 5mA，陀螺仪待机电流： 5uA； 加速器工作电流：500uA，加速器省电模式电流： 40uA@10Hz</li><li>自带 1024 字节 FIFO，有助于降低系统功耗</li><li>高达 400Khz 的 IIC 通信接口</li><li>超小封装尺寸： 4x4x0.9mm（QFN）</li></ol><p>MPU6050三轴角(姿态角)<br><img src="https://img-blog.csdnimg.cn/20210527164308375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpaGFvdGlhbjExMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"><br><strong>绕向即为正方向，可根据右手螺旋定则确定方向。</strong><br>MPU6050框图：<br><img src="https://img-blog.csdnimg.cn/20210527152447545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpaGFvdGlhbjExMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy">可以很清晰地观察到，MPU6050芯片中内置了三轴加速度传感器、三轴陀螺仪和一个温度传感器。右侧INT为中断输出脚，TCS为片选脚、AD0为设置地址脚、SCL和SDA为主IIC接口、AUX_CL和AUX_DA为从IIC接口，主要用到的是AD0、SCL、SDA。</p><p>相关寄存器(想深入了解的朋友可以看一下)结合后面的代码更容易理解一些<br>①<br><img src="https://img-blog.csdnimg.cn/20210527153154426.jpg#pic_center" alt="在这里插入图片描述" loading="lazy"><br>DEVICE_RESE=1，复位MPU6050，复位完成后，自动清零。SLEEP=1，进入睡眠模式；SLEEP=0，正常工作模式。TEMP_DIS，用于设置是否使能温度传感器，设置为0，则使能CLKSEL[2:0]，用于选择系统时钟源，如下所示：</p><table><thead><tr><th>CLKSEL[2:0]</th><th>时钟源</th></tr></thead><tbody><tr><td>001</td><td>内部8M RC晶振</td></tr><tr><td>010</td><td>PLL，使用X轴陀螺作为参考</td></tr><tr><td>011</td><td>PLL，使用Y轴陀螺作为参考</td></tr><tr><td>100</td><td>PLL，使用Z轴陀螺作为参考</td></tr><tr><td>101</td><td>PLL，使用外部32.768Khz作为参考</td></tr><tr><td>110</td><td>PLL，使用外部19.2Mhz作为参考</td></tr><tr><td>11</td><td>保留</td></tr><tr><td>001</td><td>关闭时钟，保持时序产生电路复位状态</td></tr></tbody></table><p>总之，电源管理寄存器就是复位MPU6050<br>②<br><img src="https://img-blog.csdnimg.cn/20210527154441137.jpg#pic_center" alt="在这里插入图片描述" loading="lazy"><br>该寄存器我们只关心FS_SEL[1:0]这两个位，用于设置陀螺仪的满量程范围：0，±250°/s；1，±500°/s；2，±1000°/s；3，±2000°/s；我们一般设置为3，即±2000°/S，因为陀螺仪的ADC为16位分辨率，所以得到灵敏度为：65536/4000=16.4LSB/(°/S)。<br>总之，陀螺仪配置寄存器就是配置陀螺仪满量程范围，设置最大<br>③<br><img src="https://img-blog.csdnimg.cn/20210527154625454.jpg#pic_center" alt="在这里插入图片描述" loading="lazy"><br>该寄存器我们只关心AFS_SEL[1:0]这两个位，用于设置加速度传感器的满量程范围：0，±2g；1，±4g；2，±8g；3，±16g；我们一般设置为0，即±2g，因为加速度传感器的ADC也是16位，所以得到灵敏度为：65536/4=16384LSB/g。<br>总之，加速度传感器配置寄存器就是配置加速度传感器满量程范围，不宜过大<br>④<br><img src="https://img-blog.csdnimg.cn/20210527154801757.jpg#pic_center" alt="在这里插入图片描述" loading="lazy"><br>该寄存器用于控制FIFO使能，在简单读取传感器数据的时候，可以不用FIFO，设置对应位为：0，即可禁止FIFO，设置为1，则使能FIFO。加速度传感器的三个轴，全由一个位(ACCEL_FIFO_EN)控制，只要该位为1，则加速度传感器三个通道都开启FIFO；但是陀螺仪传感器的三个轴需要一个一个设置，即XYZ轴分别配置。<br>总之，FIFO使能寄存器用于控制使能FIFO(First Input First Output)<br>⑤<br><img src="https://img-blog.csdnimg.cn/20210527160414156.jpg#pic_center" alt="在这里插入图片描述" loading="lazy"><br>该寄存器用于设置MPU6050的陀螺仪采样频率，计算公式为：<strong>采样频率 = 陀螺仪输出频率 / (1+SMPLRT_DIV)</strong>。这里陀螺仪的输出频率，是1Khz或者8Khz，与数字低通滤波器（DLPF）的设置有关，当DLPF_CFG=0或7的时候，频率为8Khz，其他情况是1Khz。而且DLPF滤波频率一般设置为采样率的一半。采样率，我们假定设置为50Hz，那么：SMPLRT_DIV=1000/50-1=19。<br>总之，陀螺仪采样率分频寄存器就是用于设置陀螺仪的采样频率，如果采样频率为50Hz，那么采样周期就为1/50=20ms，即20ms采集一次陀螺仪的数据。<br>⑥<br><img src="https://img-blog.csdnimg.cn/20210527160935948.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpaGFvdGlhbjExMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"><br>总之，配置寄存器就是设置数字低通滤波器的DLPF_CFG位来结合陀螺仪采样分频寄存器来共同设置采样周期。<br>⑦<br><img src="https://img-blog.csdnimg.cn/20210527162315369.jpg#pic_center" alt="在这里插入图片描述" loading="lazy"><br>该寄存器的LP_WAKE_CTRL用于控制低功耗时的唤醒频率，用不到。剩下的6位，分别控制加速度和陀螺仪的x/y/z轴是否进入待机模式，这里我们全部都不进入待机模式，所以全部设置为：0 ，即可。<br>总之，电源管理寄存器2就是用于设置加速度传感器和陀螺仪的X/Y/Z轴是进入休眠还是正常工作。<br>⑧<img src="https://img-blog.csdnimg.cn/20210527162507349.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpaGFvdGlhbjExMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"><br>加速度传感器数据输出寄存器总共由6个寄存器组成，输出X/Y/Z三个轴的加速度传感器值，高字节在前，低字节在后。<br>总之，加速度传感器数据输出寄存器就是把加速度传感器测量到的数据输出出来。<br>⑨<br><img src="https://img-blog.csdnimg.cn/2021052716305611.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpaGFvdGlhbjExMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"><br>陀螺仪数据输出寄存器总共由6个寄存器组成，输出X/Y/Z三个轴的陀螺仪传感器数据，高字节在前，低字节在后。<br>总之，陀螺仪数据输出寄存器就是把陀螺仪测量到的数据输出出来。<br>⑩<br><img src="https://img-blog.csdnimg.cn/20210527163838510.jpg#pic_center" alt="在这里插入图片描述" loading="lazy"><br>通过读取0X41（高8位）和0X42（低8位）寄存器得到，温度换算公式为：<br>Temperature = 36.53 + regval/340。其中，Temperature为计算得到的温度值，单位为℃，regval为从0X41和0X42读到的温度传感器值。<br>总之，温度传感器数据输出寄存器就是把温度寄存器测量到的数据处处出来。</p><h1>3.硬件连接</h1><p><img src="https://img-blog.csdnimg.cn/20210527164235503.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpaGFvdGlhbjExMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"><br><strong>VCC</strong>:接5V电源<br><strong>GND</strong>:接地<br><strong>SCL</strong>:主IIC时钟线 (我接的PB10)<br><strong>SDA</strong>:主IIC数据线 (我接的PB11)<br><strong>AD0</strong>:地址线，接3V地址为0x68，接地地址为0x69（我接的PA15，高电平，地址为0x68）</p><h1>4.软件代码————官方自带库</h1><p>MPU6050处理寄存器的相关数据时需要移植几个官方库，以便将数据处理为所需要的欧拉角。正点原子共提供了五个源码，如下图：<br><img src="https://img-blog.csdnimg.cn/20210527171530241.jpg#pic_center" alt="在这里插入图片描述" loading="lazy"><br>这些是需要在写MPU6050代码之前移植过来的，具体代码内容大家可以下载下方源码查看。</p><h1>5.软件代码————其他代码</h1><p>MPU6050.h<br><strong>主要宏定义一些MPU6050寄存器的地址，方便IIC发送给寄存器数据初始化MPU6050。</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __MPU6050_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __MPU6050_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mpuiic.h&quot;</span>       </span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//MPU6050 AD0控制脚</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_AD0_CTRLPAout(15)<span class="comment">//控制AD0电平,从而控制MPU地址</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//#define MPU_ACCEL_OFFS_REG0X06//accel_offs寄存器,可读取版本号,寄存器手册未提到</span></span><br><span class="line"><span class="comment">//#define MPU_PROD_ID_REG0X0C//prod id寄存器,在寄存器手册未提到</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_SELF_TESTX_REG0X0D<span class="comment">//自检寄存器X</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_SELF_TESTY_REG0X0E<span class="comment">//自检寄存器Y</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_SELF_TESTZ_REG0X0F<span class="comment">//自检寄存器Z</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_SELF_TESTA_REG0X10<span class="comment">//自检寄存器A</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_SAMPLE_RATE_REG0X19<span class="comment">//采样频率分频器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_CFG_REG0X1A<span class="comment">//配置寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_GYRO_CFG_REG0X1B<span class="comment">//陀螺仪配置寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_ACCEL_CFG_REG0X1C<span class="comment">//加速度计配置寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_MOTION_DET_REG0X1F<span class="comment">//运动检测阀值设置寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_FIFO_EN_REG0X23<span class="comment">//FIFO使能寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CMST_CTRL_REG0X24<span class="comment">//IIC主机控制寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CSLV0_ADDR_REG0X25<span class="comment">//IIC从机0器件地址寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CSLV0_REG0X26<span class="comment">//IIC从机0数据地址寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CSLV0_CTRL_REG0X27<span class="comment">//IIC从机0控制寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CSLV1_ADDR_REG0X28<span class="comment">//IIC从机1器件地址寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CSLV1_REG0X29<span class="comment">//IIC从机1数据地址寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CSLV1_CTRL_REG0X2A<span class="comment">//IIC从机1控制寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CSLV2_ADDR_REG0X2B<span class="comment">//IIC从机2器件地址寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CSLV2_REG0X2C<span class="comment">//IIC从机2数据地址寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CSLV2_CTRL_REG0X2D<span class="comment">//IIC从机2控制寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CSLV3_ADDR_REG0X2E<span class="comment">//IIC从机3器件地址寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CSLV3_REG0X2F<span class="comment">//IIC从机3数据地址寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CSLV3_CTRL_REG0X30<span class="comment">//IIC从机3控制寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CSLV4_ADDR_REG0X31<span class="comment">//IIC从机4器件地址寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CSLV4_REG0X32<span class="comment">//IIC从机4数据地址寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CSLV4_DO_REG0X33<span class="comment">//IIC从机4写数据寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CSLV4_CTRL_REG0X34<span class="comment">//IIC从机4控制寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CSLV4_DI_REG0X35<span class="comment">//IIC从机4读数据寄存器</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CMST_STA_REG0X36<span class="comment">//IIC主机状态寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_INTBP_CFG_REG0X37<span class="comment">//中断/旁路设置寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_INT_EN_REG0X38<span class="comment">//中断使能寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_INT_STA_REG0X3A<span class="comment">//中断状态寄存器</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_ACCEL_XOUTH_REG0X3B<span class="comment">//加速度值,X轴高8位寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_ACCEL_XOUTL_REG0X3C<span class="comment">//加速度值,X轴低8位寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_ACCEL_YOUTH_REG0X3D<span class="comment">//加速度值,Y轴高8位寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_ACCEL_YOUTL_REG0X3E<span class="comment">//加速度值,Y轴低8位寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_ACCEL_ZOUTH_REG0X3F<span class="comment">//加速度值,Z轴高8位寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_ACCEL_ZOUTL_REG0X40<span class="comment">//加速度值,Z轴低8位寄存器</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_TEMP_OUTH_REG0X41<span class="comment">//温度值高八位寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_TEMP_OUTL_REG0X42<span class="comment">//温度值低8位寄存器</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_GYRO_XOUTH_REG0X43<span class="comment">//陀螺仪值,X轴高8位寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_GYRO_XOUTL_REG0X44<span class="comment">//陀螺仪值,X轴低8位寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_GYRO_YOUTH_REG0X45<span class="comment">//陀螺仪值,Y轴高8位寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_GYRO_YOUTL_REG0X46<span class="comment">//陀螺仪值,Y轴低8位寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_GYRO_ZOUTH_REG0X47<span class="comment">//陀螺仪值,Z轴高8位寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_GYRO_ZOUTL_REG0X48<span class="comment">//陀螺仪值,Z轴低8位寄存器</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CSLV0_DO_REG0X63<span class="comment">//IIC从机0数据寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CSLV1_DO_REG0X64<span class="comment">//IIC从机1数据寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CSLV2_DO_REG0X65<span class="comment">//IIC从机2数据寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CSLV3_DO_REG0X66<span class="comment">//IIC从机3数据寄存器</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_I2CMST_DELAY_REG0X67<span class="comment">//IIC主机延时管理寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_SIGPATH_RST_REG0X68<span class="comment">//信号通道复位寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_MDETECT_CTRL_REG0X69<span class="comment">//运动检测控制寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_USER_CTRL_REG0X6A<span class="comment">//用户控制寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_PWR_MGMT1_REG0X6B<span class="comment">//电源管理寄存器1</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_PWR_MGMT2_REG0X6C<span class="comment">//电源管理寄存器2 </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_FIFO_CNTH_REG0X72<span class="comment">//FIFO计数寄存器高八位</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_FIFO_CNTL_REG0X73<span class="comment">//FIFO计数寄存器低八位</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_FIFO_RW_REG0X74<span class="comment">//FIFO读写寄存器</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_DEVICE_ID_REG0X75<span class="comment">//器件ID寄存器</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//如果AD0脚(9脚)接地,IIC地址为0X68(不包含最低位).</span></span><br><span class="line"><span class="comment">//如果接V3.3,则IIC地址为0X69(不包含最低位).</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_ADDR0X68</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//因为模块AD0默认接GND,所以转为读写地址后,为0XD1和0XD0(如果接VCC,则为0XD3和0XD2)  </span></span><br><span class="line"><span class="comment">//#define MPU_READ    0XD1</span></span><br><span class="line"><span class="comment">//#define MPU_WRITE   0XD0</span></span><br><span class="line"></span><br><span class="line"><span class="function">u8 <span class="title">MPU_Init</span><span class="params">(<span class="keyword">void</span>)</span></span>; <span class="comment">//初始化MPU6050</span></span><br><span class="line"><span class="function">u8 <span class="title">MPU_Write_Len</span><span class="params">(u8 addr,u8 reg,u8 len,u8 *buf)</span></span>;<span class="comment">//IIC连续写</span></span><br><span class="line"><span class="function">u8 <span class="title">MPU_Read_Len</span><span class="params">(u8 addr,u8 reg,u8 len,u8 *buf)</span></span>; <span class="comment">//IIC连续读 </span></span><br><span class="line"><span class="function">u8 <span class="title">MPU_Write_Byte</span><span class="params">(u8 reg,u8 data)</span></span>;<span class="comment">//IIC写一个字节</span></span><br><span class="line"><span class="function">u8 <span class="title">MPU_Read_Byte</span><span class="params">(u8 reg)</span></span>;<span class="comment">//IIC读一个字节</span></span><br><span class="line"></span><br><span class="line"><span class="function">u8 <span class="title">MPU_Set_Gyro_Fsr</span><span class="params">(u8 fsr)</span></span>;</span><br><span class="line"><span class="function">u8 <span class="title">MPU_Set_Accel_Fsr</span><span class="params">(u8 fsr)</span></span>;</span><br><span class="line"><span class="function">u8 <span class="title">MPU_Set_LPF</span><span class="params">(u16 lpf)</span></span>;</span><br><span class="line"><span class="function">u8 <span class="title">MPU_Set_Rate</span><span class="params">(u16 rate)</span></span>;</span><br><span class="line"><span class="function">u8 <span class="title">MPU_Set_Fifo</span><span class="params">(u8 sens)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">short</span> <span class="title">MPU_Get_Temperature</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function">u8 <span class="title">MPU_Get_Gyroscope</span><span class="params">(<span class="keyword">short</span> *gx,<span class="keyword">short</span> *gy,<span class="keyword">short</span> *gz)</span></span>;</span><br><span class="line"><span class="function">u8 <span class="title">MPU_Get_Accelerometer</span><span class="params">(<span class="keyword">short</span> *ax,<span class="keyword">short</span> *ay,<span class="keyword">short</span> *az)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="number">123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105</span></span><br></pre></td></tr></table></figure><p>MPU6050.c<br><strong>主要是单片机通过IIC协议向MPU6050写数据读数据的函数以及MPU6050初始化函数</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mpu6050.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;usart.h&quot;</span>   </span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">函数名称：MPU_Init</span></span><br><span class="line"><span class="comment">函数功能：初始化MPU6050</span></span><br><span class="line"><span class="comment">函数参数：无</span></span><br><span class="line"><span class="comment">函数返回值：0,初始化成功  其他,初始化失败</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="function">u8 <span class="title">MPU_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">u8 res;</span><br><span class="line">  </span><br><span class="line">GPIO_InitTypeDef  GPIO_InitStructure;</span><br><span class="line"></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);<span class="comment">//使能AFIO时钟 </span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);<span class="comment">//先使能外设IO PORTA时钟 </span></span><br><span class="line"></span><br><span class="line">  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_15;  <span class="comment">//端口配置</span></span><br><span class="line">  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;  <span class="comment">//推挽输出</span></span><br><span class="line">  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;  <span class="comment">//IO口速度为50MHz</span></span><br><span class="line">  GPIO_Init(GPIOA, &amp;GPIO_InitStructure);      <span class="comment">//根据设定参数初始化GPIOA</span></span><br><span class="line"></span><br><span class="line">GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable,ENABLE);<span class="comment">//禁止JTAG,从而PA15可以做普通IO使用,否则PA15不能做普通IO!!!</span></span><br><span class="line"></span><br><span class="line">MPU_AD0_CTRL=<span class="number">0</span>;<span class="comment">//控制MPU6050的AD0脚为低电平,从机地址为:0X68</span></span><br><span class="line"></span><br><span class="line">MPU_IIC_Init();<span class="comment">//初始化IIC总线</span></span><br><span class="line">MPU_Write_Byte(MPU_PWR_MGMT1_REG,<span class="number">0X80</span>);<span class="comment">//复位MPU6050</span></span><br><span class="line">  delay_ms(<span class="number">100</span>);</span><br><span class="line">MPU_Write_Byte(MPU_PWR_MGMT1_REG,<span class="number">0X00</span>);<span class="comment">//唤醒MPU6050 </span></span><br><span class="line">MPU_Set_Gyro_Fsr(<span class="number">3</span>);<span class="comment">//陀螺仪传感器,±2000dps</span></span><br><span class="line">MPU_Set_Accel_Fsr(<span class="number">0</span>);<span class="comment">//加速度传感器,±2g</span></span><br><span class="line">MPU_Set_Rate(<span class="number">50</span>);<span class="comment">//设置采样率50Hz</span></span><br><span class="line">MPU_Write_Byte(MPU_INT_EN_REG,<span class="number">0X00</span>);<span class="comment">//关闭所有中断</span></span><br><span class="line">MPU_Write_Byte(MPU_USER_CTRL_REG,<span class="number">0X00</span>);<span class="comment">//I2C主模式关闭</span></span><br><span class="line">MPU_Write_Byte(MPU_FIFO_EN_REG,<span class="number">0X00</span>);<span class="comment">//关闭FIFO</span></span><br><span class="line">MPU_Write_Byte(MPU_INTBP_CFG_REG,<span class="number">0X80</span>);<span class="comment">//INT引脚低电平有效</span></span><br><span class="line"></span><br><span class="line">res=MPU_Read_Byte(MPU_DEVICE_ID_REG);</span><br><span class="line"><span class="keyword">if</span>(res==MPU_ADDR)<span class="comment">//器件ID正确,即res = MPU_ADDR = 0x68</span></span><br><span class="line">&#123;</span><br><span class="line">MPU_Write_Byte(MPU_PWR_MGMT1_REG,<span class="number">0X01</span>);<span class="comment">//设置CLKSEL,PLL X轴为参考</span></span><br><span class="line">MPU_Write_Byte(MPU_PWR_MGMT2_REG,<span class="number">0X00</span>);<span class="comment">//加速度与陀螺仪都工作</span></span><br><span class="line">MPU_Set_Rate(<span class="number">50</span>);<span class="comment">//设置采样率为50Hz</span></span><br><span class="line"> &#125;<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;    <span class="comment">//地址设置错误,返回1</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//地址设置正确,返回0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">函数名称：MPU_Set_Gyro_Fsr</span></span><br><span class="line"><span class="comment">函数功能：设置MPU6050陀螺仪传感器满量程范围</span></span><br><span class="line"><span class="comment">函数参数：fsr:0,±250dps;1,±500dps;2,±1000dps;3,±2000dps</span></span><br><span class="line"><span class="comment">函数返回值：0,设置成功  其他,设置失败</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="function">u8 <span class="title">MPU_Set_Gyro_Fsr</span><span class="params">(u8 fsr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> MPU_Write_Byte(MPU_GYRO_CFG_REG,fsr&lt;&lt;<span class="number">3</span>); <span class="comment">//设置陀螺仪满量程范围</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">函数名称：MPU_Set_Accel_Fsr</span></span><br><span class="line"><span class="comment">函数功能：设置MPU6050加速度传感器满量程范围</span></span><br><span class="line"><span class="comment">函数参数：fsr:0,±2g;1,±4g;2,±8g;3,±16g</span></span><br><span class="line"><span class="comment">函数返回值：0,设置成功  其他,设置失败</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="function">u8 <span class="title">MPU_Set_Accel_Fsr</span><span class="params">(u8 fsr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> MPU_Write_Byte(MPU_ACCEL_CFG_REG,fsr&lt;&lt;<span class="number">3</span>); <span class="comment">//设置加速度传感器满量程范围  </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">函数名称：MPU_Set_LPF</span></span><br><span class="line"><span class="comment">函数功能：设置MPU6050的数字低通滤波器</span></span><br><span class="line"><span class="comment">函数参数：lpf:数字低通滤波频率(Hz)</span></span><br><span class="line"><span class="comment">函数返回值：0,设置成功  其他,设置失败</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="function">u8 <span class="title">MPU_Set_LPF</span><span class="params">(u16 lpf)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u8 data=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(lpf&gt;=<span class="number">188</span>)data=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(lpf&gt;=<span class="number">98</span>)data=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(lpf&gt;=<span class="number">42</span>)data=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(lpf&gt;=<span class="number">20</span>)data=<span class="number">4</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(lpf&gt;=<span class="number">10</span>)data=<span class="number">5</span>;</span><br><span class="line"><span class="keyword">else</span> data=<span class="number">6</span>; </span><br><span class="line"><span class="keyword">return</span> MPU_Write_Byte(MPU_CFG_REG,data);<span class="comment">//设置数字低通滤波器  </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">函数名称：MPU_Set_Rate</span></span><br><span class="line"><span class="comment">函数功能：设置MPU6050的采样率(假定Fs=1KHz)</span></span><br><span class="line"><span class="comment">函数参数：rate:4~1000(Hz)  初始化中rate取50</span></span><br><span class="line"><span class="comment">函数返回值：0,设置成功  其他,设置失败</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="function">u8 <span class="title">MPU_Set_Rate</span><span class="params">(u16 rate)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u8 data;</span><br><span class="line"><span class="keyword">if</span>(rate&gt;<span class="number">1000</span>)rate=<span class="number">1000</span>;</span><br><span class="line"><span class="keyword">if</span>(rate&lt;<span class="number">4</span>)rate=<span class="number">4</span>;</span><br><span class="line">data=<span class="number">1000</span>/rate<span class="number">-1</span>;</span><br><span class="line">data=MPU_Write_Byte(MPU_SAMPLE_RATE_REG,data);<span class="comment">//设置数字低通滤波器</span></span><br><span class="line"> <span class="keyword">return</span> MPU_Set_LPF(rate/<span class="number">2</span>);<span class="comment">//自动设置LPF为采样率的一半</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">函数名称：MPU_Get_Temperature</span></span><br><span class="line"><span class="comment">函数功能：得到温度传感器值</span></span><br><span class="line"><span class="comment">函数参数：无</span></span><br><span class="line"><span class="comment">函数返回值：温度值(扩大了100倍)</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">short</span> <span class="title">MPU_Get_Temperature</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   u8 buf[<span class="number">2</span>]; </span><br><span class="line">   <span class="keyword">short</span> raw;</span><br><span class="line"> <span class="keyword">float</span> temp;</span><br><span class="line"></span><br><span class="line"> MPU_Read_Len(MPU_ADDR,MPU_TEMP_OUTH_REG,<span class="number">2</span>,buf); </span><br><span class="line">   raw=((u16)buf[<span class="number">0</span>]&lt;&lt;<span class="number">8</span>)|buf[<span class="number">1</span>];</span><br><span class="line">   temp=<span class="number">36.53</span>+((<span class="keyword">double</span>)raw)/<span class="number">340</span>;</span><br><span class="line">   <span class="keyword">return</span> temp*<span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">函数名称：MPU_Get_Gyroscope</span></span><br><span class="line"><span class="comment">函数功能：得到陀螺仪值(原始值)</span></span><br><span class="line"><span class="comment">函数参数：gx,gy,gz:陀螺仪x,y,z轴的原始读数(带符号)</span></span><br><span class="line"><span class="comment">函数返回值：0,读取成功  其他,读取失败</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="function">u8 <span class="title">MPU_Get_Gyroscope</span><span class="params">(<span class="keyword">short</span> *gx,<span class="keyword">short</span> *gy,<span class="keyword">short</span> *gz)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  u8 buf[<span class="number">6</span>],res;</span><br><span class="line"></span><br><span class="line">res=MPU_Read_Len(MPU_ADDR,MPU_GYRO_XOUTH_REG,<span class="number">6</span>,buf);</span><br><span class="line"><span class="keyword">if</span>(res==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">*gx=((u16)buf[<span class="number">0</span>]&lt;&lt;<span class="number">8</span>)|buf[<span class="number">1</span>];</span><br><span class="line">*gy=((u16)buf[<span class="number">2</span>]&lt;&lt;<span class="number">8</span>)|buf[<span class="number">3</span>];</span><br><span class="line">*gz=((u16)buf[<span class="number">4</span>]&lt;&lt;<span class="number">8</span>)|buf[<span class="number">5</span>];</span><br><span class="line">&#125; </span><br><span class="line">  <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">函数名称：MPU_Get_Accelerometer</span></span><br><span class="line"><span class="comment">函数功能：得到加速度值(原始值)</span></span><br><span class="line"><span class="comment">函数参数：ax,ay,az:加速度传感器x,y,z轴的原始读数(带符号)</span></span><br><span class="line"><span class="comment">函数返回值：0,读取成功  其他,读取失败</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="function">u8 <span class="title">MPU_Get_Accelerometer</span><span class="params">(<span class="keyword">short</span> *ax,<span class="keyword">short</span> *ay,<span class="keyword">short</span> *az)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    u8 buf[<span class="number">6</span>],res;  </span><br><span class="line">res=MPU_Read_Len(MPU_ADDR,MPU_ACCEL_XOUTH_REG,<span class="number">6</span>,buf);</span><br><span class="line"><span class="keyword">if</span>(res==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">*ax=((u16)buf[<span class="number">0</span>]&lt;&lt;<span class="number">8</span>)|buf[<span class="number">1</span>];  </span><br><span class="line">*ay=((u16)buf[<span class="number">2</span>]&lt;&lt;<span class="number">8</span>)|buf[<span class="number">3</span>];  </span><br><span class="line">*az=((u16)buf[<span class="number">4</span>]&lt;&lt;<span class="number">8</span>)|buf[<span class="number">5</span>];</span><br><span class="line">&#125; </span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">函数名称：MPU_Write_Len</span></span><br><span class="line"><span class="comment">函数功能：IIC连续写(写器件地址、寄存器地址、数据)</span></span><br><span class="line"><span class="comment">函数参数：addr:器件地址      reg:寄存器地址</span></span><br><span class="line"><span class="comment"> len:写入数据的长度  buf:数据区</span></span><br><span class="line"><span class="comment">函数返回值：0,写入成功  其他,写入失败</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="function">u8 <span class="title">MPU_Write_Len</span><span class="params">(u8 addr,u8 reg,u8 len,u8 *buf)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u8 i;</span><br><span class="line"></span><br><span class="line">MPU_IIC_Start();</span><br><span class="line">MPU_IIC_Send_Byte((addr&lt;&lt;<span class="number">1</span>)|<span class="number">0</span>);      <span class="comment">//发送器件地址+写命令(0为写,1为读)</span></span><br><span class="line"><span class="keyword">if</span>(MPU_IIC_Wait_Ack()) <span class="comment">//等待应答</span></span><br><span class="line">&#123;</span><br><span class="line">MPU_IIC_Stop();</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">    MPU_IIC_Send_Byte(reg); <span class="comment">//写寄存器地址</span></span><br><span class="line">    MPU_IIC_Wait_Ack();             <span class="comment">//等待应答</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">&#123;</span><br><span class="line">MPU_IIC_Send_Byte(buf[i]);       <span class="comment">//发送数据</span></span><br><span class="line"><span class="keyword">if</span>(MPU_IIC_Wait_Ack())         <span class="comment">//等待ACK</span></span><br><span class="line">&#123;</span><br><span class="line">MPU_IIC_Stop();</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    MPU_IIC_Stop();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">函数名称：MPU_Read_Len</span></span><br><span class="line"><span class="comment">函数功能：IIC连续读(写入器件地址后,读寄存器地址、数据)</span></span><br><span class="line"><span class="comment">函数参数：addr:器件地址        reg:要读的寄存器地址</span></span><br><span class="line"><span class="comment"> len:要读取的数据长度  buf:读取到的数据存储区</span></span><br><span class="line"><span class="comment">函数返回值：0,读取成功  其他,读取失败</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="function">u8 <span class="title">MPU_Read_Len</span><span class="params">(u8 addr,u8 reg,u8 len,u8 *buf)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">MPU_IIC_Start();</span><br><span class="line">MPU_IIC_Send_Byte((addr&lt;&lt;<span class="number">1</span>)|<span class="number">0</span>);<span class="comment">//发送器件地址+写命令</span></span><br><span class="line"><span class="keyword">if</span>(MPU_IIC_Wait_Ack())<span class="comment">//等待应答</span></span><br><span class="line">&#123;</span><br><span class="line">MPU_IIC_Stop(); </span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">    MPU_IIC_Send_Byte(reg);<span class="comment">//写寄存器地址</span></span><br><span class="line">    MPU_IIC_Wait_Ack();<span class="comment">//等待应答</span></span><br><span class="line">    MPU_IIC_Start();</span><br><span class="line">MPU_IIC_Send_Byte((addr&lt;&lt;<span class="number">1</span>)|<span class="number">1</span>);<span class="comment">//发送器件地址+读命令</span></span><br><span class="line">    MPU_IIC_Wait_Ack();<span class="comment">//等待应答 </span></span><br><span class="line"><span class="keyword">while</span>(len)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(len==<span class="number">1</span>) *buf=MPU_IIC_Read_Byte(<span class="number">0</span>);   <span class="comment">//读数据,发送nACK </span></span><br><span class="line"><span class="keyword">else</span>  *buf=MPU_IIC_Read_Byte(<span class="number">1</span>);<span class="comment">//读数据,发送ACK  </span></span><br><span class="line">len--;</span><br><span class="line">buf++;</span><br><span class="line">&#125;</span><br><span class="line">    MPU_IIC_Stop();<span class="comment">//产生一个停止条件 </span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">函数名称：MPU_Write_Byte</span></span><br><span class="line"><span class="comment">函数功能：IIC写一个字节</span></span><br><span class="line"><span class="comment">函数参数：data:写入的数据    reg:要写的寄存器地址</span></span><br><span class="line"><span class="comment">函数返回值：0,写入成功  其他,写入失败</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="function">u8 <span class="title">MPU_Write_Byte</span><span class="params">(u8 reg,u8 data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  MPU_IIC_Start();</span><br><span class="line">MPU_IIC_Send_Byte((MPU_ADDR&lt;&lt;<span class="number">1</span>)|<span class="number">0</span>);<span class="comment">//发送器件地址+写命令</span></span><br><span class="line"><span class="keyword">if</span>(MPU_IIC_Wait_Ack()) <span class="comment">//等待应答</span></span><br><span class="line">&#123;</span><br><span class="line">MPU_IIC_Stop();</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">  MPU_IIC_Send_Byte(reg);<span class="comment">//写寄存器地址</span></span><br><span class="line">  MPU_IIC_Wait_Ack();<span class="comment">//等待应答</span></span><br><span class="line">MPU_IIC_Send_Byte(data);<span class="comment">//发送数据</span></span><br><span class="line"><span class="keyword">if</span>(MPU_IIC_Wait_Ack())  <span class="comment">//等待ACK</span></span><br><span class="line">&#123;</span><br><span class="line">MPU_IIC_Stop();</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">  MPU_IIC_Stop();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">函数名称：MPU_Read_Byte</span></span><br><span class="line"><span class="comment">函数功能：IIC读一个字节</span></span><br><span class="line"><span class="comment">函数参数：reg:要读的寄存器地址</span></span><br><span class="line"><span class="comment">函数返回值：res:读取到的数据</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="function">u8 <span class="title">MPU_Read_Byte</span><span class="params">(u8 reg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u8 res;</span><br><span class="line"></span><br><span class="line">  MPU_IIC_Start(); </span><br><span class="line">MPU_IIC_Send_Byte((MPU_ADDR&lt;&lt;<span class="number">1</span>)|<span class="number">0</span>);<span class="comment">//发送器件地址+写命令</span></span><br><span class="line">MPU_IIC_Wait_Ack();<span class="comment">//等待应答 </span></span><br><span class="line">  MPU_IIC_Send_Byte(reg);<span class="comment">//写寄存器地址</span></span><br><span class="line">  MPU_IIC_Wait_Ack();<span class="comment">//等待应答</span></span><br><span class="line">  MPU_IIC_Start();</span><br><span class="line">MPU_IIC_Send_Byte((MPU_ADDR&lt;&lt;<span class="number">1</span>)|<span class="number">1</span>);<span class="comment">//发送器件地址+读命令</span></span><br><span class="line">  MPU_IIC_Wait_Ack();<span class="comment">//等待应答 </span></span><br><span class="line">res=MPU_IIC_Read_Byte(<span class="number">0</span>);<span class="comment">//读取数据,发送nACK </span></span><br><span class="line">  MPU_IIC_Stop();<span class="comment">//产生一个停止条件 </span></span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279</span></span><br></pre></td></tr></table></figure><p>mpuiic.h<br><strong>MPU的IIC协议函数头文件，PB11为SDA，PB10为SCL。</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __MPUIIC_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __MPUIIC_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//IO方向设置  ---PB11</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_SDA_IN()  &#123;GPIOB-&gt;CRH &amp;= 0XFFFF0FFF;GPIOB-&gt;CRH |= 8&lt;&lt;12;&#125;   <span class="comment">//上拉/下拉 输入模式</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_SDA_OUT() &#123;GPIOB-&gt;CRH &amp;= 0XFFFF0FFF;GPIOB-&gt;CRH |= 3&lt;&lt;12;&#125;<span class="comment">//推挽输出  输出模式</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//IO操作函数 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_IIC_SCL    PBout(10) <span class="comment">//SCL</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_IIC_SDA    PBout(11) <span class="comment">//SDA </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MPU_READ_SDA   PBin(11) <span class="comment">//输入SDA </span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//IIC所有操作函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MPU_IIC_Delay</span><span class="params">(<span class="keyword">void</span>)</span></span>;<span class="comment">//IIC延时2ms函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MPU_IIC_Init</span><span class="params">(<span class="keyword">void</span>)</span></span>;                <span class="comment">//初始化IIC的IO口 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MPU_IIC_Start</span><span class="params">(<span class="keyword">void</span>)</span></span>;<span class="comment">//发送IIC开始信号</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MPU_IIC_Stop</span><span class="params">(<span class="keyword">void</span>)</span></span>;  <span class="comment">//发送IIC停止信号</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MPU_IIC_Send_Byte</span><span class="params">(u8 txd)</span></span>;<span class="comment">//IIC发送一个字节</span></span><br><span class="line"><span class="function">u8 <span class="title">MPU_IIC_Read_Byte</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> ack)</span></span>;<span class="comment">//IIC读取一个字节</span></span><br><span class="line"><span class="function">u8 <span class="title">MPU_IIC_Wait_Ack</span><span class="params">(<span class="keyword">void</span>)</span></span>; <span class="comment">//IIC等待ACK信号</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MPU_IIC_Ack</span><span class="params">(<span class="keyword">void</span>)</span></span>;<span class="comment">//IIC发送ACK信号</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MPU_IIC_NAck</span><span class="params">(<span class="keyword">void</span>)</span></span>;<span class="comment">//IIC不发送ACK信号</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IMPU_IC_Write_One_Byte</span><span class="params">(u8 daddr,u8 addr,u8 data)</span></span>;</span><br><span class="line"><span class="function">u8 <span class="title">MPU_IIC_Read_One_Byte</span><span class="params">(u8 daddr,u8 addr)</span></span>;  </span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="number">1234567891011121314151617181920212223242526272829</span></span><br></pre></td></tr></table></figure><p>mpuiic.c<br><strong>MPU的IIC协议函数编写</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mpuiic.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;delay.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">函数名称：MPU_IIC_Delay</span></span><br><span class="line"><span class="comment">函数功能：MPU IIC延时函数，延时2ms</span></span><br><span class="line"><span class="comment">函数参数：无</span></span><br><span class="line"><span class="comment">函数返回值：无</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MPU_IIC_Delay</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">delay_us(<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">函数名称：MPU_IIC_Init</span></span><br><span class="line"><span class="comment">函数功能：MPU IIC初始化</span></span><br><span class="line"><span class="comment">函数参数：无</span></span><br><span class="line"><span class="comment">函数返回值：无</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MPU_IIC_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;     </span><br><span class="line">  GPIO_InitTypeDef  GPIO_InitStructure;</span><br><span class="line"></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE);<span class="comment">//先使能外设IO PORTB时钟 </span></span><br><span class="line"></span><br><span class="line">  GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10|GPIO_Pin_11;  <span class="comment">//端口配置</span></span><br><span class="line">  GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;   <span class="comment">//推挽输出</span></span><br><span class="line">  GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;  <span class="comment">//IO口速度为50MHz</span></span><br><span class="line">  GPIO_Init(GPIOB, &amp;GPIO_InitStructure); <span class="comment">//根据设定参数初始化GPIO </span></span><br><span class="line"></span><br><span class="line">  GPIO_SetBits(GPIOB,GPIO_Pin_10|GPIO_Pin_11);  <span class="comment">//PB10,PB11 输出高</span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">函数名称：MPU_IIC_Start</span></span><br><span class="line"><span class="comment">函数功能：MPU IIC发送起始信号</span></span><br><span class="line"><span class="comment">函数参数：无</span></span><br><span class="line"><span class="comment">函数返回值：无</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MPU_IIC_Start</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">MPU_SDA_OUT();     <span class="comment">//SDA线 输出</span></span><br><span class="line">MPU_IIC_SDA=<span class="number">1</span>;    </span><br><span class="line">MPU_IIC_SCL=<span class="number">1</span>;</span><br><span class="line">MPU_IIC_Delay();</span><br><span class="line"> MPU_IIC_SDA=<span class="number">0</span>;     <span class="comment">//START:当SCL线处于高电平时,SDA线突然从高变低,发送起始信号</span></span><br><span class="line">MPU_IIC_Delay();</span><br><span class="line">MPU_IIC_SCL=<span class="number">0</span>; <span class="comment">//钳住I2C总线，准备发送或接收数据 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">函数名称：MPU_IIC_Stop</span></span><br><span class="line"><span class="comment">函数功能：MPU IIC发送停止信号</span></span><br><span class="line"><span class="comment">函数参数：无</span></span><br><span class="line"><span class="comment">函数返回值：无</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MPU_IIC_Stop</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">MPU_SDA_OUT(); <span class="comment">//SDA线输出</span></span><br><span class="line">MPU_IIC_SCL=<span class="number">0</span>;</span><br><span class="line">MPU_IIC_SDA=<span class="number">0</span>; <span class="comment">//STOP:当SCL线处于高电平时,SDA线突然从低变高,发送停止信号</span></span><br><span class="line"> MPU_IIC_Delay();</span><br><span class="line">MPU_IIC_SCL=<span class="number">1</span>; </span><br><span class="line">MPU_IIC_SDA=<span class="number">1</span>; <span class="comment">//发送I2C总线结束信号</span></span><br><span class="line">MPU_IIC_Delay();   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">函数名称：MPU_IIC_Wait_Ack</span></span><br><span class="line"><span class="comment">函数功能：MPU IIC等待信号到来</span></span><br><span class="line"><span class="comment">函数参数：无</span></span><br><span class="line"><span class="comment">函数返回值：1:接收应答信号成功  0:接收应答信号失败</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="function">u8 <span class="title">MPU_IIC_Wait_Ack</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u8 ucErrTime=<span class="number">0</span>;</span><br><span class="line">MPU_SDA_IN();  <span class="comment">//SDA设置为输入  </span></span><br><span class="line">MPU_IIC_SDA=<span class="number">1</span>;MPU_IIC_Delay();</span><br><span class="line">MPU_IIC_SCL=<span class="number">1</span>;MPU_IIC_Delay();</span><br><span class="line"><span class="keyword">while</span>(MPU_READ_SDA)</span><br><span class="line">&#123;</span><br><span class="line">ucErrTime++;</span><br><span class="line"><span class="keyword">if</span>(ucErrTime&gt;<span class="number">250</span>)</span><br><span class="line">&#123;</span><br><span class="line">MPU_IIC_Stop();</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">MPU_IIC_SCL=<span class="number">0</span>;<span class="comment">//时钟输出0</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">函数名称：MPU_IIC_Ack</span></span><br><span class="line"><span class="comment">函数功能：MPU IIC产生应答信号</span></span><br><span class="line"><span class="comment">函数参数：无</span></span><br><span class="line"><span class="comment">函数返回值：无</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MPU_IIC_Ack</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">MPU_IIC_SCL=<span class="number">0</span>;</span><br><span class="line">MPU_SDA_OUT();</span><br><span class="line">MPU_IIC_SDA=<span class="number">0</span>;</span><br><span class="line">MPU_IIC_Delay();</span><br><span class="line">MPU_IIC_SCL=<span class="number">1</span>;</span><br><span class="line">MPU_IIC_Delay();</span><br><span class="line">MPU_IIC_SCL=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">函数名称：MPU_IIC_NAck</span></span><br><span class="line"><span class="comment">函数功能：MPU IIC不产生应答信号</span></span><br><span class="line"><span class="comment">函数参数：无</span></span><br><span class="line"><span class="comment">函数返回值：无</span></span><br><span class="line"><span class="comment">**********************************************/</span>   </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MPU_IIC_NAck</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">MPU_IIC_SCL=<span class="number">0</span>;</span><br><span class="line">MPU_SDA_OUT();</span><br><span class="line">MPU_IIC_SDA=<span class="number">1</span>;</span><br><span class="line">MPU_IIC_Delay();</span><br><span class="line">MPU_IIC_SCL=<span class="number">1</span>;</span><br><span class="line">MPU_IIC_Delay();</span><br><span class="line">MPU_IIC_SCL=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">函数名称：MPU_IIC_Send_Byte</span></span><br><span class="line"><span class="comment">函数功能：MPU IIC发送一个字节</span></span><br><span class="line"><span class="comment">函数参数：txd：要发送的数据</span></span><br><span class="line"><span class="comment">函数返回值：无</span></span><br><span class="line"><span class="comment">注意：IIC发送字节是一个一个位发送的，发送一个字节需要发送八次</span></span><br><span class="line"><span class="comment">**********************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MPU_IIC_Send_Byte</span><span class="params">(u8 txd)</span></span></span><br><span class="line"><span class="function"></span>&#123;                        </span><br><span class="line">    u8 t;   </span><br><span class="line">MPU_SDA_OUT();     </span><br><span class="line">    MPU_IIC_SCL=<span class="number">0</span>;<span class="comment">//拉低时钟开始数据传输</span></span><br><span class="line">    <span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;<span class="number">8</span>;t++)</span><br><span class="line">    &#123;              </span><br><span class="line">        MPU_IIC_SDA=(txd&amp;<span class="number">0x80</span>)&gt;&gt;<span class="number">7</span>;</span><br><span class="line">        txd&lt;&lt;=<span class="number">1</span>;   </span><br><span class="line">    MPU_IIC_SCL=<span class="number">1</span>;</span><br><span class="line">    MPU_IIC_Delay(); </span><br><span class="line">    MPU_IIC_SCL=<span class="number">0</span>;</span><br><span class="line">    MPU_IIC_Delay();</span><br><span class="line">    &#125; </span><br><span class="line">&#125;     </span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************************************</span></span><br><span class="line"><span class="comment">函数名称：MPU_IIC_Read_Byte</span></span><br><span class="line"><span class="comment">函数功能：MPU IIC读取一个字节</span></span><br><span class="line"><span class="comment">函数参数：ack: 1,发送ACK   0,发送NACK </span></span><br><span class="line"><span class="comment">函数返回值：接收到的数据</span></span><br><span class="line"><span class="comment">注意：IIC读取字节是一个一个位读取的，读取一个字节需要读取八次</span></span><br><span class="line"><span class="comment">**********************************************/</span> </span><br><span class="line"><span class="function">u8 <span class="title">MPU_IIC_Read_Byte</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> ack)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> i,receive=<span class="number">0</span>;</span><br><span class="line">  MPU_SDA_IN();              <span class="comment">//SDA设置为输入</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">  &#123;</span><br><span class="line">        MPU_IIC_SCL=<span class="number">0</span>;</span><br><span class="line">        MPU_IIC_Delay();</span><br><span class="line">MPU_IIC_SCL=<span class="number">1</span>;</span><br><span class="line">        receive&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(MPU_READ_SDA)receive++;   <span class="comment">//如果读到了数据</span></span><br><span class="line">MPU_IIC_Delay(); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">if</span> (!ack)</span><br><span class="line">        MPU_IIC_NAck();   <span class="comment">//发送nACK</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        MPU_IIC_Ack();    <span class="comment">//发送ACK   </span></span><br><span class="line">    <span class="keyword">return</span> receive;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177</span></span><br></pre></td></tr></table></figure><p>还有一些函数就不做过多赘述了，上面的代码备注已经做好了，认真吃肯定是会吃透的。多下点功夫肯定可以看懂。</p><h1>6.学习补充</h1><p><strong>补充1：FIFO</strong><br><strong>FIFO</strong>( First Input First Output)简单说就是指先进先出。由于微电子技术的飞速发展，新一代FIFO芯片容量越来越大，体积越来越小，价格越来越便宜。作为一种新型大规模集成电路，FIFO芯片以其灵活、方便、高效的特性，逐渐在高速数据采集、高速数据处理、高速数据传输以及多机处理系统中得到越来越广泛的应用。在系统设计中，以增加数据传输率、处理大量数据流、匹配具有不同传输率的系统为目的而广泛使用FIFO存储器，从而提高了系统性能。FIFO存储器是一个<strong>先入先出的双口缓冲器</strong>，即第一个进入其内的数据第一个被移出，其中一个是存储器的输入口，另一个口是存储器的输出口。对于单片FIFO来说，主要有两种结构：触发导向结构和零导向传输结构。触发导向传输结构的FIFO是由寄存器阵列构成的，零导向传输结构的FIFO是由具有读和写地址指针的双口RAM构成。详见这篇博客：<a href="https://blog.csdn.net/qq_26652069/article/details/90765269">FIFO工作原理</a><br><strong>补充2：关于PA15使用问题</strong><br>在使用PA15作为普通IO口的时候，需要禁用JTAG才可以，代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);<span class="comment">//使能AFIO时钟</span></span><br><span class="line">GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable,ENABLE);<span class="comment">//禁止JTAG,从而PA15可以做普通IO使用,否则PA15不能做普通IO!!!</span></span><br><span class="line"><span class="number">12</span></span><br></pre></td></tr></table></figure><p><strong>这是个大坑</strong><br><strong>补充3：关于MPU6050参考点</strong><br>当代码烧入后，MPU的参考点是什么呢？参考点其实就是MPU6050初始化之后一开始的位置，没有一个强制的规定哪一个方向就是基准点，<strong>初始化之后的初始位置就是(0，0，0)点</strong>。<br><strong>补充4：想到了再写吧</strong></p><h1>7.效果展示(可以先来看这个)</h1><p><img src="https://img-blog.csdnimg.cn/20210527174024629.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpaGFvdGlhbjExMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"><br>PITCH(俯仰角)、ROLL(翻滚角)、YAW(偏航角)，单位均为 度。TEMP为当前温度，单位为摄氏度。</p><h1>8.参考链接</h1><p>[1]<a href="https://baike.baidu.com/item/%E9%99%80%E8%9E%BA%E4%BB%AA/84317?fr=aladdin">百度百科 陀螺仪</a><br>[2]<a href="http://www.openedv.com/docs/index.html">正点原子资料下载中心</a><br>[3]<a href="https://baike.baidu.com/item/FIFO%E5%AD%98%E5%82%A8%E5%99%A8/4530258?fr=aladdin">百度百科 FIFO储存器</a><br>[4]<a href="https://www.jianshu.com/p/1e38ad3d4bfb">姿态角Pitch、Roll、Yaw角介绍</a></p><h1>9.完整版代码链接</h1><p><a href="https://download.csdn.net/download/lihaotian111/19131254?spm=1001.2014.3001.5501">MPU6050模块通过OLED显示姿态角源码</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css&quot;&gt;&lt;scrip</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>自动调节系统</title>
    <link href="https://www.darkfox.top/posts/262d00f8/"/>
    <id>https://www.darkfox.top/posts/262d00f8/</id>
    <published>2021-07-24T12:19:41.000Z</published>
    <updated>2021-07-27T13:52:00.549Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h3 id="序言">序言</h3><p>杨过出了一会神，再伸手去会第二柄剑，只提起数尺，呛的一声，竟然脱手掉下，在石上一碰，火花四溅，不禁吓了一跳。原来那剑黑黝黝的毫无异状，却是沉重之极，三尺多长的一把剑，重量竟自不下七八十斤，比之战阵上最沉重的金刀大戟尤重数倍。杨过提起时如何想得到，出乎不意的手上一沉，便拿捏不住。于是再俯身会起，这次有了防备，会起七八十斤的重物自是不当一回事。看剑下的石刻时，见两行小字道：“重剑无锋，大巧不工。四十岁前恃之横行天下。”过了良久，才放下重剑，去取第三柄剑，这一次又上了个当。他只道这剑定然犹重前剑，因此提剑时力运左臂。那知拿在手□却轻飘飘的浑似无物，凝神一看，原来是柄木剑，年深日久，剑身剑柄均已腐朽，但见剑下的石刻道：“四十岁后，不滞于物，草木竹石均可为剑。自此精修，渐进于无剑胜有剑之境。”</p><span id="more"></span><h3 id="口诀">口诀</h3><p>参数整定找最佳， 从小到大顺序查。<br>先是比例后积分， 最后再把微分加。<br>曲线振荡很频繁， 比例度盘要放大。<br>曲线漂浮绕大弯， 比例度盘往小扳。<br>曲线偏离回复慢， 积分时间往下降。<br>曲线波动周期长， 积分时间再加长。<br>曲线振荡频率快， 先把微分降下来。<br>动差大来波动慢， 微分时间应加长。<br>理想曲线两个波， 前高后低四比一。<br>一看二调多分析， 调节质量不会低。</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;序言&quot;&gt;序言&lt;/h3&gt;
&lt;p&gt;杨过出了一会神，再伸手去会第二柄剑，只提起数尺，呛的一声，竟然脱手掉下，在石上一碰，火花四溅，不禁吓了一跳。原来那剑黑黝黝的毫无异状，却是沉重之极，三尺多长的一把剑，重量竟自不下七八十斤，比之战阵上最沉重的金刀大戟尤重数倍。杨过提起时如何想得到，出乎不意的手上一沉，便拿捏不住。于是再俯身会起，这次有了防备，会起七八十斤的重物自是不当一回事。看剑下的石刻时，见两行小字道：“重剑无锋，大巧不工。四十岁前恃之横行天下。”过了良久，才放下重剑，去取第三柄剑，这一次又上了个当。他只道这剑定然犹重前剑，因此提剑时力运左臂。那知拿在手□却轻飘飘的浑似无物，凝神一看，原来是柄木剑，年深日久，剑身剑柄均已腐朽，但见剑下的石刻道：“四十岁后，不滞于物，草木竹石均可为剑。自此精修，渐进于无剑胜有剑之境。”&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>弱弱的说一声，我还活着</title>
    <link href="https://www.darkfox.top/posts/ffe6bb28/"/>
    <id>https://www.darkfox.top/posts/ffe6bb28/</id>
    <published>2021-07-19T02:48:31.000Z</published>
    <updated>2021-07-20T08:46:06.766Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>  最近实在是太忙了，一直没时间写博客，今天终于可以摸一会鱼了（队友不在），写篇博客。 </center><span id="more"></span><h3 id="前言">前言</h3><p>没有更新的这几天我也没闲着，因为打电赛需要建模，机械部分才牢固，所以我就忙中偷闲学了一小下fusion360（截至今天学了两天），先展示一下这两天的成果吧。</p><h3 id="建模成果">建模成果</h3><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/%E4%B9%90%E9%AB%98" alt="乐高" loading="lazy"></p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/%E7%8E%BB%E7%92%83%E7%93%B6" alt="酒瓶子" loading="lazy"></p><p>感觉还不错是吧，有内味了么？但是很明显，这两个模型的曲面很少，面数也少，也没有复杂的结构，所以哦还是要修炼一下的。</p><h3 id="电控">电控</h3><p>另外就是在不停的<strong>画板子，焊板子，画板子，焊板子</strong>。。。。。。</p><p>实验室买的那个焊锡丝，尼玛的，纯锡的（不含铅，含松香）再加上质量不好，要反复加热，这两天闻那个味道哦，妈的，上头。</p><p>就像尼玛的机油炒鸡蛋一样，我实在受不了了，于是去搞了个滤气面具。</p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/%E9%9D%A2%E5%85%B7" alt="面具" loading="lazy"></p><center>这个面具的基本原理就是活性炭吸附，对付焊锡的烟尘足够了,但是不能防其它的毒气哦！</center><p>下面几个破图就是我画的一部分的pcb</p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/1" alt="中控板" loading="lazy"></p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/2" alt="中控板pcb" loading="lazy"></p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/image-20210719105914889.png" alt="一个简单的电源" loading="lazy"></p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/image-20210719110000872.png" alt="电源的pcb预览" loading="lazy"></p><p>板子画了好多，由于现在开不能开源，电赛打完以后再补上。</p><p>画这几个破板子的时候，忘记考虑了好多事情，于是乎，又要重画，再打板，再焊接（习惯就好）</p><p>不说了，stn更新了，爷要去看视频了，拜拜</p><h3 id="补充">补充</h3><p>爷今天又搞了两个模型</p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/%E8%9E%BA%E6%AF%8D" alt="无标题" loading="lazy"><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/paper%20clip%20v2.png" alt="paper clip v2" loading="lazy"></p>]]></content>
    
    
    <summary type="html">&lt;center&gt;  最近实在是太忙了，一直没时间写博客，今天终于可以摸一会鱼了（队友不在），写篇博客。 &lt;/center&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>反省</title>
    <link href="https://www.darkfox.top/posts/3028d2b2/"/>
    <id>https://www.darkfox.top/posts/3028d2b2/</id>
    <published>2021-06-03T02:33:20.000Z</published>
    <updated>2021-06-24T11:42:32.488Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/KkhUIpj7YQaAWMi.jpg" alt="2" loading="lazy"></p><span id="more"></span><p>三分钟热度：浅尝则止<br>自我设限：自知之明<br>犹豫不决：懂得思考<br>拒绝学习：掌握时间分配<br>懒惰：不参与争论<br>整天吹牛不见行动：心怀梦想</p>]]></content>
    
    
    <summary type="html">看看你占了几样。。。。。。。</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>电赛基础_基本电源</title>
    <link href="https://www.darkfox.top/posts/916b7347/"/>
    <id>https://www.darkfox.top/posts/916b7347/</id>
    <published>2021-05-27T02:45:37.000Z</published>
    <updated>2021-05-27T03:05:58.896Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span><h3 id="ac-dc-变换">AC-DC 变换</h3><p><img src="https://i.loli.net/2021/05/27/iNlQUoaCSOITpg1.png" alt="2" loading="lazy"></p><h4 id="交流电源滤波器">交流电源滤波器</h4><p><img src="https://i.loli.net/2021/05/27/MUW8QbxAkteKX5n.png" alt="pIYBAFtr_qKAHB3pAADAc29eerg513" loading="lazy"><img src="https://i.loli.net/2021/05/27/Rg4xZbPou7mJNyO.png" alt="3" style="zoom:67%;" / loading="lazy"></p><h4 id="交流电源变换以及整流">交流电源变换以及整流</h4><p><img src="https://i.loli.net/2021/05/27/IQza1YDXqtL4CHo.png" alt="4" loading="lazy"></p><h4 id="稳压电路">稳压电路</h4><p><img src="https://i.loli.net/2021/05/27/XopAZmnJgMd94hP.png" alt="5" loading="lazy"></p><h4 id="三端常用稳压元器件">三端常用稳压元器件</h4><p><img src="https://i.loli.net/2021/05/27/DR45QWUYPLKqitl.png" alt="1" loading="lazy"></p><h4 id="实例：lm317应用电路">实例：LM317应用电路</h4><h4 id="79f0f736afc37931942ae858ebc4b74543a91104"><img src="https://i.loli.net/2021/05/27/1nDRlJCufWPoHhs.jpg" alt="79f0f736afc37931942ae858ebc4b74543a91104" loading="lazy"></h4><p><img src="https://i.loli.net/2021/05/27/waxQrfTV5tZMI7L.jpg" alt="3F0DBE05148D0E157F3238D50F2A0042" loading="lazy"></p><center>最常见的lm317器件长这样</center><img src="https://i.loli.net/2021/05/27/mAjfCn9BrUHqOv7.png" alt="7" style="zoom:50%;" / loading="lazy">]]></content>
    
    
    <summary type="html">&lt;center&gt;   &lt;/center&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>电赛电工指导问题</title>
    <link href="https://www.darkfox.top/posts/19479d3b/"/>
    <id>https://www.darkfox.top/posts/19479d3b/</id>
    <published>2021-05-22T12:04:35.000Z</published>
    <updated>2021-05-24T02:24:49.357Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span><h3 id="问题">问题</h3><h4 id="第一章">第一章</h4><ul><li>1．指针式万用表的测量电路有哪几部分?各有什么功能?</li><li>2．指针式万用表表头内阻Rg、等效内阻R’g，各为什么含义?</li><li>3．如何理解“反比分流”?VOM是怎样运用“反比分流“的?</li><li>4．为什么说“万用表的等效内阻愈大、电压测量的精度愈高”；而“万用表的等效内阻愈小，电流测量的误差愈小”?</li><li>5．指针式万用表的表头刻度盘上所标符号“KO／V”是什么意思?</li><li>6．如何理解万用表的“机械调零”与“电气调零”?二者有何不同?</li><li>7．如何辨别数字万用表的“位”数?</li><li><ol start="8"><li>数字万用表测量电路包括哪几部分?各有什么功能?</li></ol></li></ul><h4 id="第二章">第二章</h4><ul><li>1．为什么说380V／220V交流电是正弦波?</li><li>2．我国通用的低压供电的相电压UP、线电压Ul分别是多少伏?它们又是如何得出的?</li><li>3，三相负载星形连接，在什么情况下可无中线供电?</li><li>4．为什么说熔断器只能装在相线上，而不可装在中线上?</li><li>5．为什么要保护接地?保护接零?具体如何实施?</li><li>6．为什么三芯插座中工作零线端不能与保护零线端短接在一起?</li><li>7．低压自动空气开关的开与关是如何工作的?</li></ul><h4 id="第三章">第三章</h4><ul><li>1．在使用电阻器与电容器时，要注意哪些主要的质量参数?为什么?</li><li>2．几只电阻器串联总阻值会增大，而并联后总阻会减小，这是为什么？电阻器串、并联对电路电压与电流各起什么作用?</li><li>3．几只电容器的串联总容量会减小，而并联总容量会增加，这是为什么?</li><li>4．有些小功率的电源电路中，常采用电容器并联一个电阻器的降压电路，试说明电容器<br>与电阻器各起什么作用?</li><li>5．常见电位器的阻值变化规律有哪几种?在运用中应如何选用?</li><li>6.常用的特殊电阻有那些?各有什么特点?</li><li>7．常用的电感线圈有哪些?应注意哪些使用知识?</li><li>8．变压器怎样变换电压、电流、阻抗?</li><li>9．设计一只稳压电源的电源变压器，要求原边电压为220V50Hz，副边为15V/2A、7V/5A。</li></ul><h4 id="第四章">第四章</h4><ul><li>1．二极管正向运用与反向运用的等效电路有何不同?</li><li>2．二极管的电气参数IDM、URM、IRM、fM各有何含义?</li><li>3．整流二极管不适宜用于检波，检波二极管通常不用于整流，这是为什么?</li><li>4．如何用万用表检测二极管的质量?</li><li>5．为什么说普通二极管工作时要远离反向击穿区，稳压二极管却要工作在反向击穿区?</li><li>6．普通发光二极管通常有哪几种驱动方式?</li><li>7．光耦合器有哪几种结构形式?它是怎样耦合信号的?</li><li>8．三极管有哪几种偏置电路？应当如何安置三极管的截止态、放大态及饱和态?</li><li>9．如何识别三极管的共射极电路、共集电极电路、共基极电路这三种电路各有什么突出特点</li><li>10.如何用万用表判别三极管的管脚，估测三极管的穿透电流ICEO及电流放大系数 ？</li><li>11.大功率达林顿管为何要设置“泄放电阻”及“续流二极管”?</li><li>12.怎样用万用表判定场效应管、单向晶闸管、双向晶闸管的电极及其质量的好坏？</li></ul><h4 id="第五章">第五章</h4><ul><li>1．什么叫地线的共阻抗干扰?设计印制板时；应如何消除这种干扰7    ．</li><li>2．所谓电源干扰表现在哪些方面?设计印制板时，应采取哪些方法抑制这种干扰?</li><li>3．设计印制板图的元件排列方式一般有哪几种?各有什么特点?</li><li>4．印制板图的绘制，要注意些什么?</li><li>5．手工制作印制板有哪些步骤?</li></ul><h4 id="第六章">第六章</h4><ul><li>1．电烙铁由哪几部分组成?内热式与外热式有何区别?今有一支25W的电烙铁，其烙铁芯阻值为1936 ，这是怎样算出来的?</li><li>2．为什么新购来的电烙铁在第1次使用时，必须先对烙铁焊头镀锡?又是怎样进行镀锡的y</li><li>3，在焊接中，对元器件的安插、焊接工艺、焊点形状以及拆焊工序，各有什么具体要求?</li><li>4，何谓焊接“1—2—3”步骤？</li><li>5，工业生产中，有哪些主要的焊接方式？各有什么特点?</li></ul><h4 id="第七章">第七章</h4><ul><li>1．半导体集成电路中的二极管有哪几种连接方式?</li><li>2．半导体集成电路的引脚排列主要有哪些形式?如何识别?</li><li>3．半导体集成电路应用中应注意些什么?</li><li>4．555时基电路的内部结构与逻辑关系是怎样的?</li><li>5．试用555时基电路设计一个定时电路，其定时时间可在1—60秒内可调。</li></ul><h4 id="第八章">第八章</h4><ul><li>1.电子电路中，有哪些常用开关?何谓开关的极、位？</li><li>2.交流电磁继电器与直流电磁继电器在结构上有什么异同点?</li><li>3.如何测定电磁继电器的吸合电压、吸合电流、释放电压、释放电流?</li><li>4.电磁继电器使用中常有些什么附加电路?其作用如何?</li><li>5.固态继电器的电气结构包括哪些部分?各自有什么功能?</li></ul><h4 id="第九章">第九章</h4><ul><li>I，动卧式扬声器由哪几部分构成?在应用中要注意哪些主要参数y</li><li>2．怎样用万用表检测扬声器的质量?</li><li>3．动圈式传声器的作用原理及其结构与动圈式扬声器有何异同?</li><li>4．驻极体传声器由哪几部分构成?它在电路中常有哪几种连接方式?</li><li>5．怎样用万用电表测试驻极体传声器?</li><li>6．耳机与耳塞机按其阻抗分各有哪几种？如何用万用电表判别其极性与质量?</li></ul><h4 id="第十一章">第十一章</h4><ul><li>1．传感器一般由哪几部分组成?各部分有何功能?</li><li>2．负温度系数与正温度系数的热敏电阻，其电气特性各有何不同?怎样用万用表检测它们的质量?</li><li>3．压敏电阻为什么有过压保护功能?它有哪些主要参数？如何用万用表判断其质量?</li><li>4．光敏电阻、光敏二极管、光敏三极管有何异同点?怎样用万用表测试其质量y</li><li>5．光耦合器是怎样传输信号的?为什么说光藕合器的抗干扰能力强?</li><li>6．光耦合器是怎样实现“门电路”逻辑功能的?</li><li>7．气敏传感器由哪些部分构成?它的电气特性主要通过什么部件起作用</li><li>8.晶振的压电效应是怎样形成的?它有哪些重要特性?</li><li>9.晶振与陶瓷谐振元件各有哪些常见器件?</li><li>10.声表面波滤波器是怎样传递信号的?，</li><li>11．肖特基二极管的伏安特性与普通晶体二极管的伏安特性有什么不同?它有什么特殊<br>用途?</li></ul><h4 id="第十二章">第十二章</h4><ul><li>1．LED数码管是怎样组成的?所谓“共阳极”、“共阴极”管工作特点有何不同?</li><li>2．液晶显示器是怎样显示数码的?</li><li>3．LED数码显示电路与LCD数码显示电路各有哪几种驱动方法?它们是怎样工作的?</li><li>4．LCL103显示电路由哪几部分组成?各起什么作用?它们是怎样工作的?</li></ul><h4 id="第十三章">第十三章</h4><ul><li>1．AC／DC电路一般由哪几部分组成?各起什么作用？</li><li>2．常见的三端式稳压电路有哪些?图13.9与13.10的典型应用电路中，其输入端与输出端</li><li>为什么要在大容量电容器旁并联一个小容量的电容器?</li><li>3．降压式DC／DC变换器是怎样工作的？</li><li>4．升压式DC/DC变挟器是怎样工作的y在图13．12典型应用电路中，二极管D为什么要选用肖特基二极管？</li><li>5．电压反转式电路由哪些部分构成。它是如何实现电压反转的?</li><li>6．开关电源有哪几种类型?高频变压器式开关电源是如何实现稳压的?</li><li>7．小型密封铝蓄电池由哪几部分构成?它有哪些重要参数?如何保持蓄电池的容量?</li></ul><h4 id="第十四章">第十四章</h4><ul><li>1．直流稳压电源由哪几部分组成?各有什么功能?</li><li>2．为什么交流毫伏表会出现所谓“打表针”现象?</li><li>3．为什么示波器的y轴衰减器及探头中的衰减器要采用阻容分压而不是纯阻分压?</li><li>4．何谓示波器的扫描“同步”?为什么要同步?</li><li>5．双踪示波器的“交替”和“断续”工作方式是何含义?为什么说，在观测低频信号时宜用断续”方式，而在观测高频信号时宜用“交替”方式?</li><li>6．信号发生器的结构主要包括哪几部分?函数信号发生器在结构上有何特点?</li><li>7．电子计数器测频，测周的原理有何异同点？</li><li>8．何谓计数器的±1误差?为了提高测频、测周的准确度，应如何减小土1误差?</li></ul><h3 id="部分解答">部分解答</h3><ul><li><p>1.1</p><p>A、测直流电流原理</p><p>如图A所示，在表头上并联一个适当的电阻（叫分流电阻）进行分流，就可以扩展电流量程。改变分流电阻的阻值，就能改变电流测量范围。</p><p>B、测直流电压原理</p><p>如图B所示，在表头上串联一个适当的电阻（叫倍增电阻）进行降压，就可以扩展电压量程。改变倍增电阻的阻值，就能改变电压的测量范围。</p><p>C、测交流电压原理</p><p>如图C所示，因为表头是直流表，所以测量交流时，需加装一个并、串式半波整流电路，将交流进行整流变成直流后再通过表头，这样就可以根据直流电的大小来测量交流电压。扩展交流电压量程的方法与直流电压量程相似。</p><p>D、测电阻原理</p><p>如图D所示，在表头上并联和串联适当的电阻，同时串接一节电池，使电流通过被测电阻，根据电流的大小，就可测量出电阻值。改变分流电阻的阻值，就能改变电阻的量程。</p><p><img src="https://i.loli.net/2021/05/22/3xTZEvNbhs24Rfp.png" alt="o4YBAFphshSAfN6zAADr4-7kO-4153" loading="lazy"></p></li></ul>]]></content>
    
    
    <summary type="html">一些电工经典基础问题</summary>
    
    
    
    <category term="电赛" scheme="https://www.darkfox.top/categories/%E7%94%B5%E8%B5%9B/"/>
    
    
  </entry>
  
  <entry>
    <title>小爷我做了个新片头</title>
    <link href="https://www.darkfox.top/posts/8c87571/"/>
    <id>https://www.darkfox.top/posts/8c87571/</id>
    <published>2021-05-22T05:18:55.000Z</published>
    <updated>2021-05-22T05:27:19.391Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><iframe id="b" class="b video_pc" src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/%E8%A7%86%E9%A2%91/Eye_Opener_Logo_x264.mp4" frameborder="0"framespacing="0"allowfullscreen="true"style="position: middle;width="100%" height="600" controls="controls" autoplay="autoplay"quality="high"></video>></iframe><span id="more"></span>]]></content>
    
    
    <summary type="html">新的片头视频,感觉还凑活，先放在这了（因为还没有加音效）</summary>
    
    
    
    <category term="视频" scheme="https://www.darkfox.top/categories/%E8%A7%86%E9%A2%91/"/>
    
    
  </entry>
  
  <entry>
    <title>在openmv中画图</title>
    <link href="https://www.darkfox.top/posts/c030c78a/"/>
    <id>https://www.darkfox.top/posts/c030c78a/</id>
    <published>2021-05-20T13:20:19.000Z</published>
    <updated>2021-06-15T12:45:56.599Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span><h4 id="画线">画线</h4><ul><li>image.draw_line(line_tuple, color=White) 在图像中画一条直线。<ul><li>line_tuple的格式是(x0, y0, x1, y1)，意思是(x0, y0)到(x1, y1)的直线。</li><li>颜色可以是灰度值(0-255)，或者是彩色值(r, g, b)的tupple。默认是白色</li></ul></li></ul><h4 id="画框">画框</h4><ul><li>image.draw_rectangle(rect_tuple, color=White) 在图像中画一个矩形框。<ul><li>rect_tuple 的格式是 (x, y, w, h)。</li></ul></li></ul><h4 id="画圆">画圆</h4><ul><li>image.draw_circle(x, y, radius, color=White) 在图像中画一个圆。<ul><li>x,y是圆心坐标</li><li>radius是圆的半径</li></ul></li></ul><h4 id="画十字">画十字</h4><ul><li>image.draw_cross(x, y, size=5, color=White) 在图像中画一个十字<ul><li>x,y是坐标</li><li>size是两侧的尺寸</li></ul></li></ul><h4 id="写字">写字</h4><ul><li>image.draw_string(x, y, text, color=White) 在图像中写字 8x10的像素<ul><li>x,y是坐标。使用\n, \r, and \r\n会使光标移动到下一行。</li><li>text是要写的字符串。</li></ul></li></ul><h4 id="圆十字瞄准镜例程-qvga类型摄像头">圆十字瞄准镜例程（qvga类型摄像头）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sensor, image, time</span><br><span class="line"></span><br><span class="line">sensor.reset() <span class="comment"># 初始化摄像头</span></span><br><span class="line">sensor.set_pixformat(sensor.RGB565) <span class="comment"># 格式为 RGB565.</span></span><br><span class="line">sensor.set_framesize(sensor.QVGA)</span><br><span class="line">sensor.skip_frames(<span class="number">10</span>) <span class="comment"># 跳过10帧，使新设置生效</span></span><br><span class="line">sensor.set_hmirror(<span class="literal">True</span>)</span><br><span class="line">sensor.set_vflip(<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">    img = sensor.snapshot()         <span class="comment"># Take a picture and return the image.</span></span><br><span class="line">    img.draw_line((<span class="number">155</span>, <span class="number">115</span>, <span class="number">160</span>, <span class="number">120</span>),color=(<span class="number">155</span>,<span class="number">255</span>,<span class="number">255</span>))</span><br><span class="line">    img.draw_line((<span class="number">160</span>, <span class="number">120</span>, <span class="number">165</span>, <span class="number">115</span>), color=(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    img.draw_rectangle((<span class="number">145</span>, <span class="number">105</span>, <span class="number">30</span>, <span class="number">30</span>), color=(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    img.draw_circle(<span class="number">160</span>, <span class="number">120</span>, <span class="number">15</span>)</span><br><span class="line">    img.draw_cross(<span class="number">160</span>,<span class="number">120</span>,size=<span class="number">15</span>)</span><br><span class="line">    img.draw_string(<span class="number">140</span>,<span class="number">135</span>, <span class="string">&quot;Target&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果（我学习用的摄像头垃圾，见谅）</p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210611112253.png" alt="1" loading="lazy"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#引入感光元件的模块</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sensor, image, time</span><br><span class="line"></span><br><span class="line">sensor.reset()                      <span class="comment"># 初始化元器件</span></span><br><span class="line">sensor.set_pixformat(sensor.RGB565) <span class="comment"># 设置为彩色</span></span><br><span class="line"><span class="comment">#设置翻转</span></span><br><span class="line"><span class="comment">#水平方向翻转</span></span><br><span class="line">sensor.set_hmirror(<span class="literal">True</span>)</span><br><span class="line">sensor.set_vflip(<span class="literal">True</span>)</span><br><span class="line"><span class="comment">#垂直方向翻转</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置图像大小</span></span><br><span class="line">sensor.set_framesize(sensor.QVGA)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sensor.skip_frames(time = <span class="number">2000</span>)     <span class="comment"># #跳过n张照片，在更改设置后，跳过一些帧，等待感光元件变稳定。</span></span><br><span class="line">clock = time.clock()                <span class="comment"># Create a clock object to track the FPS.</span></span><br><span class="line"></span><br><span class="line">sensor.set_auto_gain(<span class="literal">False</span>) <span class="comment">#自动增益开启（True）或者关闭（False）。在使用颜色追踪时，需要关闭自动增益。</span></span><br><span class="line"></span><br><span class="line">sensor.set_auto_whitebal(<span class="literal">False</span>) <span class="comment">#自动白平衡开启（True）或者关闭（False）。在使用颜色追踪时，需要关闭自动白平衡。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">    img = sensor.snapshot()         <span class="comment"># Take a picture and return the image.</span></span><br><span class="line">    img.draw_line((<span class="number">145</span>, <span class="number">105</span>, <span class="number">160</span>, <span class="number">120</span>))</span><br><span class="line">    img.draw_line((<span class="number">175</span>, <span class="number">105</span>, <span class="number">160</span>, <span class="number">120</span>), color=(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    img.draw_rectangle((<span class="number">145</span>, <span class="number">105</span>, <span class="number">30</span>, <span class="number">30</span>), color=(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    img.draw_circle(<span class="number">160</span>, <span class="number">120</span>, <span class="number">15</span>)</span><br><span class="line">    img.draw_cross(<span class="number">160</span>,<span class="number">120</span>,size=<span class="number">15</span>)</span><br><span class="line">    img.draw_string(<span class="number">140</span>,<span class="number">140</span>, <span class="string">&quot;Target！&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>还有这种的，需要其他样式的话，根据代码和注释魔改即可。</p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210611112310.png" alt="2" loading="lazy"></p>]]></content>
    
    
    <summary type="html">最近想做那个电磁炮，少不了视觉识别，既然有视觉，那当然不能少了瞄准线</summary>
    
    
    
    <category term="openmv" scheme="https://www.darkfox.top/categories/openmv/"/>
    
    
    <category term="openmv" scheme="https://www.darkfox.top/tags/openmv/"/>
    
  </entry>
  
  <entry>
    <title>Maths</title>
    <link href="https://www.darkfox.top/posts/d20bfa26/"/>
    <id>https://www.darkfox.top/posts/d20bfa26/</id>
    <published>2021-05-20T12:04:02.000Z</published>
    <updated>2021-05-20T13:52:20.789Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>  记录一下一些数学公式以及md写法的表达 </center><span id="more"></span><h4 id="老经典的希腊字母：">老经典的希腊字母：</h4><table><thead><tr><th style="text-align:center">显示</th><th style="text-align:center">命令</th><th style="text-align:center">显示</th><th style="text-align:center">命令</th></tr></thead><tbody><tr><td style="text-align:center">α</td><td style="text-align:center">\alpha</td><td style="text-align:center">β</td><td style="text-align:center">\beta</td></tr><tr><td style="text-align:center">γ</td><td style="text-align:center">\gamma</td><td style="text-align:center">δ</td><td style="text-align:center">\delta</td></tr><tr><td style="text-align:center">ε</td><td style="text-align:center">\epsilon</td><td style="text-align:center">ζ</td><td style="text-align:center">\zeta</td></tr><tr><td style="text-align:center">η</td><td style="text-align:center">\eta</td><td style="text-align:center">θ</td><td style="text-align:center">\theta</td></tr><tr><td style="text-align:center">ι</td><td style="text-align:center">\iota</td><td style="text-align:center">κ</td><td style="text-align:center">\kappa</td></tr><tr><td style="text-align:center">λ</td><td style="text-align:center">\lambda</td><td style="text-align:center">μ</td><td style="text-align:center">\mu</td></tr><tr><td style="text-align:center">ν</td><td style="text-align:center">\nu</td><td style="text-align:center">ξ</td><td style="text-align:center">\xi</td></tr><tr><td style="text-align:center">π</td><td style="text-align:center">\pi</td><td style="text-align:center">ρ</td><td style="text-align:center">\rho</td></tr><tr><td style="text-align:center">σ</td><td style="text-align:center">\sigma</td><td style="text-align:center">τ</td><td style="text-align:center">\tau</td></tr><tr><td style="text-align:center">υ</td><td style="text-align:center">\upsilon</td><td style="text-align:center">φ</td><td style="text-align:center">\phi</td></tr><tr><td style="text-align:center">χ</td><td style="text-align:center">\chi</td><td style="text-align:center">ψ</td><td style="text-align:center">\psi</td></tr><tr><td style="text-align:center">ω</td><td style="text-align:center">\omega</td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h4 id="上标和下标">上标和下标</h4><ul><li>上标：<code>^</code></li><li>下标：<code>_</code></li></ul><p>例如C_n^2   显示为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>C</mi><mi>n</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">C_n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></p><h4 id="矢量">矢量</h4><p>\vec表示为矢量 \vec a 显示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>a</mi><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault">a</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span></p><p>多个字母矢量用\overrightarrow例如：\overrightarrow{xy} 显示为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>x</mi><mi>y</mi></mrow><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">\overrightarrow{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.147em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span></p><h4 id="分类分组">分类分组</h4><p>例如10^{10+x} 显示为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mrow><mn>10</mn><mo>+</mo><mi>x</mi></mrow></msup></mrow><annotation encoding="application/x-tex">10^{10+x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span></span></p><h4 id="计算符号">计算符号</h4><p>求和 \sum_x^6{a^i}  显示为：$\sum_x^6{a^i} $</p><p>极限 \lim_{x\to 0}   显示为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>x</mi><mo>→</mo><mn>0</mn></mrow></msub></mrow><annotation encoding="application/x-tex">\lim_{x\to 0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">→</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>无穷 \infty  显示为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">∞</span></span></span></span></p><p>积分\int  显示为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∫</mo></mrow><annotation encoding="application/x-tex">\int</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.11112em;vertical-align:-0.30612em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span></span></span></span></p><p>分式 ：\frac{分式1} {分式2} 显示为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mtext>分式</mtext><mn>1</mn></mrow><mrow><mtext>分式</mtext><mn>2</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{分式1} {分式2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">分</span><span class="mord cjk_fallback mtight">式</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">分</span><span class="mord cjk_fallback mtight">式</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>根式： \sqrt [x] {y} 显示为：$  \sqrt [x] {y}$</p><h4 id="其他符号">其他符号</h4><p><img src="https://i.loli.net/2021/05/20/VBERxCQogkrAmea.png" alt="" loading="lazy"></p><h4 id="矩阵">矩阵</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$$</span>\<span class="keyword">begin</span>&#123;matrix&#125;</span><br><span class="line"><span class="number">1</span>&amp;<span class="number">0</span>&amp;<span class="number">0</span>\\</span><br><span class="line"><span class="number">0</span>&amp;<span class="number">1</span>&amp;<span class="number">0</span>\\</span><br><span class="line"><span class="number">0</span>&amp;<span class="number">0</span>&amp;<span class="number">1</span>\\</span><br><span class="line">\<span class="keyword">end</span>&#123;matrix&#125;<span class="variable">$$</span></span><br></pre></td></tr></table></figure><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{matrix}1&amp;0&amp;0\\0&amp;1&amp;0\\0&amp;0&amp;1\\\end{matrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.6000000000000005em;vertical-align:-1.5500000000000007em;"></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$$</span>\<span class="keyword">begin</span>&#123;bmatrix&#125;</span><br><span class="line">&#123;a_&#123;<span class="number">11</span>&#125;&#125;&amp;&#123;a_&#123;<span class="number">12</span>&#125;&#125;&amp;&#123;\cdots&#125;&amp;&#123;a_&#123;1n&#125;&#125;\\</span><br><span class="line">&#123;a_&#123;<span class="number">21</span>&#125;&#125;&amp;&#123;a_&#123;<span class="number">22</span>&#125;&#125;&amp;&#123;\cdots&#125;&amp;&#123;a_&#123;2n&#125;&#125;\\</span><br><span class="line">&#123;\vdots&#125;&amp;&#123;\vdots&#125;&amp;&#123;\ddots&#125;&amp;&#123;\vdots&#125;\\</span><br><span class="line">&#123;a_&#123;m1&#125;&#125;&amp;&#123;a_&#123;m2&#125;&#125;&amp;&#123;\cdots&#125;&amp;&#123;a_&#123;mn&#125;&#125;\\</span><br><span class="line">\<span class="keyword">end</span>&#123;bmatrix&#125;<span class="variable">$$</span></span><br></pre></td></tr></table></figure><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>11</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>12</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mn>1</mn><mi>n</mi></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>21</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>22</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mn>2</mn><mi>n</mi></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋱</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mi>m</mi><mn>1</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mi>m</mi><mn>2</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mi>m</mi><mi>n</mi></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix}{a_{11}}&amp;{a_{12}}&amp;{\cdots}&amp;{a_{1n}}\\{a_{21}}&amp;{a_{22}}&amp;{\cdots}&amp;{a_{2n}}\\{\vdots}&amp;{\vdots}&amp;{\ddots}&amp;{\vdots}\\{a_{m1}}&amp;{a_{m2}}&amp;{\cdots}&amp;{a_{mn}}\\\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.459999999999999em;vertical-align:-2.4799999999999995em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.953995em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.4999850000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.0959850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.6919850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.712975em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.953995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.7674999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span></span><span style="top:-1.5675000000000006em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.7674999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span></span><span style="top:-1.5675000000000006em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.64em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="mord"><span class="minner">⋯</span></span></span></span><span style="top:-4.44em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="mord"><span class="minner">⋯</span></span></span></span><span style="top:-2.5799999999999996em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="mord"><span class="minner">⋱</span></span></span></span><span style="top:-1.3800000000000006em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="mord"><span class="minner">⋯</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.7674999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span></span><span style="top:-1.5675000000000006em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.953995em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.4999850000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.0959850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.6919850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.712975em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.953995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$$\begin&#123;array&#125;&#123;c<span class="operator">|</span>lll&#125;</span><br><span class="line">&#123;<span class="operator">↓</span>&#125;<span class="operator">&amp;</span>&#123;a&#125;<span class="operator">&amp;</span>&#123;b&#125;<span class="operator">&amp;</span>&#123;c&#125;\\</span><br><span class="line">\hline</span><br><span class="line">&#123;<span class="type">R_1</span>&#125;<span class="operator">&amp;</span>&#123;c&#125;<span class="operator">&amp;</span>&#123;b&#125;<span class="operator">&amp;</span>&#123;a&#125;\\</span><br><span class="line">&#123;<span class="type">R_2</span>&#125;<span class="operator">&amp;</span>&#123;b&#125;<span class="operator">&amp;</span>&#123;c&#125;<span class="operator">&amp;</span>&#123;c&#125;\\</span><br><span class="line">\end&#123;array&#125;$$</span><br></pre></td></tr></table></figure><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="center left left left" columnlines="solid none none" columnspacing="1em" rowlines="solid none"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">↓</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>R</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>R</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{c|lll}{↓}&amp;{a}&amp;{b}&amp;{c}\\\hline{R_1}&amp;{c}&amp;{b}&amp;{a}\\{R_2}&amp;{b}&amp;{c}&amp;{c}\\\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.6000000000000005em;vertical-align:-1.5500000000000007em;"></span><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:4.05em;"></span><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mrel">↓</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="vertical-separator" style="height:3.6em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-1.5500000000000003em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">c</span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">c</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span style="top:-4.8999999999999995em;"><span class="pstrut" style="height:4.05em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span></span></span></p><h4 id="方程">方程</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$$\begin&#123;cases&#125;</span><br><span class="line">a_1x+b_1y+c_1z=d_1\\</span><br><span class="line">a_2x+b_2y+c_2z=d_2\\</span><br><span class="line">a_3x+b_3y+c_3z=d_3\\</span><br><span class="line">\end&#123;cases&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub><mi>y</mi><mo>+</mo><msub><mi>c</mi><mn>1</mn></msub><mi>z</mi><mo>=</mo><msub><mi>d</mi><mn>1</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>2</mn></msub><mi>x</mi><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub><mi>y</mi><mo>+</mo><msub><mi>c</mi><mn>2</mn></msub><mi>z</mi><mo>=</mo><msub><mi>d</mi><mn>2</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>3</mn></msub><mi>x</mi><mo>+</mo><msub><mi>b</mi><mn>3</mn></msub><mi>y</mi><mo>+</mo><msub><mi>c</mi><mn>3</mn></msub><mi>z</mi><mo>=</mo><msub><mi>d</mi><mn>3</mn></msub></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}a_1x+b_1y+c_1z=d_1\\a_2x+b_2y+c_2z=d_2\\a_3x+b_3y+c_3z=d_3\\\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.9099999999999997em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.2950099999999996em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.30501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>]]></content>
    
    
    <summary type="html">哎，数学真好玩，就是头上有点凉快。。。</summary>
    
    
    
    <category term="数学" scheme="https://www.darkfox.top/categories/%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="数学" scheme="https://www.darkfox.top/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>在孤独中茧变</title>
    <link href="https://www.darkfox.top/posts/f36c2e7e/"/>
    <id>https://www.darkfox.top/posts/f36c2e7e/</id>
    <published>2021-05-13T03:36:07.000Z</published>
    <updated>2021-05-13T05:48:14.374Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>人这一生，不论爱情如何美妙、世界如何精彩，孤独都是必须去面对和承担的永恒宿命，没有任何人任何事能够将它改变。毕竟，深究这个神奇的世界，本就是孤独的。在诞生宇宙之前一切都是孤独的，因为时间与空间没有意义，更没有生命，没有花鸟鱼虫，有的只有一片死沉沉的孤寂。终于有一天，宇宙受不了了，它爆发了，爆发的歇斯底里，以致于空间开始无限膨胀。但是，这也只是片刻的喧闹，它终究会冷静下来，再次陷入那死沉沉的孤寂，这一切都是注定的，这就是它的命运。世界如此，身为它的一部分，人更是如此。从一出生就注定了其必将湮灭，陪伴着宇宙母亲，一起陷入无穷尽的孤寂中，这谁也无法改变。</p><span id="more"></span><p>所以，朋友，孤独是你的终点，也是你的起点，这世界的一切都是始于孤独终于孤独。学会与它共处，而不是学着与它对抗。试想一下，这位自始至终陪伴我们的，一直陪伴在你身边的孤独，是朋友？还是敌人呢？其实，它更像一位旁观者，它制定了这一切的规则，而它不需要做什么，也不必做什么，只需在旁边欣赏自己的作品。朋友，这都是规则下的产物，没有人可以打破这个终极孤独的局面。我们能做的只有接受它。</p><p>生命，是个奇迹。对于这个世界来讲，生命就像被点燃了的绚丽烟花，窜上云霄，在片刻间火花绽放，又在片刻间冷寂。有人会思考，这一切有什么意义？朋友，对于时间来讲，人生，本就没有意义，一切都将成为过往的云烟。所谓的意义，就是人在不断的寻找意义，就是这个过程。人的一生就是在不断探寻意义的过程，不断认识自己的过程。但是朋友，人终将还是自己的陌生人。人们常踟蹰多年，仍然不知道，他们需要的只是一双可以依靠的臂膀，而并不是一个能读懂自己沉默的人。人总是像智者一样劝慰别人，像傻子一样折磨自己，但最终，还是不得不承认，自己仍然是自己的陌生人。</p><p>对生命而言，接纳才是最好的温柔，不论是接纳一个人的出现，还是，接纳一个人的从此不见。如果有一天你能接纳自己所有的曾经，那么你就找到了一条通往幸福的捷径。接纳别人往往不难，人最难的是接纳自己。人们往往将热枕抛向他人，却始终无法接纳自己。那些过往，那些时光，成为了一份沉重的包袱，始终压在了心头。世上的大部分人都背着太多的“放不下”，可是那些“放不下”会让你的步伐变慢，人生本是一场看不完的风景。陌生人啊，何不轻装上路，成就一个更丰富的自己。</p><p>孤独很强大，人也很强大。孤独制定了规则，而我们制造了bug。人，会成长、会变成熟、会变世故、会变老。但是，心，不会变。即使孤独伴随着时间将你的内心刻满痕迹，它也无法改变你的心。人心不变，一切皆可期。哪怕过着最苦难的生活，也不要忘了你的心，那里留存着这个世界上最宝贵的礼物——梦想！要知道，倔强是时光在心上留下的茧，厚厚的孤独，让你变得更坚强！</p>]]></content>
    
    
    <summary type="html">好久没写过文章了，正好有活动，来写一篇看看文采还在么</summary>
    
    
    
    
    <category term="文章" scheme="https://www.darkfox.top/tags/%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>常用泰勒级数展开</title>
    <link href="https://www.darkfox.top/posts/dbe2b6d3/"/>
    <id>https://www.darkfox.top/posts/dbe2b6d3/</id>
    <published>2021-05-09T13:59:07.000Z</published>
    <updated>2021-05-10T07:57:30.637Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><div class="row">    <embed src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/10%E4%B8%AA%E6%9C%80%E5%B8%B8%E8%A7%81%E7%9A%84%E6%B3%B0%E5%8B%92%E7%BA%A7%E6%95%B0%E5%B1%95%E5%BC%80%E5%85%AC%E5%BC%8Fcommontaylorseries.pdf" width="100%" height="550" type="application/pdf"></div><span id="more"></span> ]]></content>
    
    
    <summary type="html">常用的泰勒级数展开（学习用）</summary>
    
    
    
    <category term="数学" scheme="https://www.darkfox.top/categories/%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="数学" scheme="https://www.darkfox.top/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>柯西积分公式</title>
    <link href="https://www.darkfox.top/posts/29abfbc/"/>
    <id>https://www.darkfox.top/posts/29abfbc/</id>
    <published>2021-05-09T03:16:01.000Z</published>
    <updated>2021-05-09T03:18:01.046Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><iframe id="b" class="b video_pc"         src="https://xbeibeix.com/api/bilibili/biliplayer/?url=https://www.bilibili.com/video/BV1uA411j7jA?from=search&seid=8534947394227717108" frameborder="0"framespacing="0"allowfullscreen="true"style="position: middle;width="100%" height="600" controls="controls" autoplay="autoplay"quality="high"></video>></iframe><span id="more"></span>]]></content>
    
    
    <summary type="html">这个老师讲的很太透彻了，还有小技巧也很实用</summary>
    
    
    
    <category term="数学" scheme="https://www.darkfox.top/categories/%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="数学" scheme="https://www.darkfox.top/tags/%E6%95%B0%E5%AD%A6/"/>
    
    <category term="复变函数" scheme="https://www.darkfox.top/tags/%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>ad常用元器件等</title>
    <link href="https://www.darkfox.top/posts/ed712c4d/"/>
    <id>https://www.darkfox.top/posts/ed712c4d/</id>
    <published>2021-05-06T03:25:26.000Z</published>
    <updated>2021-05-07T13:51:56.037Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>  我从网络上找到了一些常用的元器件的名称，在此分享给大家 </center><span id="more"></span><p>原理图常用库文件：<br>Miscellaneous Devices.ddb<br>Dallas Microprocessor .ddb<br>Intel Databooks.ddb<br>Protel DOS Schematic Libraries.ddb<br>PCB 元件常用库：<br>Advpcb.ddb<br>General IC.ddb<br>Miscellaneous.ddb<br>部分 分立元件库元件名称及中英对照<br>AND 与门<br>ANTENNA 天线<br>BATTERY 直流电源<br>BELL 铃,钟<br>BVC 同轴电缆接插件<br>BRIDEG 1 整流桥 (二极管 )<br>BRIDEG 2 整流桥 (集成块 )<br>BUFFER 缓冲器<br>BUZZER 蜂鸣器<br>CAP 电容<br>CAPACITOR 电容<br>CAPACITOR POL 有极性电容<br>CAPVAR 可调电容<br>CIRCUIT BREAKER 熔断丝<br>COAX 同轴电缆<br>CON 插口<br>CRYSTAL 晶体整荡器<br>DB 并行插口<br>DIODE 二极管<br>DIODE SCHOTTKY 稳压二极管<br>DIODE VARACTOR 变容二极管<br>DPY_3-SEG 3 段 LED<br>DPY_7-SEG 7 段 LED<br>DPY_7-SEG_DP 7 段 LED(带小数点 )<br>ELECTRO 电解电容<br>FUSE 熔断器<br>INDUCTOR 电感<br>INDUCTOR IRON 带铁芯电感<br>INDUCTOR3 可调电感<br>JFET N N 沟道场效应管<br>JFET P P 沟道场效应管<br>LAMP 灯泡<br>LAMP NEDN 起辉器<br>LED 发光二极管<br>METER 仪表<br>MICROPHONE 麦克风<br>MOSFET MOS 管<br>MOTOR AC 交流电机<br>MOTOR SERVO 伺服电机<br>NAND 与非门<br>NOR 或非门<br>NOT 非门<br>NPN NPN 三极管<br>NPN-PHOTO 感光三极管<br>OPAMP 运放<br>OR 或门<br>PHOTO 感光二极管<br>PNP 三极管<br>NPN DAR NPN 三极管<br>PNP DAR PNP 三极管<br>POT 滑线变阻器<br>PELAY-DPDT 双刀双掷继电器<br>RES1.2 电阻<br>RES3.4 可变电阻<br>RESISTOR BRIDGE ? 桥式电阻<br>RESPACK ? 电阻<br>SCR 晶闸管<br>PLUG ? 插头<br>PLUG AC FEMALE 三相交流插头<br>SOCKET ? 插座<br>SOURCE CURRENT 电流源<br>SOURCE VOLTAGE 电压源<br>SPEAKER 扬声器<br>SW ? 开关<br>SW-DPDY ? 双刀双掷开关<br>SW-SPST ? 单刀单掷开关<br>SW-PB 按钮<br>THERMISTOR 电热调节器<br>TRANS1 变压器<br>TRANS2 可调变压器<br>TRIAC ? 三端双向可控硅<br>TRIODE ? 三极真空管<br>VARISTOR 变阻器<br>ZENER ? 齐纳二极管<br>DPY_7-SEG_DP 数码管<br>SW-PB 开关<br>74系列：<br>74LS00 TTL 2 输入端四与非门<br>74LS01 TTL 集电极开路 2输入端四与非门<br>74LS02 TTL 2 输入端四或非门<br>74LS03 TTL 集电极开路 2输入端四与非门<br>74LS122 TTL 可再触发单稳态多谐振荡器<br>74LS123 TTL 双可再触发单稳态多谐振荡器<br>74LS125 TTL 三态输出高有效四总线缓冲门<br>74LS126 TTL 三态输出低有效四总线缓冲门<br>74LS13 TTL 4 输入端双与非施密特触发器<br>74LS132 TTL 2 输入端四与非施密特触发器<br>74LS133 TTL 13 输入端与非门<br>74LS136 TTL 四异或门<br>74LS138 TTL 3-8 线译码器 / 复工器<br>74LS139 TTL 双 2-4线译码器 /复工器<br>74LS14 TTL 六反相施密特触发器<br>74LS145 TTL BCD — 十进制译码 / 驱动器<br>74LS15 TTL 开路输出 3输入端三与门<br>74LS150 TTL 16 选 1数据选择 /多路开关<br>74LS151 TTL 8 选1数据选择器<br>74LS153 TTL 双 4选1数据选择器<br>74LS154 TTL 4 线—16线译码器<br>74LS155 TTL 图腾柱输出译码器 /分配器<br>74LS156 TTL 开路输出译码器 / 分配器<br>74LS157 TTL 同相输出四 2选1数据选择器<br>74LS158 TTL 反相输出四 2选1数据选择器<br>74LS16 TTL 开路输出六反相缓冲 / 驱动器<br>74LS160 TTL 可预置 BCD 异步清除计数器<br>74LS161 TTL 可予制四位二进制异步清除计数器<br>74LS162 TTL 可预置 BCD 同步清除计数器<br>74LS163 TTL 可予制四位二进制同步清除计数器<br>74LS164 TTL 八位串行入 / 并行输出移位寄存器<br>74LS165 TTL 八位并行入 / 串行输出移位寄存器<br>74LS166 TTL 八位并入 / 串出移位寄存器<br>74LS169 TTL 二进制四位加 / 减同步计数器<br>74LS17 TTL 开路输出六同相缓冲 / 驱动器<br>74LS170 TTL 开路输出 4×4寄存器堆<br>74LS173 TTL 三态输出四位 D 型寄存器<br>74LS174 TTL 带公共时钟和复位六 D 触发器<br>74LS175 TTL 带公共时钟和复位四 D 触发器<br>74LS180 TTL 9 位奇数 / 偶数发生器 / 校验器<br>74LS181 TTL 算术逻辑单元 / 函数发生器<br>74LS185 TTL 二进制 —BCD 代码转换器<br>74LS190 TTL BCD 同步加 / 减计数器<br>74LS191 TTL 二进制同步可逆计数器<br>74LS192 TTL 可预置 BCD 双时钟可逆计数器<br>74LS193 TTL 可预置四位二进制双时钟可逆计数器<br>74LS194 TTL 四位双向通用移位寄存器<br>74LS195 TTL 四位并行通道移位寄存器<br>74LS196 TTL 十进制 /二-十进制可预置计数锁存器<br>74LS197 TTL 二进制可预置锁存器 /计数器<br>74LS20 TTL 4 输入端双与非门<br>74LS21 TTL 4 输入端双与门<br>74LS22 TTL 开路输出 4输入端双与非门<br>74LS221 TTL 双 /单稳态多谐振荡器<br>74LS240 TTL 八反相三态缓冲器 /线驱动器<br>74LS241 TTL 八同相三态缓冲器 /线驱动器<br>74LS243 TTL 四同相三态总线收发器<br>74LS244 TTL 八同相三态缓冲器 /线驱动器<br>74LS245 TTL 八同相三态总线收发器<br>74LS247 TTL BCD — 7段15V 输出译码 / 驱动器<br>74LS248 TTL BCD — 7段译码 /升压输出驱动器<br>74LS249 TTL BCD — 7段译码 /开路输出驱动器<br>74LS251 TTL 三态输出 8选1数据选择器 / 复工器<br>74LS253 TTL 三态输出双 4选1数据选择器 / 复工器<br>74LS256 TTL 双四位可寻址锁存器<br>74LS257 TTL 三态原码四 2选1数据选择器 / 复工器<br>74LS258 TTL 三态反码四 2选1数据选择器 / 复工器<br>74LS259 TTL 八位可寻址锁存器 /3-8 线译码器<br>74LS26 TTL 2 输入端高压接口四与非门<br>74LS260 TTL 5 输入端双或非门<br>74LS266 TTL 2 输入端四异或非门<br>74LS27 TTL 3 输入端三或非门<br>74LS273 TTL 带公共时钟复位八 D 触发器<br>74LS279 TTL 四图腾柱输出 S-R 锁存器<br>74LS28 TTL 2 输入端四或非门缓冲器<br>74LS283 TTL 4 位二进制全加器<br>74LS290 TTL 二 /五分频十进制计数器<br>74LS293 TTL 二 /八分频四位二进制计数器<br>74LS295 TTL 四位双向通用移位寄存器<br>74LS298 TTL 四 2输入多路带存贮开关<br>74LS299 TTL 三态输出八位通用移位寄存器<br>74LS30 TTL 8 输入端与非门<br>74LS32 TTL 2 输入端四或门<br>74LS322 TTL 带符号扩展端八位移位寄存器<br>74LS323 TTL 三态输出八位双向移位 /存贮寄存器<br>74LS33 TTL 开路输出 2输入端四或非缓冲器<br>74LS347 TTL BCD — 7段译码器 / 驱动器<br>74LS352 TTL 双 4选1数据选择器 /复工器<br>74LS353 TTL 三态输出双 4选1数据选择器 / 复工器<br>74LS365 TTL 门使能输入三态输出六同相线驱动器<br>74LS365 TTL 门使能输入三态输出六同相线驱动器<br>74LS366 TTL 门使能输入三态输出六反相线驱动器<br>74LS367 TTL 4/2 线使能输入三态六同相线驱动器<br>74LS368 TTL 4/2 线使能输入三态六反相线驱动器<br>74LS37 TTL 开路输出 2输入端四与非缓冲器<br>74LS373 TTL 三态同相八 D 锁存器<br>74LS374 TTL 三态反相八 D 锁存器<br>74LS375 TTL 4 位双稳态锁存器<br>74LS377 TTL 单边输出公共使能八 D 锁存器<br>74LS378 TTL 单边输出公共使能六 D 锁存器<br>74LS379 TTL 双边输出公共使能四 D 锁存器<br>74LS38 TTL 开路输出 2输入端四与非缓冲器<br>74LS380 TTL 多功能八进制寄存器<br>74LS39 TTL 开路输出 2输入端四与非缓冲器<br>74LS390 TTL 双十进制计数器<br>74LS393 TTL 双四位二进制计数器<br>74LS40 TTL 4 输入端双与非缓冲器<br>74LS42 TTL BCD —十进制代码转换器<br>74LS352 TTL 双 4选1数据选择器 /复工器<br>74LS353 TTL 三态输出双 4选1数据选择器 / 复工器<br>74LS365 TTL 门使能输入三态输出六同相线驱动器<br>74LS366 TTL 门使能输入三态输出六反相线驱动器<br>74LS367 TTL 4/2 线使能输入三态六同相线驱动器<br>74LS368 TTL 4/2 线使能输入三态六反相线驱动器<br>74LS37 TTL 开路输出 2输入端四与非缓冲器<br>74LS373 TTL 三态同相八 D 锁存器<br>74LS374 TTL 三态反相八 D 锁存器<br>74LS375 TTL 4 位双稳态锁存器<br>74LS377 TTL 单边输出公共使能八 D 锁存器<br>74LS378 TTL 单边输出公共使能六 D 锁存器<br>74LS379 TTL 双边输出公共使能四 D 锁存器<br>74LS38 TTL 开路输出 2输入端四与非缓冲器<br>74LS380 TTL 多功能八进制寄存器<br>74LS39 TTL 开路输出 2输入端四与非缓冲器<br>74LS390 TTL 双十进制计数器<br>74LS393 TTL 双四位二进制计数器<br>74LS40 TTL 4 输入端双与非缓冲器<br>74LS42 TTL BCD —十进制代码转换器<br>74LS447 TTL BCD — 7段译码器 / 驱动器<br>74LS45 TTL BCD —十进制代码转换 /驱动器<br>74LS450 TTL 16:1 多路转接复用器多工器<br>74LS451 TTL 双 8:1 多路转接复用器多工器<br>74LS453 TTL 四 4:1 多路转接复用器多工器<br>74LS46 TTL BCD —7段低有效译码 / 驱动器<br>74LS460 TTL 十位比较器<br>74LS461 TTL 八进制计数器<br>74LS465 TTL 三态同相 2与使能端八总线缓冲器<br>74LS466 TTL 三态反相 2与使能八总线缓冲器<br>74LS467 TTL 三态同相 2使能端八总线缓冲器<br>74LS468 TTL 三态反相 2使能端八总线缓冲器<br>74LS469 TTL 八位双向计数器<br>74LS47 TTL BCD —7段高有效译码 / 驱动器<br>74LS48 TTL BCD —7段译码器 / 内部上拉输出驱动<br>74LS490 TTL 双十进制计数器<br>74LS491 TTL 十位计数器<br>74LS498 TTL 八进制移位寄存器<br>74LS50 TTL 2-3/2-2 输入端双与或非门<br>74LS502 TTL 八位逐次逼近寄存器<br>74LS503 TTL 八位逐次逼近寄存器<br>74LS51 TTL 2-3/2-2 输入端双与或非门<br>74LS533 TTL 三态反相八 D 锁存器<br>74LS534 TTL 三态反相八 D 锁存器<br>74LS54 TTL 四路输入与或非门<br>74LS540 TTL 八位三态反相输出总线缓冲器<br>74LS55 TTL 4 输入端二路输入与或非门<br>74LS563 TTL 八位三态反相输出触发器<br>74LS564 TTL 八位三态反相输出 D 触发器<br>74LS573 TTL 八位三态输出触发器<br>74LS574 TTL 八位三态输出 D 触发器<br>74LS645 TTL 三态输出八同相总线传送接收器<br>74LS670 TTL 三态输出 4×4寄存器堆<br>74LS73 TTL 带清除负触发双 J-K 触发器<br>74LS74 TTL 带置位复位正触发双 D 触发器<br>74LS76 TTL 带预置清除双 J-K 触发器<br>74LS83 TTL 四位二进制快速进位全加器<br>74LS85 TTL 四位数字比较器<br>74LS86 TTL 2 输入端四异或门<br>74LS90 TTL 可二 / 五分频十进制计数器<br>74LS93 TTL 可二 / 八分频二进制计数器<br>74LS95 TTL 四位并行输入 输出移位寄存器<br>74LS97 TTL 6 位同步二进制乘法器<br>CD 系列： ：<br>CD4000 双3输入端或非门 +单非门 TI<br>CD4001 四2输入端或非门 HIT/NSC/TI/GOL<br>CD4002 双4输入端或非门 NSC<br>CD4006 18 位串入 / 串出移位寄存器              | NSC        |<br>CD4007 双互补对加反相器                        | NSC        |<br>CD4008 4 位超前进位全加器                      | NSC        |<br>CD4009 六反相缓冲 /变换器                      | NSC        |<br>CD4010 六同相缓冲 /变换器                      | NSC        |<br>CD4011 四2输入端与非门  CD4012 双4输入端与非门 | HIT/TI NSC |<br>CD4013 双主 -从 D 型触发器 FSC/NSC/TOS<br>CD4014 8 位串入 /并入 -串出移位寄存器 NSC<br>CD4015 双4位串入 / 并出移位寄存器 TI<br>CD4016 四传输门 FSC/TI<br>CD4017 十进制计数 /分配器 FSC/TI/MOT<br>CD4018 可预制 1/N 计数器 NSC/MOT<br>CD4019 四与或选择器 PHI<br>CD4020 14 级串行二进制计数 /分频器 FSC<br>CD4021 08 位串入 / 并入 -串出移位寄存器  CD4022 八进制计数 /分配器 NSC/MOT | PHI/NSC    |<br>CD4023 三3输入端与非门                                       | NSC/MOT/TI |<br>CD4024 7 级二进制串行计数 / 分频器 NSC/MOT/TI<br>CD4025 三3输入端或非门                                       | NSC/MOT/TI |<br>CD4026 十进制计数 /7 段译码器 NSC/MOT/TI<br>CD4027 双 J-K 触发器 NSC/MOT/TI<br>CD4028 BCD 码十进制译码器                                    | NSC/MOT/TI |<br>CD4029 可预置可逆计数器                                      | NSC/MOT/TI |<br>CD4030 四异或门 NSC/MOT/TI/GOL<br>CD4031 64 位串入 / 串出移位存储器  CD4032 三串行加法器 NSC/TI | NSC/MOT/TI |<br>CD4033 十进制计数 /7 段译码器 NSC/TI<br>CD4034 8 位通用总线寄存器                                    | NSC/MOT/TI |<br>CD4035 4 位并入 /串入 -并出 / 串出移位寄存 NSC/MOT/TI<br>CD4038 三串行加法器 NSC/TI<br>CD4040 12 级二进制串行计数 /分频器 NSC/MOT/TI<br>CD4041 四同相 / 反相缓冲器 NSC/MOT/TI<br>CD4042 四锁存 D 型触发器 NSC/MOT/TI<br>CD4043 4 三态 R-S 锁存触发器 (“1” 触发 ) NSC/MOT/TI<br>CD4044 四三态 R-S 锁存触发器 (“0” 触发 ) NSC/MOT/TI<br>CD4046 锁相环 NSC/MOT/TI/PHI<br>CD4047 无稳态 / 单稳态多谐振荡器  CD4048 4 输入端可扩展多功能门 | NSC/MOT/TI NSC/HIT/TI |<br>CD4049 六反相缓冲 /变换器 NSC/HIT/TI CD4050 六同相缓冲 /变换器 NSC/MOT/TI<br>CD4051 八选一模拟开关                                             NSC/MOT/TI<br>CD4052 双4选1模拟开关 NSC/MOT/TI<br>CD4053 三组二路模拟开关                                       NSC/MOT/TI<br>CD4054 液晶显示驱动器                                           NSC/HIT/TI<br>CD4055 BCD-7 段译码 / 液晶驱动器 NSC/HIT/TI<br>CD4056 液晶显示驱动器                                        | NSC/HIT/TI |<br>CD4059 “N”分频计数器 NSC/TI CD4060 14 级二进制串行计数 /分频器 NSC/TI/MOT |<br>CD4063 四位数字比较器                                        | NSC/HIT/TI |<br>CD4066 四传输门 NSC/TI/MOT<br>CD4067 16 选1模拟开关 NSC/TI<br>CD4068 八输入端与非门 /与门 NSC/HIT/TI<br>CD4069 六反相器 NSC/HIT/TI<br>CD4070 四异或门 NSC/HIT/TI<br>CD4071 四2输入端或门 NSC/TI<br>CD4072 双4输入端或门 NSC/TI<br>CD4073 三3输入端与门 NSC/TI<br>CD4075 三3输入端或门 NSC/TI<br>CD4076 四 D 寄存器<br>CD4077 四2输入端异或非门 HIT<br>CD4078 8 输入端或非门 / 或门<br>CD4081 四2输入端与门 NSC/HIT/TI<br>CD4082 双4输入端与门 NSC/HIT/TI<br>CD4085 双2路2输入端与或非门<br>CD4086 四2输入端可扩展与或非门<br>CD4089 二进制比例乘法器<br>CD4093 四2输入端施密特触发器  CD4094 8 位移位存储总线寄存器  CD4095 3 输入端 J-K 触发器 CD4096 3 输入端 J-K 触发器 CD4097 双路八选一模拟开关 | NSC/MOT/ST NSC/TI/PHI |<br>CD4098 双单稳态触发器                                        | NSC/MOT/TI<br>CD4099 8 位可寻址锁存器 NSC/MOT/ST<br>CD40100 32 位左 / 右移位寄存器<br>CD40101 9 位奇偶较验器<br>CD40102 8 位可预置同步 BCD 减法计数器<br>CD40103 8 位可预置同步二进制减法计数器<br>CD40104 4 位双向移位寄存器<br>CD40105 先入先出 FI-FD 寄存器<br>CD40106 六施密特触发器 NSC\TI<br>CD40107 双2输入端与非缓冲 / 驱动器 HAR\TI<br>CD40108 4 字×4位多通道寄存器<br>CD40109 四低 -高电平位移器 CD4529 双四路 / 单八路模拟开关<br>CD4530 双5输入端优势逻辑门<br>CD4531 12 位奇偶校验器<br>CD4532 8 位优先编码器<br>CD4536 可编程定时器<br>CD4538 精密双单稳<br>CD4539 双四路数据选择器<br>CD4541 可编程序振荡<br>CD4543 BCD 七段锁存译码 ,驱动器<br>CD4544 BCD 七段锁存译码 ,驱动器<br>CD4547 BCD 七段译码 /大电流驱动器<br>CD4549 函数近似寄存器<br>CD4551 四2通道模拟开关<br>CD4553 三位 BCD 计数器<br>CD4555 双二进制四选一译码器 /分离器<br>CD4556 双二进制四选一译码器 /分离器<br>CD4558 BCD 八段译码器<br>CD4560 &quot;N&quot;BCD 加法器<br>CD4561 “9” 求补器<br>CD4573 四可编程运算放大器<br>CD4574 四可编程电压比较器<br>CD4575 双可编程运放 /比较器<br>CD4583 双施密特触发器<br>CD4584 六施密特触发器<br>CD4585 4 位数值比较器<br>CD4599 8 位可寻址锁存器<br>CD40110 十进制加 / 减,计数 ,锁存 ,译码驱动 ST<br>CD40147 10-4 线编码器 NSC\MOT<br>CD40160 可预置 BCD 加计数器 NSC\MOT<br>CD40161 可预置 4位二进制加计数器 NSC\MOT<br>CD40162 BCD 加法计数器 NSC\MOT<br>CD40163 4 位二进制同步计数器 NSC\MOT<br>CD40174 六锁存 D 型触发器 NSC\TI\MOT<br>CD40175 四 D 型触发器 NSC\TI\MOT<br>CD40181 4 位算术逻辑单元 /函数发生器<br>CD40182 超前位发生器<br>CD40192 可预置 BCD 加/减计数器 (双时钟 ) NSC\TI<br>CD40193 可预置 4位二进制加 / 减计数器 NSC\TI<br>CD40194 4 位并入 / 串入 -并出 /串出移位寄存 NSC\MOT<br>CD40195 4 位并入 / 串入 -并出 /串出移位寄存 NSC\MOT<br>CD40208 4 ×4多端口寄存器<br>型号 器件名称 厂牌 备注<br>CD4501 4 输入端双与门及 2输入端或非门<br>CD4502 可选通三态输出六反相 /缓冲器<br>CD4503 六同相三态缓冲器<br>CD4504 六电压转换器<br>CD4506 双二组 2输入可扩展或非门<br>CD4508 双4位锁存 D 型触发器<br>CD4510 可预置 BCD 码加 / 减计数器<br>CD4511 BCD 锁存 ,7段译码 ,驱动器<br>CD4512 八路数据选择器<br>CD4513 BCD 锁存 ,7段译码 ,驱动器 (消隐 )<br>CD4514 4 位锁存 ,4线-16线译码器<br>CD4515 4 位锁存 ,4线-16线译码器<br>CD4516 可预置 4位二进制加 /减计数器<br>CD4517 双64位静态移位寄存器<br>CD4518 双 BCD 同步加计数器<br>CD4519 四位与或选择器<br>CD4520 双4位二进制同步加计数器<br>CD4521 24 级分频器<br>CD4522 可预置 BCD 同步 1/N 计数器<br>CD4526 可预置 4位二进制同步 1/N 计数器<br>CD4527 BCD 比例乘法器<br>CD4528 双单稳态触发器</p>]]></content>
    
    
    <summary type="html">本文仅作为学习用途</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>一个简单的总结</title>
    <link href="https://www.darkfox.top/posts/10b2113f/"/>
    <id>https://www.darkfox.top/posts/10b2113f/</id>
    <published>2021-05-05T07:41:22.000Z</published>
    <updated>2021-05-05T07:42:15.131Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span>]]></content>
    
    
    <summary type="html">一个简单的小总结</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>造一台3d打印机</title>
    <link href="https://www.darkfox.top/posts/73179b3b/"/>
    <id>https://www.darkfox.top/posts/73179b3b/</id>
    <published>2021-05-04T14:26:34.000Z</published>
    <updated>2021-05-17T10:05:05.310Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>  之前一直想搞个3d打印机来着，终于抽出来时间搞它了! </center><span id="more"></span><h3 id="选材">选材</h3><p>主要是市面上的3d打印机的成品太贵了，动不动几千块，还有上万的。。。。。。</p><p>经过一番选材，我觉得还是自己造一个算了。</p><p>自己挑零件的话，水太深了(主要是菜)，再加上手上有点零件。于是乎搞了套小树的零部件。价格很美丽，400多块钱。</p><p>大致长下面这个样子</p><p>优点</p><ul><li>便宜（400多，还要什么自行车）</li><li>耐玩（毕竟你知道的结构，可以随便魔改）</li><li>精度还可以（0.15左右的精度）</li><li>学习价值大（废话，自己做一个啥都要学）</li><li>性价比高</li></ul><p>缺点</p><ul><li>难折腾（很正常，毕竟自己搞大大小小都是坑）</li><li>精度和光敏树脂的机器还是没法比较（调参调的好的话，倒是可以）</li><li>不美观（壳子啥的要自己设计，好不好看看自己实力了）</li><li>打印面积小（后期可以自己加结构）</li></ul><p><img src="https://i.loli.net/2021/05/17/1eBrugW4i7YChVE.png" alt="image-20210517173855746" loading="lazy"><em>3d打印机</em></p><p>这是我组装了一半的时候的亚子</p><p><img src="https://i.loli.net/2021/05/17/rhlc6J7R9UDWQ1C.jpg" alt="C5C144AD3C6A8AC7ED1EECEADA4E1D24" loading="lazy"></p><p>3d打印机的精度主要看运动装置和挤出头,还有热台.虽然也可以冷打,但是还是推荐热打,因为材料打出来的时候是热的,碰到了冷板的话会迅速冷缩,有容易开裂以及不好成型的缺点,所以我搞了个热台的.以及本人比较懒,所以搞了个磁吸的平台,这样不用每次都费劲的铲下来了.只需要取下来磁吸台就可以了.</p><p><img src="https://i.loli.net/2021/05/17/8wsGicyoE3lbaVL.jpg" alt="8F747BC1029551BCEDB8AF8CA9C4FDDC" loading="lazy"></p><p>搞这个玩意一定要耐心,拧螺丝拧到心态爆炸也不能抱怨(毕竟是自己要折腾的).中间鼓捣的时候忘拍图了,就,最后上个成品的照片吧!</p><p><img src="https://i.loli.net/2021/05/17/eZrkh4FHCUSOwjd.jpg" alt="3A5567DCAB4FA725B9D45054632CCB1B" loading="lazy"></p><p><img src="https://i.loli.net/2021/05/17/5BTbSj3F4Y2xROQ.jpg" alt="1621245635811.jpg" loading="lazy"></p><h3 id="接线图">接线图</h3><p><img src="https://i.loli.net/2021/05/17/dBA5etmoVbSwlPL.png" alt="" loading="lazy"></p><p><img src="https://i.loli.net/2021/05/17/FxWpCHqcTOBYN6K.png" alt="" loading="lazy"></p><h3 id="可能遇到的错误-我还没遇到">可能遇到的错误(我还没遇到)</h3><p><img src="https://i.loli.net/2021/05/04/uHOrZKTNejoln39.jpg" alt="" loading="lazy"></p><p>先简单写到这吧,剩下的以后再补充.</p>]]></content>
    
    
    <summary type="html">&lt;center&gt;  之前一直想搞个3d打印机来着，终于抽出来时间搞它了! &lt;/center&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>你被骗了</title>
    <link href="https://www.darkfox.top/posts/be7a8f00/"/>
    <id>https://www.darkfox.top/posts/be7a8f00/</id>
    <published>2021-05-02T12:48:00.000Z</published>
    <updated>2021-06-11T03:30:41.705Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210611112408.png" alt="" loading="lazy"></p><span id="more"></span><iframe id="b" class="b video_pc" src="https://xbeibeix.com/api/bilibili/biliplayer/?url=https://www.bilibili.com/video/BV1GJ411x7h7/?spm_id_from=333.788.recommend_more_video.-1" frameborder="0"framespacing="0"allowfullscreen="true"style="position: middle;width="100%" height="600" controls="controls" autoplay="autoplay"quality="high"></video>></iframe>]]></content>
    
    
    <summary type="html">你被骗了（(*^_^*)）</summary>
    
    
    
    <category term="fun" scheme="https://www.darkfox.top/categories/fun/"/>
    
    
    <category term="fun" scheme="https://www.darkfox.top/tags/fun/"/>
    
  </entry>
  
  <entry>
    <title>妈的笑死</title>
    <link href="https://www.darkfox.top/posts/8aa8da4d/"/>
    <id>https://www.darkfox.top/posts/8aa8da4d/</id>
    <published>2021-04-30T03:36:18.000Z</published>
    <updated>2021-06-24T11:36:38.374Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/3ZnibkYwHs7hLBD.jpg" alt="V2`UI6U4C0Q~4H0L08%8GI4" loading="lazy"></p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/3ZnibkYwHs7hLBD.jpg&quot; alt=&quot;V2`UI6U4C0Q~4H0L08%8GI4&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>微机原理填空</title>
    <link href="https://www.darkfox.top/posts/2908f2ad/"/>
    <id>https://www.darkfox.top/posts/2908f2ad/</id>
    <published>2021-04-28T13:12:00.000Z</published>
    <updated>2021-04-28T13:13:59.087Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span><p>《微型计算机原理》试题库及答案</p><p>一、 填空<br>1.数制转换</p><p>​    A）125D=（ 11111101 ）B =（ 375 ）O=（ 0FD  ）H=（0001 0010 0101 ）BCD</p><p>B）10110110B=（ 182 ）D =（ 266 ）O=（ 0B6  ）H=（0001 1000 0010 ）BCD</p><p>2.下述机器数形式可表示的数值范围是(请用十进制形式写出):单字节无符号整数0~255；单字节有符号整数-128~+127。</p><p>注：微型计算机的有符号整数机器码采用补码表示，单字节有符号整数的范围为-128~+127。</p><p>3.完成下列各式补码式的运算，并根据计算结果设置标志位SF、ZF、CF、OF。指出运算结果有效否。</p><p>A）00101101+10011100=</p><p>B）11011101+10110011=</p><p>4.十六进制数2B．4Ｈ转换为二进制数是__00101011.0100，转换为十进制数是__43.25____。</p><p>5.在浮点加法运算中，在尾数求和之前，一般需要（对阶）操作，求和之后还需要进行（规格化）和舍入等步骤。</p><p>6.三态门有三种输出状态：高电平、低电平、（高阻）状态。</p><p>7.字符“A”的ASCII码为41H，因而字符“E”的ASCII码为（45H），前面加上偶校验位后代码为（C5）H。</p><p>8.数在计算机中的二进制表示形式称为（机器数）。</p><p>9.在计算机中，无符号书最常用于表示（地址）。</p><p>10.正数的反码与原码（相等）。</p><p>11.在计算机中浮点数的表示形式有（阶码）和（尾码）两部分组成。</p><p>12.微处理器中对每个字所包含的二进制位数叫（字长）。</p><p>13.MISP是微处理的主要指标之一，它表示微处理器在1秒钟内可执行多少（百万条指令）</p><p>14.PC机主存储器状基本存储单元的长度是（字节）.</p><p>15.一台计算机所用的二进制代码的位数称为___字长_________，8位二进制数称为__ <strong>字节</strong>____。</p><p>16.微型计算机由（微处理器）、（存储器）和（I/O接口电路）组成。</p><p>17.8086CPU寄存器中负责与I/O端口交换数据的寄存器为（AX,AL）</p><p>18.总线有数据总线、地址总线、控制总线组成，数据总线是从微处理器向内存储器、I/O接口传送数据的通路；反之，它也是从内存储器、I/O接口向微处理器传送数据的通路，因而它可以在两个方向上往返传送数据，称为（双向总线）。</p><p>19.一个微机系统所具有的物理地址空间是由(地址线的条数)决定的，8086系统的物理地址空间为（1M）字节。</p><p>20.运算器包括算术逻辑部件（ALU），用来对数据进行算术、逻辑运算，运算结果的一些特征由（标志寄存器）存储。</p><p>21.控制寄存器包括指令寄存器、指令译码器以及定时与控制电路。根据（指令译码）的结果，以一定的时序发出相应的控制信号，用来控制指令的执行。</p><p>22.根据功能不同，8086的标志为可分为（控制）标志和（状态）标志位。</p><p>23.8086/8088CPU内部有（14）个（16位）的寄存器。</p><p>24.在8086/8088的16位寄存器中，有（4）各寄存器可拆分为8位寄存器使用。他们是（AX,BX,CX,DX）,他们又被称为（通用寄存器）。</p><p>25.8086/8088构成的微机中，每个主存单元对应两种地址（物理地址）和（逻辑地址）。</p><p>26.物理地址是指实际的（20）为主存储单元地址，每个存储单元对应唯一的物理地址，其范围是（00000H-FFFFFH）。</p><p>27.8088的ALE引脚的作用是（锁存复用线上的地址）。</p><p>28.在8088读存储器周期中，采样Ready线的目的是（确定是否在T3周期后插入Tw周期）。</p><p>29.8088在访问4个当前段时，代码段、数据段及堆栈段的偏移量分别由（IP）、（由寻址方式决定的16位偏移量）和（SP）提供。</p><p>30.堆栈按照___先进后出___原则工作，使用____堆栈指针___指明栈顶位置。</p><p>31.在IBM－PC/XT中，外设是通过（8259）器件对CPU产生中断请求。这些中断的中断类型码为（08H—OFH）。</p><p>32.8086最多能处理（256）种中断。</p><p>33.8086/8088的中断响应了两个总线周期，从（INTA）引脚输出两个负脉冲，第一个总线周期完成，（通知I/O接口，CPU已响应外部中断请求，使被响应的I/O接口把自己的中断类型号送到数据总线的低8位D0-D7上），第二个总线周期完成（通过CPU的地址/数据引脚AD0-AD7将信号传输给CPU）</p><p>34.8088中的指令INT n用（n）指定中断类型。</p><p>35.一片8255A端口A有（3）种工作方式，端口B有（2）种工作方式。</p><p>36.宏汇编语言程序被汇编时，指令语句产生代码指令，伪指令语句不产生代码指令，宏指令 语句可能产生也可能不产生代码指令。</p><p>37.调用程序、子程序传送参数的方法通常有寄存器、内存和堆栈三种方法。</p><p>38.伪指令EQU、DB、DW、MACRO的标号名字域必须有名字或标号的伪指令为EQU、MACRO。</p><p>39.虽在本模块无定义，却可以被单独引用的名字或标号，必须用EXTRN伪指令给以说明。</p><p>40.PENTIUM的工作模式有实模式、保护模式、虚拟8086模式。</p><p>42.乘法指令MUL的指令格式只有一个源操作数，若源操作数的类型属性为字节，则目的操作数在AX中，若源操作数的类型属性为字，则目的操作数在DX:AX中。</p><p>注：将题中的目的操作数改为乘积更确切一些。</p><p>43.请给出标志寄存器中标志位OF、IF、SF、ZF、PF、CF的说明: OF 溢出、IF 中断、SF 符号、ZF 零、PF 奇偶、CF 进位。</p><p>44.堆栈是按照先进后出原则组织的一片连续的存储区域。</p><p>45.变址寻址的有效地址是变址寄存器的内容与地址位移量代数和。</p><p>46.指令XLAT通常用于查表操作，在使用该指令前，应把表首的偏移首地址送入BX，待转换的代码在表中的序号送AL。</p><p>47.若要求不产生汇编错误，则字符串’ABC’只能出现在伪指令DB中。</p><p>48.实模式下，对于指令 MOV AX，DS：[BX]</p><p>执行前DS=1000H，BX=11H，</p><p>则操作数DS：[BX]的有效地址为0011H。</p><p>注：有效地址指段内的偏移量。</p><p>49.为下述情况各举一例。</p><p>⑴寄存器与存储单元内容相加送寄存器ADD AL, [BX]。</p><p>⑵寄存器互送MOV AX, BX。</p><p>⑶将标志寄存器进栈PUSHF。</p><p>⑷立即数与寄存器内容相加送寄存器ADD AX, 1234H。</p><p>⑸将48H、5AH存入字节数据区ARRAYB ARRAYB DB 48H , 5AH。</p><p>一、单项选择题</p><p>\1. CPU包括（ C ）两部分。</p><p>A、ALU和累加器  B、ALU和控制器  C、运算器和控制器   D、ALU和主存储器</p><p>\2. 财务会计方面的计算机应用属于(B )。</p><p>A、科学计算  B、数据处理   C、辅助设计   D、实时控制</p><p>\3. 采用十六进制书写二进制数，位数可以减少到原来的( C  )。</p><p>A、1／2  B、1／3  C、1／4  D、1／5</p><p>\4. 用二一十进制数表示一位十进制数的二进制位是( D )。</p><p>A、1位  B、2位  C、3位  D、4位</p><p>\5. 如果指令中的地址码就是操作数的有效地址，那么这种寻址方式称为(B )。</p><p>A、立即寻址  B、直接寻址  C、间接寻址  D、寄存器寻址</p><p>\6. Cache的主要特点之—是( B)。</p><p>A、存储量大  B、存取速度快  C、价格便宜  D、价格便宜但容量小</p><p>\7. 在主机与外围设备进行数据交换时，为解决两者之间的同步与协调、数据格式转换等问</p><p>题，必须要引入( C )。</p><p>A、数据缓冲寄存器   B、I／O总线   C、I/O接口    D、串并移位器</p><p>\8. 在采用DMA方式的I/O系统中，其基本思想是在以下部件或设备之间建立直接的数据</p><p>通路，这指的是( B )。</p><p>A、CPU与外围设备  B、主存与外围设备  C、外设与外设   D、CPU与主存</p><p>\9. 集成电路计算机属于第（D）代计算机。</p><p>A ．“一”     B ．“二”    C ．“三”     D ．“四”</p><p>\10. 堆栈是一种（B）存贮器。</p><p>A ．顺序   B ．先进后出    C ．只读   D ．先进先出</p><p>\11. 在多级存储体系中，“ cache —主存”结构的作用是解决（D）的问题。</p><p>A ．主存容量不足  B ．主存与辅存速度不匹配 C ．辅存与 CPU 速度不匹配  D ．主存与 CPU 速度不匹配</p><p>\12. 如指令中的地址码就是操作数，那么这种寻址方式称为（A）。</p><p>A ．立即寻址  B ．直接寻址    C ．间接寻址  D ．寄存器寻址</p><p>\13. 数控机床方面的计算机应用属于（B）。</p><p>A ．科学计算   B ．辅助设计   C ．数据处理   D ．实时控制</p><p>\14. 某数在计算机中用 8421BCD 码表示为 0011 1001 1000 ，其真值为（A）。</p><p>A ． 398    B ． 398H    C ． 1630Q    D ． 1110011000B</p><p>\15. 字符的编码，目前在微机中最普遍采用的是(  C )。</p><p>A.BCD码   B.16进制   C.ASCⅡ码   D.格雷码</p><p>\16. 在存储体系中，辅存的作用是（D）</p><p>A.弥补主存的存取速度不足  B.缩短主存的读写周期</p><p>C.减少CPU访问内存的次数  D.弥补主存容量不足的缺陷</p><p>\17. 以下叙述正确的是（C）</p><p>A.ASCII编码可以表示汉字的编码    B.汉字输入编码都是根据字音进行的编码</p><p>C.汉字输入码可以根据汉字字形编码    D.汉字字形码都是将汉字分解成若干“点”组成的点阵</p><p>\18. [x]补=11011100B，则x的真值为（A）</p><p>A.-36D    B.92D    C.-28D    D.5CH</p><p>\19. 计算机软件是指（D）</p><p>A.操作系统    B.汇编程序   C.用户程序    D.所有程序及文档的统称</p><p>\20. 目前微型机系统上广泛使用的机械式鼠标是一种（ A ）</p><p>A.输入设备  B.输出设备   C.输入输出设备   D.显示设备组成之一</p><p>\21. 二进制数1001101B的十进制数表示为（ C ）</p><p>A.4DH      B.95D      C.77D      D.9AD</p><p>\22. 十进制小数转换成十六进制数可采用（ B ）</p><p>A.除基（10）取余法                  B.除基（16）取余法</p><p>C.乘基（10）取整法                  D.乘基（16）取整法</p><p>\23. 家用电脑是指（ D ）</p><p>A.家用电器    B.家庭电影院    C.家庭音响设备     D.家用计算机</p><p>\24. 在8421码表示的二—十进制数中，代码1001表示( C )</p><p>A.3       B.6      C.9       D.1</p><p>\25. 目前普遍使用的微型计算机采用的电路是( D )</p><p>A.电子管      B.晶体管     C.集成电路    D.超大规模集电成路</p><p>\26. 8位定点原码整数10100011B的真值为( B )</p><p>A.+0100011   B. -0100011   C.+1011101   D. -1011101</p><p>\27. 现代计算机通常是将处理程序存放在连续的内存单元中，CPU在执行这个处理程序时，使用一个寄存器来指示程序的执行顺序，这个寄存器为（ D ）。</p><p>A．指令寄存器         B．指令译码器</p><p>C．指令缓冲寄存器       D．指令指针寄存器</p><p>\28. 某计算机字长为16位，其内存容量为1024K字节，按字编址，它的寻址空间为（ D ）。</p><p>A. 512KB      B. 512K     C. 1024KB     D. 1024K</p><p>29.若指令的运算结果不为0且低8位中“1”的个数为偶数，则标志寄存器中ZF和PF的状态为（ B）。</p><p>A. 0，0      B．0，1     C．1，0       D．1，1</p><p>30.指令“MOV AX，[BX+20H]”源操作数的寻址方式为（ C ）。</p><p>A．寄存器寻址 B．寄存器间接寻址  C．寄存器相对寻址 D．以上均不对</p><p>\31. 根据下面定义的数据段：</p><p>DSEG SEGMENT</p><p>​    DAT1 DB <code>1234</code></p><p>​    DAT2 DW 5678H</p><p>​    DAT3 DD  12345678H</p><p>​    ADDR EQU  DAT3-DAT1</p><p>DSEG ENDS</p><p>执行指令MOV AX, ADDR后，AX寄存器中的内容是（ C ）。</p><p>A. 5678H   B. 0008H   C. 0006H    D. 0004H</p><p>32.在8086系统的中断向量表中，若从0000H：005CH单元开始由低地址到高地址依次存放10H、20H、30H和40H四个字节，则相应的中断类型码和中断服务程序的入口地址分别为（A）。</p><p>A．17H，4030H：2010H      B．17H，2010H：4030H</p><p>C．16H，4030H：2010H      D．16H，2010H：4030H</p><p>33.在DMA控制器8237控制下进行“写传送”时，8237需先后向I/O接口和存储器发出的控制信号是（ B  ）。</p><p>A． <img src="C:/Users/49475/AppData/Local/Temp/msohtmlclip1/01/clip_image002.png" alt="img" loading="lazy">,<img src="C:/Users/49475/AppData/Local/Temp/msohtmlclip1/01/clip_image004.png" alt="img" loading="lazy">     B． <img src="C:/Users/49475/AppData/Local/Temp/msohtmlclip1/01/clip_image006.png" alt="img" loading="lazy">,<img src="C:/Users/49475/AppData/Local/Temp/msohtmlclip1/01/clip_image004.png" alt="img" loading="lazy"></p><p>C． <img src="C:/Users/49475/AppData/Local/Temp/msohtmlclip1/01/clip_image002.png" alt="img" loading="lazy">,<img src="C:/Users/49475/AppData/Local/Temp/msohtmlclip1/01/clip_image009.png" alt="img" loading="lazy">      D． <img src="C:/Users/49475/AppData/Local/Temp/msohtmlclip1/01/clip_image006.png" alt="img" loading="lazy">,<img src="C:/Users/49475/AppData/Local/Temp/msohtmlclip1/01/clip_image009.png" alt="img" loading="lazy"></p><p>34.下面是关于可编程中断控制器8259A的叙述，其中错误的是（ B ）。</p><p>A. 8259A具有优先级管理的功能</p><p>B. 8259A具有辨认中断源的功能</p><p>C. 8259A具有向CPU提供中断向量的功能</p><p>D. 一片8259A可管理8级中断</p><p>\35. CPU和主存之间增设高速缓存（Cache）的主要目的是（ B  ）。</p><p>A. 扩大主存容量       B. 解决CPU和主存之间的速度匹配问题</p><p>C. 提高存储器的可靠性   D. 以上均不对</p><p>\36. 中断向量可提供（ D  ）</p><p>A. 被选中设备的地址     B. 传送数据的起始地址</p><p>C. 主程序的断点地址     D. 中断服务程序的入口地址</p><p>\37. 3片8259A级联，最多可管理（ C   ）级中断。</p><p>A. 24     B. 23    C. 22     D. 21</p><p>\38. 按照USB 1.0 规范，一台主机最多可连接（ D ）个外设装置（含USB集线器—USB Hub）。</p><p>A. 120     B.122    C. 123    D. 127</p><p>三.判断题(你认为正确的，请在题末的括号内打“√”，错的打“×”。</p><p>1、8086的Ready信号是由外部硬件产生的。……………………………（√）<br>2、8088的M/<img src="C:/Users/49475/AppData/Local/Temp/msohtmlclip1/01/clip_image012.png" alt="img" loading="lazy">引脚的低电平表明选通的是I/O接口。……………… （√）<br>3、8086 的数据可以存放在几个不连续的段中。……………………… （√）<br>4、8086 中，取指令和执行指令可以重叠操作。………………………… （√）<br>5、8255 只有三个普通I/O端口，所以它不可作为一个外部中断源去向8086申请中断（×）<br>6、多个外设可以通过一条中断请求线，向CPU发中断请求。……………… （√）<br>7、8253 的每个计数器只能按二进制计数。………………………………（×）<br>8、8253的计数器是对机器的CLK脉冲计数。……………………………（×）<br>9、8086的可屏蔽外部中断源的中断类型号是用软件设置的。…………（×）<br>10、8086的中断入口地址只能放到内存的最低端，即0——3FFH区域。………（√）<br>11、<img src="C:/Users/49475/AppData/Local/Temp/msohtmlclip1/01/clip_image013.png" alt="img" loading="lazy">／<img src="C:/Users/49475/AppData/Local/Temp/msohtmlclip1/01/clip_image014.png" alt="img" loading="lazy">及HOLD、HLDA信号是与系统中其它总线主设备有关的信号。  （√）</p><p>12.8088的<img src="C:/Users/49475/AppData/Local/Temp/msohtmlclip1/01/clip_image015.png" alt="img" loading="lazy">信号可用作中断矢量的读选通信号。………（√）<br>13、8088 的可屏蔽中断的优先权高于非屏蔽中断。…………（×）<br>14、8255A中端口A使用的是INTR，<img src="C:/Users/49475/AppData/Local/Temp/msohtmlclip1/01/clip_image016.png" alt="img" loading="lazy">及<img src="C:/Users/49475/AppData/Local/Temp/msohtmlclip1/01/clip_image017.png" alt="img" loading="lazy">等线是端口C的线。………（√）<br>15、串行异步接口的双向工作方式指的是在串行接口上可同时发送和接收串行数据。…（√）<br>16、EPROM 虽然是只读存储器，但在编程时可向内部写入数据。（√）<br>17、中断服务程序可放在用户可用的内存的任何区域。……（√）<br>18、字长越长，计算机处理数据的速度越快；        （  √ ）</p><p>19.汇编语言是面向机器的语言。                   （ √ ）</p><p>20.任何一个十进制小数都可以用二进制精确表示。 （  ×   ）</p><p>21.计算机的内存与外存都可以直接与CPU交换数据。（  ×  ）</p><p>22.复位影响片内RAM存放的内容。                  （ ×  ）</p><p>23.定时器/计数器溢出中断可以由硬件产生，也可以由软件产生。（  √   ）</p><p>四、简答题<br>1．8086的总线接口部件有哪些功能?由哪几部分组成?请逐一说明。8086的执行部件有什么功能?由哪几部分组成?</p><p>答：8086的总线接口部件的功能是负责完成CPU与存储器或I/O设备之间的数据传送。</p><p>8086的总线接口部件由：4个16位段地址寄存器（DS、DS、SS、ES），16位指令指针IP，6字节指令队列缓冲器，20位地址加法器和总线控制器几部分组成。</p><p>8086的执行部件的功能就是负责执行指令，它由16位的算术逻辑单元（ALU）、16位的标志寄存器F、数据暂存寄存器、通用寄存器组、EU控制电路组成。</p><p>2．8086 的中断系统分为哪几种类型的中断？其优先顺序如何？<br>答：8086 的中断系统分为外部中断（可屏蔽中断和不可屏蔽中断）和内部中断。</p><p>其优先顺序是：除单步中断以外，所有的内部中断优先权都比外部中断优先权高，在外部中断中，不可屏蔽中断比可屏蔽中断优先权高。</p><p>3 ．什么叫中断向量?它放在哪里？对应于lCH的中断向量存放在哪里?如果1CH的中断处理子程序从5110H：2030H开始，则中断向量应怎样存放?</p><p>答：中断向量是用来提供中断入口地址的一个地址指针；对应于lCH的中断向量存放在1CH×4=70H开始的4个单元</p><p>如果1CH的中断处理子程序从5110H：2030H开始，则中断向量应如下存放：</p><p>​         0070H：30H</p><p>​         0071H：20H</p><p>​         0072H：10H</p><p>​         0073H：51H</p><p>4.计算机分那几类？各有什么特点？</p><p>答：传统上分为三类：大型主机、小型机、微型机。大型主机一般为高性能的并行处理系统， 存储容量大，事物处理能力强，可为众多用户提供服务。小型机具有一定的数据处理能力，提供一定用户规模的信息服务，作为部门的信息服务中心。微型机一般指在办公室或家庭的桌面或可移动的计算系统，体积小、价格低、具有工业化标准体系结构，兼容性好。</p><p>5.简述微处理器、微计算机及微计算机系统三个术语的内涵。</p><p>答：微处理器是微计算机系统的核心硬件部件，对系统的性能起决定性的影响。微计算机包括微处理器、存储器、I/O接口电路及系统总线。微计算机系统是在微计算机的基础上配上相应的外部设备和各种软件，形成一个完整的、独立的信息处理系统。</p><p>6.80X86微处理器有几代？各代的名称是什么？</p><p>答：从体系结构上可分为3代： ¬ 8080/8085：8位机。 ­ 8086/8088/80286：16位机。</p><p>® 80386/80486：32位机。</p><p>7.8086是多少位的微处理器？为什么？</p><p>答：8086是16位的微处理器，其内部数据通路为16位，对外的数据总线也是16位。</p><p>8.EU与BIU各自的功能是什么？如何协同工作？</p><p>答：EU是执行部件，主要的功能是执行指令。BIU是总线接口部件，与片外存储器及I/O接口电路传输数据。EU经过BIU进行片外操作数的访问，BIU为EU提供将要执行的指令。EU与BIU可分别独立工作，当EU不需BIU提供服务时，BIU可进行填充指令队列的操作。</p><p>9.8086/8088与其前一代微处理器8085相比，内部操作有什么改进？</p><p>答：8085为8位机，在执行指令过程中,取指令与执行执令都是串行的。8086/8088由于内部有EU和BIU两个功能部件，可重叠操作，提高了处理器的性能。</p><p>10.8086/8088微处理器内部有那些寄存器，它们的主要作用是什么？</p><p>答：执行部件有8个16位寄存器，AX、BX、CX、DX、SP、BP、DI、SI。AX、BX、CX、DX一般作为通用数据寄存器。SP为堆栈指针存器，BP、DI、SI在间接寻址时作为地址寄存器或变址寄存器。总线接口部件设有段寄存器CS、DS、SS、ES和指令指针寄存器IP。段寄存器存放段地址，与偏移地址共同形成存储器的物理地址。IP的内容为下一条将要执行指令的偏移地址，与CS共同形成下一条指令的物理地址。</p><p>11.8086对存储器的管理为什么采用分段的办法？</p><p>答：8086是一个16位的结构，采用分段管理办法可形成超过16位的存储器物理地址，扩大对存储器的寻址范围 (1MB，20位地址)。若不用分段方法，16位地址只能寻址64KB空间。</p><p>12．在8086中，逻辑地址、偏移地址、物理地址分别指的是什么？具体说明。</p><p>答：逻辑地址是在程序中对存储器地址的一种表示方法，由段地址和段内偏移地址两部分组成，如1234H：0088H。偏移地址是指段内某个存储单元相对该段首地址的差值，是一个16位的二进制代码。物理地址是8086芯片引线送出的20位地址码，用来指出一个特定的存储单元。</p><p>13．给定一个存放数据的内存单元的偏移地址是20C0H，（DS）=0C00EH，求出该内存单元的物理地址。</p><p>答：物理地址：320F8H。</p><p>14．8086/8088为什么采用地址/数据引线复用技术？</p><p>答：考虑到芯片成本，8086/8088采用40条引线的封装结构。40条引线引出8086/8088的所有信号是不够用的，采用地址/数据线复用引线方法可以解决这一矛盾，从逻辑角度，地址与数据信号不会同时出现，二者可以分时复用同一组引线。</p><p>15.8086与8088的主要区别是什么？</p><p>答：8086有16条数据信号引线，8088只有8条；8086片内指令预取缓冲器深度为6字节，8088只有4字节。</p><p>16.怎样确定8086的最大或最小工作模式？最大、最小模式产生控制信号的方法有何不同</p><p>答：引线MN/MX#的逻辑状态决定8086的工作模式，MN/MX#引线接高电平，8086被设定为最小模式，MN/MX#引线接低电平，8086被设定为最大模式。</p><p>最小模式下的控制信号由相关引线直接提供；最大模式下控制信号由8288专用芯片译码后提供，8288的输入为8086的S2#~S0#三条状态信号引线提供。</p><p>17.8086被复位以后，有关寄存器的状态是什么？微处理器从何处开始执行程序？</p><p>答：标志寄存器、IP、DS、SS、ES和指令队列置0，CS置全1。处理器从FFFFOH存储单元取指令并开始执行。</p><p>18.8086基本总线周期是如何组成的？各状态中完成什么基本操作？</p><p>答：基本总线周期由4个时钟(CLK)周期组成，按时间顺序定义为T1、T2、T3、T4。在T1期间8086发出访问目的地的地址信号和地址锁存选通信号ALE；T2期间发出读写命令信号RD#、WR#及其它相关信号；T3期间完成数据的访问；T4结束该总线周期。</p><p>19.结合8086最小模式下总线操作时序图，说明ALE、M/IO#、DT/R#、RD#、READY信号的功能。</p><p>答：ALE为外部地址锁存器的选通脉冲，在T1期间输出；M/IO#确定总线操作的对象是存储器还是I/O接口电路，在T1输出；DT/R#为数据总线缓冲器的方向控制信号，在T1输出；RD#为读命令信号；在T2输出；READY信号为存储器或I/O接口“准备好”信号，在T3期间给出，否则8086要在T3与T4间插入Tw等待状态。</p><p>20.8086中断分哪两类？8086可处理多少种中断？</p><p>答：8086中断可分为硬件中断和软件中断两类。8086可处理256种类型的中断。</p><p>21.8086可屏蔽中断请求输入线是什么？“可屏蔽”的涵义是什么？</p><p>答：可屏蔽中断请求输入线为INTR；“可屏蔽”是指该中断请求可经软件清除标志寄存器中IF位而被禁止。</p><p>22.8086的中断向量表如何组成？作用是什么？</p><p>答：把内存0段中0~3FFH区域作为中断向量表的专用存储区。该区域存放256种中断的处理程序的入口地址，每个入口地址占用4个存储单元，分别存放入口的段地址与偏移地址。</p><p>23．8086如何响应一个可屏蔽中断请求？简述响应过程。</p><p>答：当8086收到INTR的高电平信号时，在当前指令执行完且IF=1的条件下，8086在两个总线周期中分别发出INTA#有效信号；在第二个INTA#期间，8086收到中断源发来的一字节中断类型码；8086完成保护现场的操作，CS、IP内容进入堆栈，请除IF、TF；8086将类型码乘4后得到中断向量表的入口地址，从此地址开始读取4字节的中断处理程序的入口地址，8086从此地址开始执行程序，完成了INTR中断请求的响应过程。</p><p>24.什么是总线请求？8086在最小工作模式下，有关总线请求的信号引脚是什么？</p><p>答：系统中若存在多个可控制总线的主模块时，其中之一若要使用总线进行数据传输时，需向系统请求总线的控制权，这就是一个总线请求的过程。8086在最小工作模式下有关总线请求的信号引脚是HOLD与HLDA。</p><p>25.简述在最小工作模式下，8086如何响应一个总线请求？</p><p>答：外部总线主控模块经HOLD引线向8086发出总线请求信号；8086在每个时钟周期的上升沿采样HOLD引线；若发现HOLD=1则在当前总线周期结束时(T4结束)发出总线请求的响应信号HLDA；8086使地址、数据及控制总线进入高阻状态，让出总线控制权，完成响应过程。</p><p>26．在基于8086的微计算机系统中，存储器是如何组织的？是如何与处理器总线连接的？</p><p>BHE信号起什么作用？</p><p>答：8086为16位处理器，可访问1M字节的存储器空间；1M字节的存储器分为两个512K字节的存储体，命名为偶字节体和奇字节体；偶体的数据线连接D7~D0，“片选”信号接地址线A0；奇体的数据线连接D15~D8，“片选”信号接BHE信号；BHE信号有效时允许访问奇体中的高字节存储单元，实现8086的低字节访问、高字节访问及字访问。</p><p>27．“80386是一个32位微处理器”，这句话的涵义主要指的是什么？</p><p>答：指80386的数据总线为32位，片内寄存器和主要功能部件均为32位，片内数据通路为32位。</p><p>28．80X86系列微处理器采取与先前的微处理器兼容的技术路线，有什么好处？有什么不足？</p><p>答：好处是先前开发的软件可以在新处理器组成的系统中运行，保护了软件投资。缺点是处理器的结构发展受到兼容的约束，为了保持兼容性增加了硅资源的开销，增加了结构的复杂性。</p><p>29．80386内部结构由哪几部分组成？简述各部分的作用。</p><p>答：80386内部结构由执行部件(EU)、存储器管理部件(MMU)和总线接口部件(BIU)三部分组成。EU包括指令预取部件、指令译码部件、控制部件、运算部件及保护检测部件，主要功能是执行指令。存储器管理部件包括分段部件、分页部件，实现对存储器的分段分页式的管理，将逻辑地址转换成物理地址。总线接口部件作用是进行片外访问：对存储器及I/O接口的访问、预取指令；另外的作用是进行总线及中断请求的控制</p><p>30．80386有几种存储器管理模式？都是什么？</p><p>答：80386有三种存储器管理模式，分别是实地址方式、保护方式和虚拟8086方式</p><p>31．在不同的存储器管理模式下，80386的段寄存器的作用是什么？</p><p>答：在实地址方式下，段寄存器与8086相同，存放段基地址。在保护方式下，每个段寄存器还有一个对应的64位段描述符寄存器，段寄存器作为选择器存放选择符。在虚拟8086方式下，段寄存器的作用与8086相同。</p><p>32.80386对中断如何分类？</p><p>答：80386把中断分为外部中断和内部中断两大类，外部中断经NMI和INTR引线输入请求信号。内部中断也叫内部异常中断，分为陷阱中断、内部故障异常中断、异常终止中断。</p><p>33.80386在保护方式下中断描述符表与8086的中断向量表有什么不同？</p><p>答：8086工作在实地址方式，向量表是在存储器的0段中最低1024字节内存中。80386在保护方式下要通过中断描述符表中的描述符访问虚拟空间的中断向量，中断描述符表的位置不是固定的，要由IDTR寄存器实现在虚拟空间的定位。</p><p>简述80386在保护方式下的中断处理过程。</p><p>答：80386响应中断后，接收由中断源提供的类型码并将其乘8，与IDTR寄存器中基地址相加，指出中断描述符的位置，读出中断描述符，依其中的段选择符及条件决定从两个描述符表LDT或GDT中的一个得到段描述符，形成中断服务程序入口所在存储器单元的线性地址。</p><p>34.8086CPU的字节寻址范围有多大？为什么？存储器为什么分段？20位物理地址的形成过程是怎样的？</p><p>答：8086CPU寻址范围1MB。因为8086CPU地址线为20条，2^20=1024KB，即1MB。8086系统中，指令仅给出16位地址，与寻址地址有关的寄存器也只有16位长，因此寻址范围只有64KB，为了寻址1MB，所以分成四个逻辑段。当CPU访问内存时，寄存器的内容（段基址）自动左移4位（二进制），与段内16位地址偏移量相加，形成20位的物理地址。</p><p>35.使用中断有什么好处？</p><p>答：  (1)解决快速CPU与慢速外设之间的矛盾，使CPU可以与外设同时工作，甚至可以与几个外设同时工作。</p><p>(2)计算机实现对控制对象的实时处理。</p><p>(3)计算机可以对故障自行处理。</p><p>36.什么是伪指令？</p><p>答：伪指令语句在形式上与指令语句很相似，但它不产生任何目标代码，只对汇编程序在汇编过程中提供必要的控制信息。</p><p>37.简述行列式键盘矩阵的读入方法。</p><p>答:将行线接输出口，列线接输入口，采用行扫描法，先将某一行输出为低电平，其它行输出为高电平，用输入口来查询列线上的电平，逐次读入列值，如果行线上的值为0时，列线上的值也为0，则表明有键按下。否则，接着读入下一列，直到找到该行有按下的键为止。如该行没有找到有键按下，就按此方法逐行找下去，直到扫描完全部的行和列。</p><p>38.简述用反转法实现键的识别的基本方法。</p><p>答: 将题目中的键改为闭合键。</p><p>用反转法识别闭合键，需要用可编程的并行接口。行线和列线分别接在PA和PB 2个并行口上，首先让行线上的PA口工作在输出方式，列线上的PB口工作在输入方式，通过编程使PA口都输出低电平，然后读取PB口的列线值，如果某一列线上的值为0，则判定该列有某一键按下。为了确定是哪一行要对PA和PB进行反转，即对PA口重新进行初始化工作在输入方式，列线上的PB口工作在输出方式，并将刚读取的列线值从列线所接的PB口输出，再读取行线所接的PA口，取得行线上的输入值，在闭合键所在的行线上的值必定为0。这样，当一个键被按下时，必定可读得一对唯一的行值和列值。根据这一对行值和列值就可判断是哪一行哪一列的键被按下。</p><p>39.LED数码管显示器共阴极和共阳极的接法主要区别是什么？</p><p>答:LED数码管显示器共阴极的接法是发光二极管的阴极接地，当数码管的笔划发光二极管的阳极为高电平时，该笔划被点亮。共阳极的接法是发光二极管的阳极接高电平，当数码管的笔划发光二极管的阴极为低电平时，该笔划被点亮。总之，主要区别在于LED数码管的接法和驱动笔划的数据电平的不同。</p><p>40.试绘图说明LED数码管显示器的动态显示原理。</p><p>答: 使用书上的图7.8</p><p>在图中LED数码管是共阴极的，总共可带动8位这样的LED数码管。动态驱动显示接口与静态驱动显示接口的一个明显特点是：动态驱动法将多位LED同名段的选择线都并联在一起，即8位中的所有同名段a接在一起，所有b段都接在一起……，这样只要一个8位的锁存器来控制段码a,b,c,d,e,f,g就够了。另外用一个锁存器来控制点亮的位。因此需要2个8位的I/O端口。</p><p>由于所有位的位选择码是用一个I/O端口控制，所有段的段选择码也是用一个I/O端口控制，因此在每个瞬间，8位LED只可能显示相同的字符。要想每位显示不同的字符，必须要采用扫描的显示方式。即在每一瞬间只能使某一位显示相应的字符，在此瞬间，由位选择控制的I/O端口在要显示的位上送入选通电平（共阴极接法送入低电平，共阳极接法送入高电平），以保证让该位显示字符；再由段选择控制的I/O端口输出相应字符的段选择码。如此循环下去，使每一位都显示该位应显示的字符，并保持延时一段时间，然后再选中下一位，利用发光显示器的余辉及人眼的视觉暂留特点，给人一种显示器同时被点亮的效果。段选择码，位选择码在每送入一次后一般需要延时1~5ms时间。</p><p>五、按要求编写指令或程序段(本大题共3小题，每小题4分，共12分)<br>1.用两种方法将存储器1000H的内容（1EH）扩大到原来的8倍。</p><p>答：第一种方法：MOV BX，1000H</p><p>​        MOV AL，[BX]</p><p>​        MOV CL，08H</p><p>MUL CL</p><p>MOV [BX]，AL</p><p>第二种方法：MOV BX，1000H</p><p>​        MOV AL，[BX]</p><p>​         MOV CL，03H</p><p>ROL AL，CL</p><p>MOV [BX]，AL</p><p>2.写出用一条指令就可使AL寄存器清零的指令；还写出用一条指令就可使AL寄存器为全1的指令（尽可能多地正确地写）。</p><p>答：用一条指令就可使AL寄存器清零的指令；用一条指令就可使AL寄存器为全1的指令</p><p>（1）MOV AX，0000H          （1） MOV AL，0FFH</p><p>（2）AND AX，0000H          （2） OR AL，0FFH</p><p>（3）XOR AX，AX</p><p>3.将存储器1000H到10FFH的连续单元中都放着一字节无符号数，将其中的最大无符号数放到偏移地址为1000H的单元中。</p><p>答： MOV BX，1000H</p><p>MOV CL，0FFH</p><p>MOV AL，[BX]</p><p>ABC：INC BX</p><p>CMP AL，[BX]</p><p>JNC BCD</p><p>MOV AL，[BX]</p><p>BCD：DEC CL</p><p>JNZ ABC</p><p>MOV BX，1000H</p><p>MOV [BX]，AL</p><p>JMP $</p><p>4.设计一个分支程序</p><p><img src="C:/Users/49475/AppData/Local/Temp/msohtmlclip1/01/clip_image018.png" alt="img" loading="lazy">1   X&gt;0</p><p>Y =   0  X=0</p><p>-1   X&lt;0</p><p>程序为：</p><p>MOV AL ，X</p><p>CMP AL，0</p><p>JGE  BIG</p><p>MOV Y，-1</p><p>JMP EXIT</p><p>BIG：JE EQUL</p><p>MOV Y，1</p><p>JMP EXIT</p><p>EQUL：MOV Y，0</p><p>JMP $</p><p>5.编写程序段, 比较两个5字节的字符串OLDS和NEWS, 如果OLDS字符串与NEWS不同, 则执行NEW_LESS, 否则顺序执行程序。</p><p>LEA SI, OLDS</p><p>LEA DI, NEWS</p><p>MOV CX, 5</p><p>CLD</p><p>REPZ  CMPSB</p><p>JNZ NEW_LESS</p><p>6.变量N1和N2均为2字节的非压缩BCD数码，请写出计算N1与N2之差的指令序列。</p><p>MOV AX, 0</p><p>MOV AL, N1+1</p><p>SUB AL, N2+1</p><p>AAS</p><p>MOV DL, AL</p><p>MOV AL, N1</p><p>SBB AL, N2</p><p>AAS</p><p>MOV DH, AL</p><p>7.试编写一个汇编语言程序，要求对键盘输入的小写字母用大写字母显示出来。</p><p>abc:  mov   ah,1</p><p>​    int   21h</p><p>​    sub   al,20h</p><p>​    mov   dl,al</p><p>​    mov   ah,2</p><p>​    int   21h</p><p>​    jmp   abc</p><p>sto: ret</p><p>8.把AX寄存器清零。</p><p>①MOV AX,0</p><p>②XOR AX,AX</p><p>③AND AX,0</p><p>④SUB AX,AX</p><p>9.把AL中的数<em>x</em>乘10</p><p>因为10=8+2=23+21，所以可用移位实现乘10操作。程序如下：</p><p>MOV CL,3</p><p>SAL  AL,1   ; 2<em>x</em></p><p>MOV AH,AL</p><p>SAL  AL,1   ; 4<em>x</em></p><p>SAL  AL,1   ; 8<em>x</em></p><p>ADD AL,AH  ; 8<em>x</em>+2<em>x</em> = 10<em>x</em></p><p>10.按下述要求写出指令序列:</p><p>(1) DATAX和DATAY中的两个字数据相加, 和存放在DATAY和DATAY+2中。</p><p>(2) DATAX和DATAY中的两个双字数据相加, 和存放在DATAY开始的字单元中。</p><p>(3) DATAX和DATAY两个字数据相乘（用MUL）。</p><p>(4) DATAX和DATAY两个双字数据相乘（用MUL）。</p><p>(5) DATAX除以23（用DIV）。</p><p>(6) DATAX双字除以字DATAY（用DIV）。</p><p>DATAX和DATAY中的两个字数据相加, 和存放在DATAY和DATAY+2中。</p><p>(1) MOV AX, DATAX</p><p>ADD AX, DATAY</p><p>MOV BX, DATAX+2</p><p>ADD BX, DATAY+2</p><p>MOV DATAY, AX</p><p>MOV DATAY+2, BX</p><p>DATAX和DATAY中的两个双字数据相加, 和存放在DATAY开始的字单元中。</p><p>(2) MOV AX, DATAX</p><p>ADD DATAY, AX</p><p>MOV AX, DATAX+2</p><p>ADC DATAY+2, AX</p><p>DATAX和DATAY两个字数据相乘（用MUL）。</p><p>(3) MOV AX, DATAX</p><p>MUL DATAY</p><p>MOV DATAY,AX</p><p>MOV DATAY+2,DX</p><p>DATAX和DATAY两个双字数据相乘（用MUL）。</p><p>(4)</p><p>MOV AX,WORD PTR DATAX</p><p>MOV BX,WORD PTR DATAY</p><p>MUL BX</p><p>MOV RESULT,AX</p><p>MOV RESULT+2,DX</p><p>MOV AX,WORD PTR DATAX</p><p>MOV AX,WORD PTR DATAY+2</p><p>MUL BX</p><p>ADD RESULT+2,AX</p><p>ADC RESULT+4,DX</p><p>MOV AX,WORD PTR DATAX+2</p><p>MOV BX,WORD PTR DATAY</p><p>MUL BX</p><p>ADD RESULT+2,AX</p><p>ADC RESULT+4,DX</p><p>MOV AX,WORD PTR DATAX+2</p><p>MOV BX,WORD PTR DATAY+2</p><p>MUL BX</p><p>ADD RESULT+4,AX</p><p>ADC RESULT+6,DX</p><p>DATAX除以23（用DIV）。</p><p>(5)  MOV AX, DATAX</p><p>MOV BL, 23</p><p>DIV    BL</p><p>MOV  BL,AH</p><p>MOV  AH, 0</p><p>MOV  DATAY, AX    ;存放商</p><p>MOV  AL,BL</p><p>MOV  DATAY+2, AX ;存放余数</p><p>DATAX双字除以字DATAY（用DIV）。</p><p>(6) MOV AX, DATAX</p><p>MOV DX, DATAX+2</p><p>DIV   DATAY</p><p>MOV DATAY, AX</p><p>MOV DATAY+2, DX</p><p>五、软件设计</p><p>1、以BUF1和BUF2开头的2个字符串开头的2个字符串，其长度相等，试编程实现将两个字符串的内容对调。</p><p>DDD0  SEGMENT                                BUF1  DB “QWERTYUIOPASDFGHJKLR”</p><p>BUF2  DB “A1234567890ZXCVBNMPJ”<br>LEN   EQU LENGTH BLOCK1<br>DDD0  ENDS<br>ESEG  SEGMENT<br>BUF3  DB 20 DUP(?)<br>ESEG  ENDS<br>CSEG  SEGMENT<br>ASSUME CS:CSEG,DS:DDD0,ES:ESEG<br>START: CLD<br>MOV AX，DDD0<br>MOV DS，AX<br>MOV AX，ESEG<br>MOV ES，AX<br>MOV CX,LEN<br>LEA SI， BUF1</p><p>LEA DI， BUF3<br>REP MOVSB<br>MOV CX,LEN                                       LEA SI， BUF2                                           LEA DI， BUF1                                          REP MOVSB                                           MOV CX,LEN                                       LEA SI， BUF3                                   LEA DI， BUF2                                         REP MOVSB                                             CSEG   ENDS                                         END START</p><p>2、 在ABC和BCD两地址起，各有5个字节的无符号数，试编程实现这两个无符号数的加法并将结果分别存放到CBA开始的存储单元中去。</p><p>DDD0  SEGMENT                                 ABC   DB 9FH，26H，12H，5AH，23H                                    BCD   DH 74H，D3H，54H，43H，7DH                                     CBA   DB 6 DUP(?)                                                                   DDD0  ENDS                                CSEG  SEGMENT                                     ASSUME CS:CSEG,DS:DDD0                                START: MOV AX，DDD0                                     MOV DS，AX                                       MOV CX，5                                           CLC                                                 LEA SI,ABC；可做间址寄存器的有SI，DI，BX，BP及它们的组合                            LEA DI，BCD                                         LEA BX，CBA                                        XYZ： MOV AL，[SI]                                      ADC AL，[DI]                                        MOV [BX]，AL                                        INC SI                                         INC DI                                            INC BX                                        LOOP XYZ                                         MOV AL，0                                       ADC AL，0                                       MOV[BX]，AL                                         LEA BX，CBA                                       MOV [BX]，AX                                                                                                                    CSEG ENDS                                          END START</p><p>\3. 把0-100之间的30个数，存入首地址为GRAD的字数组中，GRAD+i表示学号为i+1的学生成绩。另一个数组RANK是30个学生的名次表，其中RANK+I的内容是学号为i+1的学生的名次。试编写程序，根据GRAD中的学生成绩，将排列的名次填入RANK数组中（提示：一个学生的名次等于成绩高于这个学生的人数加1）。</p><p>dseg  segment</p><p>grade dw 30 dup(?)</p><p>rank    dw 30 dup(?)</p><p>dseg  ends</p><p>cseg    segment</p><p>main  proc    far</p><p>assume cs:cseg, ds:dseg, es:dseg</p><p>start: push  ds</p><p>​    sub   ax,ax</p><p>​    push  ax</p><p>​    mov   ax,dseg</p><p>​    mov   ds,ax</p><p>​    mov   es,ax</p><p>begin: mov   di,0</p><p>​    mov   cx,30</p><p>loop1: push  cx</p><p>​    mov   cx,30</p><p>​    mov   si,0</p><p>​    mov   ax,grade[di]</p><p>​    mov   dx,0</p><p>loop2: cmp   grade[si],ax</p><p>​    jbe   go_on</p><p>​    inc   dx</p><p>go_on: add   si,2</p><p>​    loop    loop2</p><p>​    pop   cx</p><p>​    inc   dx</p><p>​    mov   rank[di],dx</p><p>​    sdd   di,2</p><p>​    loop    loop1</p><p>​    ret</p><p>main  endp</p><p>cseg    ends</p><p>​    end   start</p>]]></content>
    
    
    <summary type="html">微机原理的填空题与部分大题</summary>
    
    
    
    <category term="微机原理" scheme="https://www.darkfox.top/categories/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="微机原理" scheme="https://www.darkfox.top/tags/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
</feed>
