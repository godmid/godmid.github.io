<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>一种副边同步整流方案的仿真验证</title>
      <link href="posts/8a4215ea/"/>
      <url>posts/8a4215ea/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center> 有源整流（Active rectification）或同步整流（synchronous rectification）是由有源控制的电子开关取代二极管，以提升整流效率的技术，使用的电子开关多半是功率MOSFET或双极性晶体管[1]。一般半导体的二极管压降固定，约为0.5至1V，在工作电流范围内，压降不会随电流有明显的变化，有源整流器的压降比较像是电阻，在低电流时的压降很小。整流器是将交流的电压转换为直流的电压，使用有源整流时，会在输入电压为正时将开关打开，输入电压为负时关闭开关。因为开关的导通和关闭和电压同步，或是和电路中的其他开关有同步的关系，因此称为同步整流。  </center><span id="more"></span><p>关电源的损耗主要由3部分组成：<a href="https://baike.baidu.com/item/%E5%8A%9F%E7%8E%87%E5%BC%80%E5%85%B3%E7%AE%A1/10513839?fromModule=lemma_inlink">功率开关管</a>的损耗，<a href="https://baike.baidu.com/item/%E9%AB%98%E9%A2%91%E5%8F%98%E5%8E%8B%E5%99%A8/1326965?fromModule=lemma_inlink">高频变压器</a>的损耗，输出端<a href="https://baike.baidu.com/item/%E6%95%B4%E6%B5%81%E7%AE%A1/6320507?fromModule=lemma_inlink">整流管</a>的损耗。在低电压、<a href="https://baike.baidu.com/item/%E5%A4%A7%E7%94%B5%E6%B5%81/5467824?fromModule=lemma_inlink">大电流</a>输出的情况下，<a href="https://baike.baidu.com/item/%E6%95%B4%E6%B5%81%E4%BA%8C%E6%9E%81%E7%AE%A1/9831305?fromModule=lemma_inlink">整流二极管</a>的<a href="https://baike.baidu.com/item/%E5%AF%BC%E9%80%9A/5203982?fromModule=lemma_inlink">导通</a>压降较高，输出端整流管的损耗尤为突出。<a href="https://baike.baidu.com/item/%E5%BF%AB%E6%81%A2%E5%A4%8D%E4%BA%8C%E6%9E%81%E7%AE%A1/10549821?fromModule=lemma_inlink">快恢复二极管</a>（<a href="https://baike.baidu.com/item/FRD/9755551?fromModule=lemma_inlink">FRD</a>）或<a href="https://baike.baidu.com/item/%E8%B6%85%E5%BF%AB%E6%81%A2%E5%A4%8D%E4%BA%8C%E6%9E%81%E7%AE%A1/18884033?fromModule=lemma_inlink">超快恢复二极管</a>（<a href="https://baike.baidu.com/item/SRD/2635130?fromModule=lemma_inlink">SRD</a>）可达1.0～1.2V，即使采用低压降的<a href="https://baike.baidu.com/item/%E8%82%96%E7%89%B9%E5%9F%BA%E4%BA%8C%E6%9E%81%E7%AE%A1/3217901?fromModule=lemma_inlink">肖特基二极管</a>（SBD），也会产生大约0.6V的压降，这就导致整流损耗增大，<a href="https://baike.baidu.com/item/%E7%94%B5%E6%BA%90%E6%95%88%E7%8E%87/9496409?fromModule=lemma_inlink">电源效率</a>降低。                                                                                                                                        ——百度百科</p><p>为了进一步提升反激电源的功率与效率所以我们需要解决掉副边二极管的消耗过大的问题，同步整流就是个不错的方案。</p><h2 id="1-获取资料-准备理论">1. 获取资料，准备理论</h2><blockquote><p>获取分立式副边同步整流的资料与方案</p></blockquote><p>搜索了一顿，找到了以下几种方案：</p><p><img src="https://cdn.jsdelivr.net/gh/godmid/pic-for-cdn@main/img/202411261800047.png" alt="555" loading="lazy"></p><p>用额外的绕组给副边MOS的驱动供电,但是会增加电路的复杂度和成本，不过隔离性更好。</p><p><img src="E:%5Cwork%5C24%E5%B9%B41%E6%9C%88%E5%BD%92%E6%A1%A3%5CP-%E5%89%AF%E8%BE%B9%E5%90%8C%E6%AD%A5%E6%95%B4%E6%B5%81-240110%5C6_38.png" alt="6_38" loading="lazy"></p><p>把MOS管放到副边输出的低端，可以借助输出电压给MOS管供电，但MOS放在低端往往会造成系统的EMI表现更差。同时如果输出电压较低，就不足以为MOS的驱动提供足够的电压，因此无法在低压输出场合应用。</p><p><img src="https://cdn.jsdelivr.net/gh/godmid/pic-for-cdn@main/img/202411261800625.png" alt="7_29" loading="lazy"></p><p>既不需要辅助绕组，又能适应不同输出电压应用，同时也要保证系统EMI表现较好。有一些专用芯片就集成了CCM（连续导通）和DCM（断续导通）模式的反激二极管，可以实现这样的设计。</p><p><img src="https://cdn.jsdelivr.net/gh/godmid/pic-for-cdn@main/img/202411261800898.png" alt="8_18" loading="lazy"></p><p>这种集成方案的原理是当原边MOS打开时，芯片的MOS管反向截止，此时(VDS)出现正压，MP9989内部的自供电电路会给VDD电容充电。当原边MOS关断时，由于VDD电容已经被储能，此时VDD可以为驱动电路供电，保证副边MOS的顺利打开。</p><p><strong>2. 仿真验证方案</strong></p><blockquote><p>需要验证两个方案，一个是分立式的不需要额外源的方案即自励，一个是需要额外源的方案即它励</p></blockquote><h3 id="自励">自励:</h3><blockquote><p>本身就可以完全进行控制的模块，不需要其他辅助</p></blockquote><h3 id="它励">它励:</h3><blockquote><p>利用其他的信号进行控制，例如变压器的绕组</p></blockquote><h2 id="3-搭建自励实验平台环境">3. 搭建自励实验平台环境</h2><blockquote><p>框图仅供参考，实际需要考虑其他因素；该实验难度较高，不易于模拟芯片功能，请慎重考虑是否复现。</p></blockquote><p>首先搭建一个自励的方案平台，根据某芯片内部框图我们可以简要分析一下结构；</p><p><img src="https://cdn.jsdelivr.net/gh/godmid/pic-for-cdn@main/img/202411261801680.png" alt="Snipaste_2023-12-26_09-35-49" loading="lazy"></p><p>一个自励型的分立式模块黑盒应该有三个引脚，分别为驱动、电源、地。根据内部框图我们可以大致将其分为供电部分、逻辑部分、动作部分、保护部分。首先是供电部分，假设我们的输出范围为3V-30V，那么做分立式的LDO就需要慎重考虑了，首先是耐压要≥30V，其次是静态电流不能太大，不然功耗过高就没有意义了，还有就是价格的问题，综合价格比集成方案还要贵的话就没有意义了。</p><blockquote><p>数据与方案未经过实际验证，仅供参考！</p></blockquote><p>好在mulism仿真里面建立一个电压电流源很简单，所以我们首先建立一个简单的供电的电源系统</p><p>如图所示，建立一个12V输入的电压系统,与3.3V的逻辑电压的简易供电体系。然后简单的构建一下逻辑体系。出于对实际情况的考虑，我们把DC电压源换成pulse源。</p><p><img src="https://cdn.jsdelivr.net/gh/godmid/pic-for-cdn@main/img/202411261801329.png" alt="image-20240606170129773" loading="lazy"></p><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>UnlockExcel</title>
      <link href="posts/ee3605ad/"/>
      <url>posts/ee3605ad/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span><p>宏代码</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Sub DeletePW()</span><br><span class="line"></span><br><span class="line">ActiveSheet.Protect DrawingObjects:=True, Contents:=True, AllowFiltering:=True</span><br><span class="line"></span><br><span class="line">ActiveSheet.Protect DrawingObjects:=False, Contents:=True, AllowFiltering:=True</span><br><span class="line"></span><br><span class="line">ActiveSheet.Protect DrawingObjects:=True, Contents:=True, AllowFiltering:=True</span><br><span class="line"></span><br><span class="line">ActiveSheet.Protect DrawingObjects:=False, Contents:=True, AllowFiltering:=True</span><br><span class="line"></span><br><span class="line">ActiveSheet.Unprotect</span><br><span class="line"></span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SORT</title>
      <link href="posts/67b11f96/"/>
      <url>posts/67b11f96/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span><iframe   height=900 width=600 src="https://caspervonb.xyz/toneofsorting/" "   frameborder=0   allowfullscreen> </iframe><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>int8_t等数据类型的区别</title>
      <link href="posts/52c127a1/"/>
      <url>posts/52c127a1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span><p>工作中经常碰到int8_t、int16_t、int32_t、int64_t、uint8_t、size_t、ssize_t等数据类型，所以有必要对此进行梳理。</p><p><strong>int_t同类</strong></p><p>int_t 为一个结构的标注，可以理解为type/typedef的缩写，表示它是通过typedef定义的，而不是一种新的数据类型。因为跨平台，不同的平台会有不同的字长，所以利用预编译和typedef可以最有效的维护代码。</p><ul><li>int8_t   : typedef signed char;</li><li>uint8_t  : typedef unsigned char;</li><li>int16_t  : typedef signed short ;</li><li>uint16_t : typedef unsigned short ;</li><li>int32_t  : typedef signed int;</li><li>uint32_t : typedef unsigned int;</li><li>int64_t  : typedef signed long long;</li><li>uint64_t : typedef unsigned long long;</li></ul><table><thead><tr><th style="text-align:left">Specifier</th><th style="text-align:left">Common Equivalent</th><th style="text-align:left">Signing</th><th style="text-align:left">Bits</th><th style="text-align:left">Bytes</th><th style="text-align:left">Minimum Value</th><th style="text-align:left">Maximum Value</th></tr></thead><tbody><tr><td style="text-align:left"><code>int8_t</code></td><td style="text-align:left"><code>signed char</code></td><td style="text-align:left">Signed</td><td style="text-align:left">8</td><td style="text-align:left">1</td><td style="text-align:left">-128</td><td style="text-align:left">127</td></tr><tr><td style="text-align:left"><code>uint8_t</code></td><td style="text-align:left"><code>unsigned char</code></td><td style="text-align:left">Unsigned</td><td style="text-align:left">8</td><td style="text-align:left">1</td><td style="text-align:left">0</td><td style="text-align:left">255</td></tr><tr><td style="text-align:left"><code>int16_t</code></td><td style="text-align:left"><code>short</code></td><td style="text-align:left">Signed</td><td style="text-align:left">16</td><td style="text-align:left">2</td><td style="text-align:left">-32,768</td><td style="text-align:left">32,767</td></tr><tr><td style="text-align:left"><code>uint16_t</code></td><td style="text-align:left"><code>unsigned short</code></td><td style="text-align:left">Unsigned</td><td style="text-align:left">16</td><td style="text-align:left">2</td><td style="text-align:left">0</td><td style="text-align:left">65,535</td></tr><tr><td style="text-align:left"><code>int32_t</code></td><td style="text-align:left"><code>int</code></td><td style="text-align:left">Signed</td><td style="text-align:left">32</td><td style="text-align:left">4</td><td style="text-align:left">-2,147,483,648</td><td style="text-align:left">2,147,483,647</td></tr><tr><td style="text-align:left"><code>uint32_t</code></td><td style="text-align:left"><code>unsigned int</code></td><td style="text-align:left">Unsigned</td><td style="text-align:left">32</td><td style="text-align:left">4</td><td style="text-align:left">0</td><td style="text-align:left">4,294,967,295</td></tr><tr><td style="text-align:left"><code>int64_t</code></td><td style="text-align:left"><code>long long</code></td><td style="text-align:left">Signed</td><td style="text-align:left">64</td><td style="text-align:left">8</td><td style="text-align:left">-9,223,372,036,854,775,808</td><td style="text-align:left">9,223,372,036,854,775,807</td></tr><tr><td style="text-align:left"><code>uint64_t</code></td><td style="text-align:left"><code>unsigned long long</code></td><td style="text-align:left">Unsigned</td><td style="text-align:left">64</td><td style="text-align:left">8</td><td style="text-align:left">0</td><td style="text-align:left">18,446,744,073,709,551,615</td></tr></tbody></table><p><strong>size_t与ssize_t</strong></p><p>size_t主要用于计数，如sizeof函数返回值类型即为size_t。在不同位的机器中所占的位数也不同，size_t是无符号数，ssize_t是有符号数。</p><ul><li>在32位机器中定义为：typedef  unsigned int size_t; （4个字节）</li><li>在64位机器中定义为：typedef  unsigned long size_t;（8个字节）</li></ul><p>由于size_t是无符号数，因此，<strong>当变量有可能为负数时，必须使用ssize_t</strong>。因为当有符号整型和无符号整型进行运算时，有符号整型会先自动转化成无符号。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">short</span> a;</span><br><span class="line">    <span class="keyword">short</span> <span class="keyword">int</span> b = <span class="number">-1</span>;</span><br><span class="line">    a = b;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;b=&quot;</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;  <span class="comment">//b=-1</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a=&quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;  <span class="comment">//a=65535</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此外，int 无论在32位还是64位机器中，都是4个字节, 且带符号，可见size_t与int 的区别之处。</p><p>下面是stdint.h中的详细定义</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 7.18.1.1  Exact-width integer types */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">signed</span> <span class="keyword">char</span> <span class="keyword">int8_t</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span>   <span class="keyword">uint8_t</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">short</span>  <span class="keyword">int16_t</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">short</span>  <span class="keyword">uint16_t</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span>  <span class="keyword">int32_t</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span>   <span class="keyword">uint32_t</span>;</span><br><span class="line">__MINGW_EXTENSION <span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span>  <span class="keyword">int64_t</span>;</span><br><span class="line">__MINGW_EXTENSION <span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span>   <span class="keyword">uint64_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 7.18.1.2  Minimum-width integer types */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">signed</span> <span class="keyword">char</span> <span class="keyword">int_least8_t</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span>   <span class="keyword">uint_least8_t</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">short</span>  <span class="keyword">int_least16_t</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">short</span>  <span class="keyword">uint_least16_t</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span>  <span class="keyword">int_least32_t</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span>   <span class="keyword">uint_least32_t</span>;</span><br><span class="line">__MINGW_EXTENSION <span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span>  <span class="keyword">int_least64_t</span>;</span><br><span class="line">__MINGW_EXTENSION <span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span>   <span class="keyword">uint_least64_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*  7.18.1.3  Fastest minimum-width integer types</span></span><br><span class="line"><span class="comment"> *  Not actually guaranteed to be fastest for all purposes</span></span><br><span class="line"><span class="comment"> *  Here we use the exact-width types for 8 and 16-bit ints.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">signed</span> <span class="keyword">char</span> <span class="keyword">int_fast8_t</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> <span class="keyword">uint_fast8_t</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">short</span>  <span class="keyword">int_fast16_t</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">short</span>  <span class="keyword">uint_fast16_t</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span>  <span class="keyword">int_fast32_t</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span>  <span class="keyword">int</span>  <span class="keyword">uint_fast32_t</span>;</span><br><span class="line">__MINGW_EXTENSION <span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span>  <span class="keyword">int_fast64_t</span>;</span><br><span class="line">__MINGW_EXTENSION <span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span>   <span class="keyword">uint_fast64_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 7.18.1.5  Greatest-width integer types */</span></span><br><span class="line">__MINGW_EXTENSION <span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span>  <span class="keyword">intmax_t</span>;</span><br><span class="line">__MINGW_EXTENSION <span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span>   <span class="keyword">uintmax_t</span>;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c/c++ long int与long long的区别</title>
      <link href="posts/66a918cc/"/>
      <url>posts/66a918cc/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><h1>long int</h1><p>long int即long，给人的感觉好像是长整型，但实际上，它和int一样，只有32位。cppreference给出的定义是——</p><blockquote><p><strong>int</strong> - basic integer type. The keyword int may be omitted if any of the modifiers listed below are used. If no length modifiers are present, it’s guaranteed to have a width of at least 16 bits. However, on 32/64 bit systems it is almost exclusively guaranteed to have width of at least 32 bits.<br><strong>long</strong> - target type will have width of at least 32 bits.</p></blockquote><p>在实际的使用中，long与int几乎没有区别，比如——</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">long</span> l = <span class="number">10000000</span>;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">10000000</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;size of long:%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">long</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;size of int:%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;l = %d\n&quot;</span>,l);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;i = %d\n&quot;</span>,i);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">1234567891011</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2018122510141490.png" alt="在这里插入图片描述" loading="lazy"><br>　　既然long int与int相同，那么为什么还有long int这种尴尬的类型呢？<br>　　原因是早期的C编译器定义了long int占用4个字节，int占用2个字节，long int是名副其实的<strong>长整型</strong>。在ANSI C的标准中，对长整型的定义也是<strong>long int应该至少和int一样长</strong>，而不是long int 一定要比int占用存储字节长。新版的C/C++标准兼容了早期的这一设定。</p><span id="more"></span><h1>long long</h1><p>long long则不同，long long是C++的64位整型的基本类型，“现任”长整型，从C99开始引入这个概念，在后续的标准中完善概念和定义，C++11官方正式标准如下——</p><blockquote><p><strong>long long</strong> - target type will have width of at least 64 bits.(since C++11)</p></blockquote><p>long long占用8个字节，数据表示范围也从int的[ − 2 31 , 2 31 − 1 ] [-2^{31},2^{31}-1][−231,231−1]，升级到[ − 2 63 , 2 63 − 1 ] [-2^{63},2^{63}-1][−263,263−1]。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">long</span> l = <span class="number">10000000</span>;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">10000000</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ll = <span class="number">100000000000000</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;size of long:%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">long</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;size of int:%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;size of long long:%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">long</span> <span class="keyword">long</span>));</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;l = %d\n&quot;</span>,l);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;i = %d\n&quot;</span>,i);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;ll = %lld\n&quot;</span>,ll);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">1234567891011121314</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20181225103911667.png" alt="在这里插入图片描述" loading="lazy"><br>　　long long是C++的正式标准，这也就意味着，该类型不会因为编译器或者开发平台的不同而有所差异，放之四海而皆准，而且与一些系统函数、类库都有很好的交互（如常见的printf、scanf、cin和cout等）。与之相反，出身MS的__int64就有点不受待见了，在不同的编译器上可能水土不服。</p><h1>__int64</h1><p>在早期的代码中，可能会遇到<code>__int64</code>这种类型，这应该算是“历史遗留”问题。早期的C/C++标准中并没有规定64位长整型的规范，因此不同的编译器对这一模糊概念有不同的定义，我们熟知的VC6.0采用了<code>__int64</code>这种类型来表示64位长整型——</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">__int64 i64 = -<span class="built_in">pow</span>(<span class="number">2</span>,<span class="number">63</span>);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;__int64:&quot;</span>&lt;&lt;<span class="keyword">sizeof</span>(__int64)&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;i64 = &quot;</span>&lt;&lt;i64&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">123456789</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20181225104812530.png" alt="在这里插入图片描述" loading="lazy"><br>　　与long long具有相同的效果，但是，__int64并不是正式规范，比如，如果你使用的是MinGW的编译器的话，打开__int64的定义会发现——<br><img src="https://img-blog.csdnimg.cn/20181225105553149.png" alt="img" loading="lazy"><br>　　VS 2017虽然把__int64作为了一种内置类型，但是也做了类似的处理，使得__int64与long long没有肉眼可见的差别。但如果你使用的开发环境比较早期，那么可能就要专门研究一下__int64了。比如说，古老的VC6.0并没有long long这种类型，而__int64的输入输出，又需要printf和%I64d的配合，而不是%lld或者直接用cout。</p><h1>总结</h1><p>C/C++与Java等语言不同，具有较高的自由度，由于某些历史原因，某些概念在不同的平台上有不同的解释，虽然现在新版本的C++标准和编译器都在做兼容性工作，你可以在__int64与long long之间无缝切换，但至少，我们要清楚两者的不同。</p><table><thead><tr><th>类型</th><th>存储字节</th><th>表示范围</th></tr></thead><tbody><tr><td>int</td><td>4</td><td>-2147483648~2147483647</td></tr><tr><td>short int</td><td>2</td><td>-32768～+32767</td></tr><tr><td>long</td><td>4</td><td>-2147483648~2147483647（二十亿，约1 0 10 10^{10}1010）</td></tr><tr><td>long long</td><td>8</td><td>9223372036854775808～+9223372036854775807(九百亿亿，约1 0 19 10^{19}1019)</td></tr><tr><td>__int64</td><td>8</td><td>9223372036854775808～+9223372036854775807</td></tr></tbody></table><h1>参考链接</h1><p>1.<a href="https://blog.csdn.net/qq_31736627/article/details/52912691">https://blog.csdn.net/qq_31736627/article/details/52912691</a><br>2.<a href="https://en.cppreference.com/w/cpp/language/types">https://en.cppreference.com/w/cpp/language/types</a><br>3.<a href="https://www.cnblogs.com/ChenDinghao/p/6480937.html">https://www.cnblogs.com/ChenDinghao/p/6480937.html</a><br>4.<a href="https://blog.csdn.net/sk18192449347/article/details/55000087">https://blog.csdn.net/sk18192449347/article/details/55000087</a></p><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bug</title>
      <link href="posts/dc1f9f4/"/>
      <url>posts/dc1f9f4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span><h1>0x01</h1><p><img src="https://i.loli.net/2021/04/16/iD3tlZvuJBwzaex.png" alt="Snipaste_2021-04-16_09-29-21" loading="lazy"></p><p>Debug :</p><p>排除了bootload的问题</p><p>排除了芯片型号的问题</p><p>排除了驱动的问题</p><p>排除了接线的问题</p><p>排除了软件（上位机）问题</p><p>未排除下位机是否存在问题</p><p>未排除开发板是否短路</p><p>未排除开发板是否有故障</p><p>没有找到解决方案，打算换个控制系统试一下。</p><h1>0x02</h1><p>bug的来源十分简单，github上的那个grbl例程包里面有个小问题。那个grbl的包只要刷进去开发板，你的开发板就不能再写入其他程序了。是不是很诡异</p><p><img src="https://i.loli.net/2021/04/18/3mMUzEtJoV6pyR4.png" alt="" loading="lazy"></p><p><img src="https://i.loli.net/2021/04/18/cot1SMRln6zvNBE.png" alt="" loading="lazy"></p><p>包括arduino ide本身也不能再次刷进去程序了，很是诡异。一些老哥说是bootloader给刷掉了，改天刷一个看看是否能还原。</p><p>就目前的项目来看，只能再买一个开发板了。</p><p><img src="https://i.loli.net/2021/04/18/YC1wpWbiaUEeGRq.png" alt="" loading="lazy"></p><p>再也不刷这个包了。。。。。。</p><hr><p>后记：其实是这个板子的芯片有问题，我买的arduino uno的开发板只有16块钱，当时没注意，这个垃圾芯片是二手拆机下来的。熔断丝已经寄了，所以出现错误后不可恢复。</p><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> bug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB的常用函数</title>
      <link href="posts/6b735cd/"/>
      <url>posts/6b735cd/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span><h3 id="第一篇：matlab软件函数">第一篇：Matlab软件函数</h3><h4 id="一-软件操作函数">一、软件操作函数</h4><h5 id="1-命令窗口函数：">1）命令窗口函数：</h5><p>clc：清空命令窗口，使用向上箭头翻看命令。</p><p>open:打开文件，文本文件（<em>.doc），可执行文件（</em>.exe），图形文件（<em>.fig），超文本文件（</em>.html，<em>.htm），MATLAB数据库文件（</em>.mat），simulink模型文件*.mdl），MATLAB p文件（<em>.p），PDF文件（</em>,pdf），PPT文件（<em>.ppt），工程文件（</em>.prj），网址(*.url)和变量等。</p><p>format：设置数据输出格式。format（‘command’）</p><p>disp:在commandwindow中显示字符和矩阵。</p><p>​    disp(x)—x为矩阵</p><p>​    disp(‘x’)—x为字符</p><p>​    disp([‘x’ a ‘y’])—打印字符合集</p><p>clear：从工作空间中清空变量。clear, clear name,clear global name, clear –regexpexpr1 expr2</p><p>​    clear:清空工作空间的所有变量</p><p>​    clear name—clear(‘name’):清空以name命名的m文件，mex文件或变量名</p><p>​    clear globe name:完全清空以name命名的全局变量，清空后该全局变量不能被函数调用。</p><h5 id="2-帮助函数">2)帮助函数</h5><p>demo：通过help浏览器访问工具箱的演示文件。—demo’MATLAB’</p><p>doc:在help浏览器中打开相应帮助页面。</p><p>help：在MATLAB命令窗口中显示MATLAB的m函数，mdl文件，工具箱等的帮助信息。</p><h4 id="二-文件编程函数">二、文件编程函数</h4><h5 id="1-文件目录操作函数">1)文件目录操作函数</h5><p>dir:显示当前工作空间目录文件  dir; dirname;</p><p>files=dir(‘directory’):返回指定目录中的文件信息到结构体file中，结构体file中包含的信息为：name,data,bytes,isdir,datenum</p><h5 id="2-文件编辑调试函数">2)文件编辑调试函数</h5><p>dbstep:从当前断点中执行一行或多行代码 dbstep; dbstep nlines;dbstep in</p><p>dbstop:设置断点  dbstop inmfile ; dbstop in mfile at lineno</p><p>debug:列举出m文件的调试函数</p><p>mlint:检查m文件可能出现的问题，并报告结果—mlint(‘m-filename’)</p><p>profile:调试优化m文件代码—界面Desktop–Profiler</p><h5 id="3-文件脚本函数">3)文件脚本函数</h5><p>function:声明函数  function [out1, out2, …]=funname(in1,in2,…)：定义一个名为funname的函数，该函数输入参数为in1、in2、……输出参数为out1、out2、……</p><p>input:请求用户输入  user_entry=input(‘prompt’) ：在屏幕上显示prompt作为提示，等待键盘输入，并返回用户输入的值。user_entry=input(‘prompt’,‘s’)：将键入的字符返回为文本变量而非变量名或数值。</p><h5 id="4-语句控制函数">4）语句控制函数</h5><p>break:终止执行for循环或者while循环, break语句结束循环，把语句控制返回给循环结束后的语句。</p><p>continue:传递控制给下一个for或while循环</p><p>case:条件为真时执行代码,case是switch语法中的允许有条件执行语句的一部分。case语句块由case函数，case表达式和其后的一条或多条语句构成。</p><p>switch:有条件执行的代码，在基本语法中，当switch_expr ==case_expr时执行相关语句，如果没有实例表达式与switch表达式相匹配，则语句控制传递给otherwise语句块。</p><p>实例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">`method=&#x27;bigger&#x27;;`</span><br><span class="line">`switch method`</span><br><span class="line">`case&#x27;bigger&#x27;`</span><br><span class="line">`a=3;`</span><br><span class="line">`case&#x27;middle&#x27;`</span><br><span class="line">`a=2;`</span><br><span class="line">`case&#x27;small&#x27;`</span><br><span class="line">`a=1;`</span><br><span class="line">`otherwise`</span><br><span class="line">`a=0;`</span><br><span class="line">`end`</span><br></pre></td></tr></table></figure><p>If:如果条件为真，则执行相关语句  if expression, statements, end</p><p>elseif:—if expression1,statement1,elseifexpresstion,statement2,end</p><p>else:如果条件为假时执行语句</p><p>end:终止代码块，或为数组的最后一位数字索引, end用来终止for、while、switch、try和if语句—end函数也作为数组的最后一个索引，如X(3:end)和X(1,1:2:end-1)。可以用end增加数组，如X存在的情况下使用X(end+1)=5。</p><p>error:显示信息并终止函数—error(‘说明信息’)</p><p>for：反复运算指定代码块 forvariable=initval:endval, statements, end</p><p>while:当条件为真时重复执行语句—whileexpression,statement,end</p><p>return:从调用函数中返回</p><h5 id="5-内存控制函数">5)内存控制函数</h5><p>global:声明全局变量  初始化为一个空矩阵</p><p>isglobal:判断一个变量是否是全局变量</p><p>persistent:定义静态全局常量</p><h3 id="第二篇：数据类型函数">第二篇：数据类型函数</h3><h4 id="三-基本数据类型函数">三、基本数据类型函数</h4><h5 id="1-数值函数">1）数值函数</h5><p>double：转换为双精度浮点数</p><p>single:转换为单精度浮点数</p><p>typecast：在不改变数据大小情况下转换数据类型 Y=typecast(X,type)</p><p>​    type可选范围:‘uint8’、‘int8’、‘uint16’、‘int16’、‘uint32’、‘int32’、‘uint64’、‘int64’、‘single’、‘double’</p><p>arrayfun:把函数应用到数组中的每个元素 A=arrayfun(fun, S)应用fun函数到数组S中的每个元素，将结果返回给数组A。</p><p>​    A=arrayfun(fun, S, T, …)</p><p>实例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">x(1).f1&#x3D;2;x(2).f1&#x3D;3;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x(1).f2&#x3D;3;x(2).f2&#x3D;3;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result&#x3D;arrayfun(@(x)isequal(x.f1,x.f2),x)</span><br></pre></td></tr></table></figure><p>cast:转变数值数据类型 B=cast(A,newclass)</p><p>实例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">`a=int16(2);`</span><br><span class="line">`b=cast(a,&#x27;char&#x27;);`</span><br><span class="line">`cate=class(b)`</span><br></pre></td></tr></table></figure><p>cat:连接数组  C=cat(dim, A,B)–cat(2,A,B)与[A,B]相同，cat(1,A,B)与[A;B]相同</p><p>class:创建对象或者返回对象类型  obj=class(s,‘class_name’)</p><p>find：寻找非零元素的索引和值</p><p>​    ind=find(X)；X可以是逻辑式，返回非零元素的索引</p><p>​    ind=find(X, k, ‘first’) 返回数组X中所有非零元素的前k个元素。</p><p>​    ind=find(X, k, ‘last’) 返回数组X中所有非零元素的后k个元素。</p><p>​    [row,col,v]=find(X,…)返回列向量，行向量，v表示非零值</p><p>isequal ：判断两个对象是否相等 比较结构体是否相等时，结构体中子域的顺序不重要 NaNs在此函数中认识不相等—isequal(A,B,…)相同返回1，不同返回0</p><p>isequalwithequalnans:把NaN视为相等的情况下判断两个数组是否相等</p><h5 id="2-字符串转化数值函数">2）字符串转化数值函数</h5><p>base2dec :把指定进制的数字字符串转换为十进制数 d=base2dec(‘strn’, base)</p><p>bin2dec :把二进制数字字符串转换为十进制数 bin2dec(binarystr)</p><p>hex2dec :把十六进制数字字符串转换为十进制数 d=hex2dec(‘hex_value’)</p><p>hex2num :把十六进制数字字符串转换为双精度浮点数 n=hex2num(S)</p><p>str2double :把字符串转换为双精度浮点数</p><p>str2num :把字符串转换为数字</p><h5 id="3-数值转化为字符串函数">3）数值转化为字符串函数</h5><p>dec2base:把十进制数转换为指定基下的数值字符串 str=dec2base(d, base)</p><p>dec2bin :把十进制数转换为二进制数值字符串</p><p>dec2hex :把十进制数转换为十六进制的数值字符串</p><p>int2str :把整数转换为字符串</p><p>mat2str :把矩阵转换为字符串</p><p>num2str :把数字转换为字符串</p><h4 id="四-高级数据类型函数">四、高级数据类型函数</h4><h5 id="1-结构体函数">1）结构体函数</h5><p>cell2struct :把元胞数组转换成结构体数组 s=cell2struct(c, fields,dim) fields指结构体数组的域名，fields可以说字符数组或者字符串元胞数组。</p><p>size(c,dim)==length(fields)%如果fields是元胞数组 size</p><p>(c,dim)==size(fields,1)%如果fields是字符数组</p><p>实例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">`c=&#123;&#x27;Tom&#x27;,&#x27;math&#x27;,80;&#x27;Jane&#x27;,&#x27;math&#x27;,70&#125;`</span><br><span class="line">`feilds=&#123;&#x27;name&#x27;,&#x27;subject&#x27;,&#x27;grade&#x27;&#125;;`</span><br><span class="line">`s=cell2struct(c,fields,2)`</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>struct:创建结构体数组 s=struct(‘field1’, values1, ‘field2’,values2, …)</p><p>struct2cell :把结构体数组转换为元胞数组</p><p>structfun :把函数应用于结构体中的每一个子域 A=structfun(fun, s)</p><h5 id="2-元胞数组函数">2)元胞数组函数</h5><p>cell ：创建元胞数组  c=cell(n)c=cell(m,n)</p><p>celldisp ：显示元胞数组的内容</p><p>cellfun ：把函数应用于元胞数组中的每个元素 A=cellfun(fun, C, D,…)</p><p>cellplot ：以图形形式显示元胞数组的结构</p><p>实例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">`c&#123;1,1&#125;=&#x27;2-by-2&#x27;;c&#123;1,2&#125;=&#x27;eigenvalues ofeye(2)&#x27;;`</span><br><span class="line">`c&#123;2,1&#125;=eye(2);c&#123;2,2&#125;=eig(eye(2));`</span><br><span class="line">`cellplot(c)`</span><br></pre></td></tr></table></figure><p>cellstr ：根据字符串数组创建字符串元胞数组</p><p>mat2cell ：把矩阵分割为元胞数组 c=mat2cell(x,m, n)</p><p>num2cell ：把数值数组转变为元胞数组  C=num2cell(A)</p><h5 id="3-字符串函数">3)字符串函数</h5><p>func2str ：根据函数句柄构建函数名称字符串 s=func2str(fhandle)</p><p>char ：把整数数组转化为字符串 S=char(X)</p><p>eval ：执行包含MATLAB表达式的字符串 eval(expression)</p><p>findstr ：在长字符串中寻找匹配的短字符串,返回字符串索引</p><p>sprintf ：把一定格式把数据写入字符串  [s, errmsg]=sprintf(format,A, …)</p><p>strcat ：水平连接字符串  t=strcat(s1,s2, s3, …)</p><p>strcmp,strcmpi ：比较字符串—strcmp(‘str1’,‘str2’)相同返回1，不同返回0</p><p>strings函数：连接字符串name=[‘abc’ ‘def’ ‘ghj’]</p><p>strread ：从字符串中读取指定格式数据</p><p>strrep :发现和替换子字符串  str=strrep(str1, str2, str3) —将str1内的所有子字符串str2替换为str3</p><p>strtrim :删除字符串开头和结尾的空字符</p><p>blanks :创建空格字符串数组</p><p>isletter :判断字符串中字符是否为英文字母</p><p>isspace :判断字符串中字符是否为空格</p><p>isstrprop :判断字符串中是否含有指定类别的字符tf=isspace(‘str’)</p><p>dblank :删除字符串末尾空格</p><h3 id="第三篇：矩阵函数">第三篇：矩阵函数</h3><h4 id="五-数组和矩阵函数">五、数组和矩阵函数</h4><h5 id="1-数组基本函数">1）数组基本函数</h5><p>display：显示字符或者数组</p><p>isempty :判断数组是否为空，空返回1，不空返回0</p><p>isequal :判断数组是否相同 （认为NaN不同）</p><p>isequalwithequalnans:判断数组是否相同，把NaN看成相同的数</p><p>isfinite :判断数组元素是否为有限数</p><p>isfloat :判断数组元素是否为浮点数</p><p>isinf :判断数组元素是否为无限数</p><p>isinteger :判断元素是否为整数</p><p>islogical ：判断元素是否为逻辑变量</p><p>isnan ：判断元素是否为NaN</p><p>isnumeric ：判断数组元素是否为数值</p><p>isscalar ：判断输入是不是离散量</p><p>issparse ：判断矩阵是否为稀疏矩阵</p><p>isvector ：判断输入是否为向量</p><p>length ：计算向量的长度</p><p>max ：找出向量中的最大元素</p><p>C=max(A) A为一个向量，返回向量最大值，矩阵A，返回每列向量最大值</p><p>C=max(A,B) A、B维数一样，返回对应位置最大元素</p><p>max(A,[],dim)</p><p>[C,I]=max(A)找出最大值和索引</p><p>min ：找出向量中的最小元素</p><p>ndims ：计算矩阵的维数  ndims同length(size(x)) 一致</p><p>numel：计算数组中元素的个数或者下标数组表达式的个数</p><p>size ：计算数组维数大小 d=size(X) [m,n]=size(X)m行n列 m=size(X,dim)</p><h5 id="2-数组操作函数">2）数组操作函数</h5><p>bsxfun：两个数组间元素逐个计算 C=bsxfun(fun,A,B)</p><p>@plus(加)@minus（减）@times(数组乘)@rdivide（左除）@ldivide（右除）@power（幂）@max@min@rem（整除）@mod（模除）</p><p>dot :向量点乘 C=dot(A,B)</p><h5 id="3-基础矩阵函数">3）基础矩阵函数</h5><p>create :生成随机数流  [s1,s2,…]=RandStream.create(‘gentype’,‘NumStreams’,n)</p><p>eye :生成单位矩阵 Y=eye([m,n])对角线1，其他0</p><p>ones :生成元素为1的数组 Y=ones(n) Y=ones(m,n)</p><p>rand :生成均匀分布的伪随机数矩阵 r=rand(n) rand(m,n,p,…)</p><p>randi :生成均匀分布的伪随机整数矩阵 randi(imax) r=randi(imax,n)</p><p>r=randi(imax,m,n,p,…) r=randi([imin,imax],…) 例：r=randi([5,10],[2,3])</p><p>randn :生成[-1,1]之间随机分布数矩阵 r=randn(n) randn(m,n)randn(m,n,p,…)</p><p>randstream :生成随机数据流</p><p>set (RandStream) :设置随机数据流属性set(S,‘PropertyName’,Value)</p><p>set(S,‘Property’)</p><h5 id="4-矩阵处理函数">4)矩阵处理函数</h5><p>reshape ：改变矩阵维数  B=reshape(A,m,n)</p><p>sort :把数组元素按升序或降序排列</p><p>B=sort(A,dim) B=sort(…,mode) [B,IX]=sort(A,2)返回B元素在A中的位置的索引</p><p>sortrows :矩阵行按照升序排列</p><h5 id="5-矩阵分析函数">5）矩阵分析函数</h5><p>det :求方阵行列式值</p><p>norm :计算向量或者矩阵范数  n=norm(A) n=norm(A,p)</p><p>normest :返回矩阵2-范数估计值</p><p>null :计算矩阵零空间</p><p>rank :返回矩阵的秩</p><p>subspace :返回两个子空间夹角</p><p>trace :返回矩阵的迹对角元素之和</p><h5 id="6-矩阵特征值函数">6）矩阵特征值函数</h5><p>eig :计算矩阵特征值和特征向量</p><p>condeig :计算特征值对应的条件数</p><p>eigs :计算矩阵的最大特征值和特征向量</p><p>gsvd :矩阵广义奇异值分解</p><p>svd :矩阵奇异值分解</p><h3 id="第四篇-数学函数">第四篇 数学函数</h3><h4 id="六-基本数学函数">六、基本数学函数</h4><h5 id="1-基本运算符">1）基本运算符</h5><p>+：加法运算符</p><p>-：减法运算符</p><p>*：矩阵乘法</p><p>.*：数组乘法</p><p>/：斜杠或者矩阵右除  B/A等于公式B*inv(A)</p><p>./：数组右除  A./B等于A(i,j)/B(i,j)</p><p>\：反斜杠或者矩阵左除  A\B等于inv(A)*B</p><p>.\：数组左除   A.\B等于B(i,j)/A(i,j)</p><p>^：矩阵幂计算</p><p>.^：数组幂计算  A.^B等于A(i,j)的B(i,j)次幂</p><p>’：矩阵转置</p><p>[]：表示空矩阵，A(m,:)删除A中的一行，A(:,n)删除A中的一列</p><p>{}：元胞组赋值</p><p>关系操作符：&lt; &lt;= &gt; &gt;= == ~ =</p><p>逻辑操作符 : 逻辑：&amp;&amp; || 数组：&amp; | ~</p><h5 id="2-数据操作函数">2）数据操作函数</h5><p>sort ：数组元素按升序或降序排列 B=sort(A) B=sort(A,dim) B=sort(…,mode)[B,IX]=sort(A,…)</p><p>sortrows ：把矩阵中每行按照升序排列  B=sortrows(A) B=sortrows(A,column)</p><p>sum ：求数列元素的和  B=sum(A) A是向量，向量求和，A是矩阵就没列求和 B=sum(A,dim)</p><h5 id="3-统计分析函数">3）统计分析函数</h5><p>brush:交互式标记、删除、修改以及保存图片中的观测量位  data brush</p><p>corrcoef ：计算相关性系数 R=corrcoef(X)</p><p>cov ：返回协方差矩阵 cov(x)</p><p>max ：求数组中的最大元素   C=max(A) C=max(A,B) C=max(A,[],dim)</p><p>mean ：求数组的平均数或者均值 M=mean(A) M=mean(A,dim)</p><p>median ：返回数组的中间值 M=median(A) M=median(A,dim)</p><p>mode ：求数组中出现频率最多的值  M=mode(X) M=mode(X, dim)</p><p>[M,F]=mode(X, …)</p><p>std ：计算标准差 s=std(X)</p><p>var ：计算方差 V=var(X)</p><h5 id="4-三角函数">4）三角函数</h5><p>acos ：以弧度的形式返回反余弦值</p><p>实例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">`x=-1:.05:1;`</span><br><span class="line">`plot(x,acos(x));grid on`</span><br></pre></td></tr></table></figure><p>acosd ：以角度的形式返回反余弦值</p><p>acosh ：以弧度形式返回反双曲余弦值</p><p>acot ：以弧度的形式返回反余切值</p><p>acotd ：以角度的形式返回反余切值</p><p>acoth ：以弧度的形式返回反双曲余切值</p><p>acsc :以弧度的形式返回反余割值</p><p>acscd :以角度的形式返回反正割值</p><p>acsch :以弧度的形式反双曲余割值</p><p>asec :以弧度的形式返回反正割值</p><p>asecd :以角度的形式返回反正割值</p><p>asech :以弧度的形式返回反双曲正割值</p><p>asin :以弧度的形式返回反正弦值</p><p>asind :以角度形式返回反正弦值</p><p>asinh :以弧度的形式返回反双曲正弦值</p><p>atan :以弧度的形式返回反正切值</p><p>atand :以角度的形式返回反正切值</p><p>atanh :以弧度的形式返回反双曲正切值</p><p>cos :以弧度的形式返回输入的余弦值</p><p>cosd :以角度的形式返回输入的余弦值</p><p>cosh :以弧度的形式返回输入的双曲余弦值</p><p>cot :以弧度的形式返回输入的余切</p><p>cotd :以角度的形式返回输入的余切值</p><p>coth :以弧度的形式返回输入的双曲余切值</p><p>csc :以弧度的形式返回输入的余割值</p><p>cscd :以角度形式返回输入的余割值</p><p>csch :以弧度的形式返回双曲余割值</p><p>sec :以弧度的形式返回输入的正割值</p><p>secd :以角度的形式返回输入的正割值</p><p>sech :以弧度的形式返回双曲正割值</p><p>sin :以弧度的形式返回输入的正弦</p><p>sind :以角度的形式返回输入的正弦值</p><p>sinh :以弧度的形式返回输入的双曲正弦值</p><p>tan :以弧度的形式返回输入的正切值</p><p>tand :以角度的形式返回输入的正切值</p><p>tanh :以弧度的形式返回双曲正切</p><h5 id="5-指数函数">5）指数函数</h5><p>exp ：计算指数</p><p>log ：计算自然对数</p><p>log10 ：计算平凡对数（以10为底）</p><p>log2 ：计算以2为底数的对</p><p>pow2 ：计算以2为底的幂</p><p>nthroot：计算实数值的实n阶方根。y=nthroot(X,n)</p><p>sqrt ：计算平方根</p><p>abs ：计算绝对值和复数模值</p><h5 id="6-除法函数">6）除法函数</h5><p>ceil ：向正无穷方向舍入</p><p>fix ：向零方向舍入</p><p>floor ：向负无穷方向舍入</p><p>idivide ：舍入操作  C=idivide(A,B, opt)</p><p>mod ：计算相除后的模值</p><h5 id="7-排列函数">7）排列函数</h5><p>factorial：阶乘—factorial（N），N！</p><p>perms：元素所有可能的全排列</p><h4 id="七-高级数学函数">七、高级数学函数</h4><h5 id="1-微分方程解函数">1）微分方程解函数</h5><p>decic ：计算和ode15i（ode常微分方程）相容的初始条件</p><p>[y0mod,yp0mod]=decic(odefun,t0,y0,fixed_y0,yp0,fixed_yp0)</p><p>deval ：计算微分方程的解   sxint=deval(sol,xint)  sol是求解器返回的结构体，（ode45, ode23, dde23 xint是点或向量，函数求解的是该点上的值。</p><p>deval :计算微分方程的解   sxint=deval(sol,xint)</p><h5 id="2-极值函数">2）极值函数</h5><p>fminbnd ：在指定区间上求解单变量函数的最小值x=fminbnd(fun,x1,x2)x=fminbnd(fun,x1,x2,options)  结构体options用于指定优化参数</p><p>[x,fval]=fminbnd(…)   [x,fval,exitflag]=fminbnd(…)</p><p>[x,fval,exitflag,output]=fminbnd(…)</p><p>fminsearch ：利用derivative-free算法求无约束多变量函数的最小值</p><p>x=fminsearch(fun,x0)x=fminsearch(fun,x0,options)</p><p>[x,fval,exitflag]=fminsearch(…)</p><p>fzero：求单变量连续函数的零值点 x=fzero(fun,x0) x=fzero(fun,x0,options)</p><p>isqnonneg :求解非负最小二乘法约束问题</p><p>x=lsqnonneg(C,d)返回一个向量x，满足x &gt;= 0时(C*x-d)的范数最小。</p><p>x=lsqnonneg(C,d,x0) x=lsqnonneg(C,d,x0,options)</p><h5 id="3-数值积分函数">3）数值积分函数</h5><p>dblquad ：计算矩形区域的二重定积分</p><p>q=dblquad(fun,xmin,xmax,ymin,ymax)</p><p>q=dblquad(fun,xmin,xmax,ymin,ymax,tol)q=dblquad(fun,xmin,xmax,ymin,ymax,tol,method)</p><p>quad ：求基于变步长Simpson法的函数定积分数值解 q=quad(fun,a,b)</p><p>实例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">F&#x3D;@(x)1.&#x2F;(x.^3-2*x-5);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Q&#x3D;quad(F,0,2)</span><br></pre></td></tr></table></figure><p>quad2d ：在平面区域求二重积分的数值解  q=quad2d(fun,a,b,c,d)</p><p>实例：Q=quad2d(@(x,y)y.*sin(x)+x.<em>cos(y),pi,2</em>pi,0,pi)</p><h5 id="4-微分积分函数">4）微分积分函数</h5><p>dblquad ：计算矩形区域的二重定积分 q=dblquad(fun,xmin,xmax,ymin,ymax)</p><p>cumtrapz ：累积梯形数值积分 Z=cumtrapz(Y)Z=cumtrapz(X,Y) 对于多维数组从第一维开始计算 Z=cumtrapz(X,Y,dim)</p><p>diff :差分与微分近似 Y=diff(X) Y=diff(X,n) Y=diff(X,n,dim)</p><p>gradient :计算函数数值梯度  FX=gradient(F) [FX,FY]=gradient(F)</p><p>实例：绘制函数z=exp(-x.^2-y.^2)的梯度图形。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">`v=-2:0.2:2;`</span><br><span class="line">`[x,y]=meshgrid(v);`</span><br><span class="line">`z=exp(-x.^2-y.^2);`</span><br><span class="line">`[px,py]=gradient(z,0.2,0.2);`</span><br><span class="line">`contour(v,v,z)`</span><br><span class="line">`hold on`</span><br><span class="line">`quiver(v,v,px,py)`</span><br></pre></td></tr></table></figure><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210926095356.png" alt="image-20210926095340360" loading="lazy"></p><p>trapz :梯形数值积分 Z=trapz(Y) Z=trapz(X,Y) Z=trapz(…,dim)</p><h5 id="5-赋值函数">5)赋值函数</h5><p>biltin:重载方法中执行MATLAB内部自带的函数  builtin(…) 函数和 feval(…)函数相同</p><p>evalc :计算表达式值  T=evalc(S)：同函数eval(S)用法相同</p><p>feval :计算函数值  [y1, y2, …]=feval(fhandle, x1, …, xn)</p><h3 id="第五篇：方程函数">第五篇：方程函数</h3><h4 id="八-插值函数-线性方程解函数和多项式函数">八、插值函数、线性方程解函数和多项式函数</h4><h5 id="1-插值函数">1）插值函数</h5><p>interp1q ：1维快速线性插值法 yi=interp1q(x,Y,xi)</p><p>​    interp1q正常执行条件：</p><p>（1）x单调递增列向量</p><p>（2）Y为列向量or行数为length(x)(3)xi为列向量，如果xi值在x的坐标范围外，返回NaN</p><p>实例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">`x=(-5:0.5:5)&#x27;;`</span><br><span class="line">`y=sin(x);`</span><br><span class="line">`xi=(-5:0.5:5)&#x27;;`</span><br><span class="line">`yi=interp1q(x,y,xi);`</span><br><span class="line">`plot(x,y,&#x27;o&#x27;,xi,yi)`</span><br></pre></td></tr></table></figure><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210926095806.png" alt="image-20210926095802196" loading="lazy"></p><p>interp2 ：2维数据插值法</p><p>​    ZI=interp2(X,Y,Z,XI,YI)</p><p>​    ZI=interp2(Z,XI,YI)</p><p>​    ZI=interp2(X,Y,Z,XI,YI,method)</p><p>​    （1）‘nearest’：最邻近插值法；</p><p><img src="C:/Users/49475/AppData/Roaming/Typora/typora-user-images/image-20210926095826309.png" alt="image-20210926095826309" loading="lazy"></p><p>​    （2）‘linear’：线性插值法（默认插值方法）；</p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210926100005.png" alt="image-20210926095912064" loading="lazy"></p><p>​    （3）‘spline’：三次样条插值法；</p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210926100043.png" alt="image-20210926100040286" loading="lazy"></p><p>​    （4）’cubic’：三次插值法</p><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210926100104.png" alt="image-20210926100100798" loading="lazy"></p><p>实例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">`[X,Y]=meshgrid(-2:0.5:2);`</span><br><span class="line">`Z=peaks(X,Y);`</span><br><span class="line">`[XI,YI]=meshgrid(-2:0.125:2);`</span><br><span class="line">`ZI=interp2(X,Y,Z,XI,YI);`</span><br><span class="line">`mesh(X,Y,Z)`</span><br><span class="line">`hold on`</span><br><span class="line">`mesh(XI,YI,ZI+10)</span><br></pre></td></tr></table></figure><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210926100153.png" alt="image-20210926100150073" loading="lazy"></p><p>interp3 ：3维数据插值法</p><p>​    VI=interp3(X,Y,Z,V,XI,YI,ZI)</p><p>​    VI=interp2(X,Y,Z,V,XI,YI,ZI,method)</p><p>​    （1）‘nearest’：最邻近插值法；</p><p>​    （2）‘linear’：线性插值法（默认插值方法）；</p><p>​    （3）‘spline’：三次样条插值法；</p><p>​    （4）’cubic’：三次插值法</p><p>​</p><p>interpft ：基于FFT方法的1维插值法 y=interpft(x,n) y=interpft(x,n,dim)</p><p>实例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">`y=[1 2 3 2 1 23];`</span><br><span class="line">`N=length(y);`</span><br><span class="line">`L=5;`</span><br><span class="line">`M=N*L;`</span><br><span class="line">`x=0:L:L*N-1`</span><br><span class="line">`xi=0:M-1`</span><br><span class="line">`yi=interpft(y,M)`</span><br><span class="line">`plot(x,y,&#x27;o&#x27;,xi,yi,&#x27;*&#x27;)`</span><br></pre></td></tr></table></figure><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210926100231.png" alt="image-20210926100216325" loading="lazy"></p><p>interpn ：n维数据插值（表格查询）VI=interpn(X1,X2,X3,…,V,Y1,Y2,Y3,…)</p><p>meshgrid ：为3维绘图生成X和Y矩阵</p><p>[X,Y]=meshgrid(x,y) [X,Y,Z]=meshgrid(x,y,z)</p><p>ndgrid ：生成可为函数和插值算法使用的n维矩阵</p><p>[X1,X2,X3,…]=ndgrid(x1,x2,x3,…)</p><p>实例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">`[X1,X2]=ndgrid(-1:0.1:1,-1:0.1:1);`</span><br><span class="line">`Z=exp(-X1.^2-X2.^2);`</span><br><span class="line">`mesh(Z)`</span><br></pre></td></tr></table></figure><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210926100349.png" alt="image-20210926100345433" loading="lazy"></p><p>pchip ：分段三次厄密插值多项式（PCHIP） yi=pchip(x,y,xi)pp=pchip(x,y)</p><p>实例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">`x=-4:4`</span><br><span class="line">`y=[-3 -2 -2 0 0 0 2 2 3];`</span><br><span class="line">`t=-4:0.01:4;`</span><br><span class="line">`p=pchip(x,y,t);`</span><br><span class="line">`s=spline(x,y,t);`</span><br><span class="line">`plot(x,y,&#x27;o&#x27;,t,p,&#x27;-&#x27;,t,s,&#x27;-.&#x27;)`</span><br><span class="line">`legend(&#x27;data&#x27;,&#x27;pchip&#x27;,&#x27;spline&#x27;,4)`</span><br></pre></td></tr></table></figure><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210926100422.png" alt="image-20210926100418901" loading="lazy"></p><p>spline ：曲线三次样条插值  yy=spline(x,Y,xx)  pp=spline(x,Y)</p><p>实例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">`x=0:10;`</span><br><span class="line">`y=cos(x);`</span><br><span class="line">`xx=0:0.1:10;`</span><br><span class="line">`yy=spline(x,y,xx);`</span><br><span class="line">`plot(x,y,&#x27;o&#x27;,xx,yy)`</span><br></pre></td></tr></table></figure><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210926100518.png" alt="image-20210926100515126" loading="lazy"></p><h5 id="2-线性方程解函数">2)线性方程解函数</h5><p>linsolve ：使用部分主元LU因子分解法求解线性方程组  X = linsolve(A,B) [X, R] = linsolve(A,B)  X = linsolve(A,B,opts)</p><p>lscov ：已知协方差时求解方程的最小二乘解</p><p>x = lscov(A,b)  线性方程组A*x = b的一般最小二乘解</p><p>x = lscov(A,b,w)  线性方程组A*x = b的加权最小二乘解</p><p>x = lscov(A,b,V)  线性方程组A*x = b 的广义最小二乘解</p><p>x =lscov(A,b,V,alg)</p><p>bicg ：求解线性方程的双共轭梯度法</p><p>x=bicg(A,b) bicg(A,b,tol)bicg(A,b,tol,maxit)</p><p>bicg(A,b,tol,maxit,M1,M2)bicg(A,b,tol,maxit,M1,M2,x0)[x,flag]=bicg(A,b,…)</p><p>[x,flag,relres]=bicg(A,b,…)[x,flag,relres,iter]=bicg(A,b,…)</p><p>[x,flag,relres,iter,resvec]=bicg(A,b,…)</p><p>bicgstab ：求解线性方程的稳定的双共轭梯度法</p><p>bicgstabl ：求解线性方程的双共轭梯度l稳定法</p><p>bicgstab ：求解线性方程的稳定的双共轭梯度法</p><p>bicgstabl ：求解线性方程的双共轭梯度l稳定法</p><p>cgs ：求解线性方程的共轭梯度平方法</p><p>gmres ：求线性方程的广义最小残差法</p><p>lsqr ：求解线性方程的LSQR 方法</p><p>minres :求解线性方程的最小残差法</p><p>pcg :求解线性方程的预处理共轭梯度法</p><p>qmr :求解线性方程的准最小残差法</p><p>symmlq :求解线性方程的对称 LQ 法</p><p>tfqmr :求解线性方程的自由转置准最小残差法</p><h5 id="3-多项式函数">3)多项式函数</h5><p>polyfit ：多项式拟合</p><p>​    p=polyfit(x,y,n) 根据拟合数据x,y求n阶多项式p(x)的系数，p是系数</p><p>​    [p,S]=polyfit(x,y,n) p是系数，使用S和多项式的值能得到误差估计值或预测</p><p>实例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">`x=(-3:0.2:3)&#x27;;`</span><br><span class="line">`y=erf(x);`</span><br><span class="line">`p=polyfit(x,y,3)`</span><br><span class="line">`f=polyval(p,x);`</span><br><span class="line">`plot(x,y,&#x27;*&#x27;,x,f,&#x27;-&#x27;)`</span><br></pre></td></tr></table></figure><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210926101210.png" alt="image-20210926101206088" loading="lazy"></p><p>polyval ：多项式求值   y=polyval(p,x)</p><p>poly ：根据根求解多项式</p><p>polyder ：解析求解多项式微分表达式k=polyder§ k=polyder(a,b)</p><p>polyint ：解析求解多项式积分表达式系数  polyint(p,k)</p><p>mkpp ：构建分段多项式  pp=mkpp(breaks,coefs)</p><p>breaks是一个长度为L+1的向量，该向量元素严格递增。coefs为L*k的矩阵，每行元素代表</p><p>[breaks(i),breaks(i+1)]的k阶多项式的系数。</p><h4 id="十一-基本文件操作函数">十一、基本文件操作函数</h4><h5 id="1-文件创建函数">1）文件创建函数</h5><p>filemaker ：把文件名与文件中函数名分开 。</p><p>filesep ：文件目录分隔。</p><p>fileparts ：把目标文件名拆分成字符串形式输出 。</p><p>tempdir ：返回系统暂存地址名 。</p><p>tempname ：返回系统暂存文件名 。</p><p>fullfile :创建文件名</p><h5 id="2-文件打开-读取-存储函数">2）文件打开、读取、存储函数</h5><p>open:打开文件 —用法：open(‘name’)</p><p>load :将文件导入到MATLABworkspace中。loadfilename load filename X Y Z,</p><p>load-asciifilename ,load-mat filename,load(‘arg1’, ‘arg2’, ‘arg3’, …)</p><p>save:存储文件.save filename, save filename content, savefilename options</p><p>save(‘filename’, ‘var1’, ‘var2’, …)</p><p>daqread ：读数据采集工具箱(.daq)中的文件 。</p><p>​     [data, time, abstime, events, daqinfo]= daqread(‘filename’)</p><p>uiimport :调用文件导入助手</p><h5 id="3-简单文件输入输出函数">3)简单文件输入输出函数</h5><p>fopen ：打开文件。</p><p>​    fid = fopen(filename)</p><p>​    fid = fopen(filename,permission)</p><table><thead><tr><th>Permission值</th><th>打开模式</th></tr></thead><tbody><tr><td>‘r’</td><td>只读模式</td></tr><tr><td>‘w’</td><td>可写入模式，覆盖已有内容</td></tr><tr><td>‘a’</td><td>可写入模式，写入数据到文件末尾</td></tr><tr><td>‘r+’</td><td>可读写模式，</td></tr><tr><td>‘w+’</td><td>可写入模式，覆盖已有内容</td></tr><tr><td>‘a+’</td><td>可写入模式，写入数据到文件末尾</td></tr><tr><td>‘A’</td><td>无自动删除添加</td></tr><tr><td>‘W’</td><td>无自动删除写入</td></tr></tbody></table><p>fclose 关闭文件。status=fclose(fid) ,status=fclose(‘all’)</p><p>fprintf:以指定格式将数据写入文件 。count = fprintf(fid, format, A, …)</p><p>实例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> `x=1:0.1:2;`</span><br><span class="line">. `y=[x,sin(x)];`</span><br><span class="line">3. `fid=fopen(&#x27;sin.txt&#x27;,&#x27;wt&#x27;);`</span><br><span class="line">4. `fprintf(fid,&#x27;%5.2f %5.6f\n&#x27;,y);`</span><br><span class="line">5. `fclose(fid)`</span><br></pre></td></tr></table></figure><p>fscanf ：以指定格式读取文件中的内容 。A =fscanf(fid, format) , [A,count] = fscanf(fid, format, size)</p><p>fread ：读取文件中的二进制数据 。A =fread(fid, count ,precision, skip, machineformat)</p><p>fwrite ：将二进制数据写入到文件中 。</p><p>fseek ：设置文件位置指针 。status = fseek(fid,offset, origin)</p><p>ftell ：获取文件位置指针 。position = ftell(fid)</p><p>fwind ：把文件位置指针移动到文件起始位置 。fwind(fid)</p><p>fgetl ：按行读取文件内容，并删去换行符 。tline = fgetl(fid)</p><p>fgets ：按行读取文件内容，并保留换行符 。tline = fgets(fid, nchar)</p><p>frewind ：将文件指针移到文件的起始位置。 frewind(fid)</p><p>feof ：测试是否为文件的末尾 。message = ferror(fid)</p><p>ferro ：测试文件输入输出是否有错误 。message = ferror(fid,‘clear’) , [message,errnum] = ferror(…)</p><p>disp ：将目标文件所包含的信息以不同形式显示，如文本、数组等形式。</p><p>disp(obj)</p><h5 id="4-电子表格操作函数">4)电子表格操作函数</h5><p>xlsfinfo ：检测文件中是否包含Microsoft Excel电子表格文件 。</p><p>typ = xlsfinfo(filename) [typ,desc, fmt] = xlsfinfo(filename)</p><p>xlsread ：读Microsoft Excel电子表格文件中的内容 。</p><p>num = xlsread(filename)，num = xlsread(filename,sheet)，num =xlsread(filename, range)，num = xlsread(filename, sheet, range, ‘basic’)</p><p>[num,txt,raw,X]=xlsread(filename,sheet, range, ‘basic’)</p><p>xlswrite :将数据写入Microsoft Excel电子表格文件中 。</p><p>xlswrite(filename, M)，xlswrite(filename, M, sheet, range)，</p><p>[status, message] = xlswrite(filename, …)</p><p>wk1finfo ：检测文件中是否包含Lotus 1-2-3 WK1电子表格。</p><p>[extens, typ] = wk1finfo(filename)</p><p>wk1read ：读取Lotus 1-2-3 WK1电子表格文件 。</p><p>M = wk1read(filename) ，M = wk1read(filename,r,c,range)</p><p>wk1write ：将数据写入Lotus1-2-3 WK1电子表格文件中 。</p><p>wk1write(filename,M,r,c)</p><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB基础__软件初展望</title>
      <link href="posts/305021c5/"/>
      <url>posts/305021c5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span><h3 id="matlab最基础教程-零-：基本数学概念"><strong>MATLAB最基础教程（零）：基本数学概念</strong></h3><p>前言：matlab只是个软件，用来完成相关数学的计算，而如何安排这些计算，需要用户掌握最基本的数学概念。如果不理解相关的数学概念，则自然不会使用这个软件。</p><h4 id="1-数值与符号"><strong>1.数值与符号</strong></h4><p>如果给工程数学问题分类，最大的两类肯定是数值问题和符号问题，对应matlab的数值运算和符号运算。简而言之，数值运算就是所有的变量的值已知，求解的也是一些具体的值；符号运算则刚好相反，不要求所有的变量都已知，求解的结果也不是变量具体的值，而是变量之间的关系。一个简单的例子是<br>①数值问题：求解一元二次方程，<strong>ax2+bx+c=0</strong>，其中<strong>a=b=c=1</strong>，所求得的结果一定是<strong>x=几点几+几点几i</strong>，是个复数，是个具体的数值。<br>②符号问题：求解一元二次方程，<strong>ax2+bx+c=0</strong>，所求的的结果一定是<strong>x=求根公式</strong>，是abc的函数，是个关系<br>可见，一个问题是数值问题还是符号问题，很大程度上决定于结果需要求解的是数值还是关系。当然两个问题也可以相互转化，比如数值问题的一元二次方程，我们一般会先转化成符号问题，把abc代入求根公式，求出来变量x的具体数值。但实际中，一般我们并不推荐这样做，原因是matlab的数值和符号是完全不同的两套系统，相互转化不仅需要多余的数值符号转换语言，更可能带来查错的不便。</p><h4 id="2-典型数值问题"><strong>2.典型数值问题</strong></h4><p>以下是常见的数值问题，文中提到的解法均可在数值计算、科学计算、数值算法这类书中找到。</p><h4 id="2-1代数方程"><strong>2.1代数方程</strong></h4><p>代数方程又分为线性方程和非线性方程，线性方程一般可以转化为矩阵形式<strong>AX=b</strong>，对A求逆即可。求逆的数值解法一般有高斯赛德尔迭代，超松弛迭代等。非线性方程一般转化为<strong>f(x)=zeros</strong>其中x是个向量，右侧的<strong>zeros</strong>表示<strong>f</strong>是个多输出函数，数值解法一般是迭代，常见的有牛顿迭代，最速梯度，点斜式等。</p><h4 id="2-2常微分方程"><strong>2.2常微分方程</strong></h4><p>常微分方程一般转化为<strong>Dy=f(y,t)，且y(0)=y0</strong>是初始条件，其中<strong>y和Dy都是向量</strong>，f也是个多输出函数，数值解法有<strong>欧拉法，龙格库塔法</strong>。</p><h4 id="2-3偏微分方程"><strong>2.3偏微分方程</strong></h4><p>偏微分方程比较复杂，matlab处理偏微分方程也不专业，我也几乎不用matlab处理这类问题。但工程数学上，偏微分方程的解法有两类，差分法和有限元法。差分法需要采用中心差分，迎风差分等。有限元需要计算刚度矩阵等。</p><h4 id="2-4插值和拟合"><strong>2.4插值和拟合</strong></h4><p>插值和拟合是完全不同的两个数学概念，虽然很多时候很多人都混淆了。两者的描述都可以归结为：已知函数上的点**(x1,y1),(x2,y2)…(xn,yn)<strong>，求一个已知的</strong>x**，对应的<strong>y</strong>的数值。插值常用的<strong>多项式插值，三次样条插值</strong>。拟合的本质是一个<strong>最优化</strong>问题，其中最常用的一种拟合是线性拟合，求解方法是最小二乘法。</p><h4 id="2-5离散周期傅里叶变换"><strong>2.5离散周期傅里叶变换</strong></h4><p>严格说来，这并不能算一个数学问题，只是一种运算方式，就好像加减乘除一样。特殊性在于这种变换是对于一个向量进行，且运算后的结果依然是个向量。这里提出来是为了强调这种傅里叶变换的限定，要求是离散周期，这也是数值方法能处理的唯一一种傅里叶变换。</p><h4 id="2-6最优化问题"><strong>2.6最优化问题</strong></h4><p>最优化问题比较宽泛，一般可以归结为求目标函数f(x)的最大或者最小值，其中f是一个单输出的函数，x是一个向量。其中x需要满足线性约束条件、非线性约束条件、上下界。具体的解法有<strong>最速梯度，遗传，蚁群，退火等算法</strong>。</p><h4 id="2-7数值积分"><strong>2.7数值积分</strong></h4><p>已知函数上的点(x1,y1),(x2,y2),…(xn,yn)，求函数在x1到xn的定积分。常见算法有矩形公式，梯形公式，辛普森公式。类似的问题还有数值求导。</p><h4 id="3-典型符号问题"><strong>3.典型符号问题</strong></h4><p>以下是常见的符号问题，需要特别指出的是，无解问题。数值问题中也有一部分无解问题，但大多数工程中是碰不到的。而符号问题恰好相反，绝大部分我们遇到的符号问题都是没有解的，或者准确的说，没有解析解。比如求一元五次方程，我们知道x和这些系数存在关系，但无法写出显式的表达式，也就是说没有解析解。</p><h4 id="3-1递推转通项"><strong>3.1递推转通项</strong></h4><p>这个问题可以归结为：已知<strong>xn+1=f(xn)，求xn</strong>，常见于数列的推导。</p><h4 id="3-2代数方程"><strong>3.2代数方程</strong></h4><p>区别于数值问题中的代数方程， 这里的代数方程问题可以描述为：<strong>f(x,c)=0，求x=x©</strong>，这里需要求解的其实是x和c的关系。</p><h4 id="3-3常微分方程"><strong>3.3常微分方程</strong></h4><p>区别于数值问题中的常微分数方程， 这里的代数方程问题可以描述为：<strong>Dy=f(y,t,c)，求y=x(t,c)</strong>，一般无需初值条件。</p><h4 id="3-4符号积分"><strong>3.4符号积分</strong></h4><p>区别于数值问题中的数值积分，这里的符号积分可以描述为：已知函数关系<strong>y=f(x)</strong>，求<strong>y</strong>的不定积分。同样的问题还有符号求导。</p><h3 id="matlab最基础教程-一-：软件基本概念">matlab最基础教程（一）：软件基本概念</h3><h4 id="1-matlab的界面-汉化的可略过"><strong>1.matlab的界面</strong>（汉化的可略过）</h4><p>左上角，home标签下，找到layout进行设置/复位，可以设置各板块的显示与隐藏。其中有几个部分，请务必要显示<br>①<strong>Current Folder</strong>：中文一般翻译成工作路径，一般设置成一个自己建立的、有读写权限的文件夹，例如我的文档下建立一个matlab文件夹<br>②<strong>Command Window</strong>：字面意思是命令窗口，用来运行代码，所有的代码都是在这里输入<br>③<strong>Workspace</strong>：字面意思是工作空间，其实就是暂存所有运行结果的地方，“暂”的具体含义是：关闭matlab后丢失</p><h4 id="2-软件中的基本概念"><strong>2.软件中的基本概念</strong></h4><h5 id="2-1-函数"><strong>2.1 函数</strong></h5><p>matlab之所以强大，就是因为提供大量的函数，你也可以建立自定义函数，方法是：Home-&gt;New-&gt;function。自定义函数一般保存在工作路径下。函数文件的特征是：扩展名m，内容的第一行以function开头，后续内容是“输出变量=函数名(输入变量)”。且函数名和文件名相同。<br>每个函数在Command Window中运行，用来完成特定的计算任务，运行方式是输入“输出变量=函数名(输入变量)”，然后按回车。例如有个系统自带的函数是用来求绝对值的，函数名abs，所以在Command Window里输入“a=abs(-1)”，就会显示运算结果为“a=1”。且运算结果会在Workspace里出现一个变量a，双击后可看到a的值是1。</p><h5 id="2-2-脚本"><strong>2.2 脚本</strong></h5><p>可以理解为特殊的函数，这种函数内容的开头没有function那行，因此没有输入、输出变量，也没有函数名。文件扩展名和函数一样是m，也需要在Command Window里运行。脚本都是用户建立的，方法是：Home-&gt;New Script。一般保存在工作路径下。脚本的功能就是完成用户需要的、复杂的计算任务，通常脚本里会调用很多函数。</p><h5 id="2-3-gui"><strong>2.3 GUI</strong></h5><p>一般翻译为界面，就是人机交互界面的意思。写脚本处理问题的方法有点麻烦，让人看起来更像是码农，所以现在很多问题可以通过界面点点鼠标解决。这时候就需要打开界面，打开方法是：在APPS标签里可以找到所有已安装的GUI工具，单击即可。注意右边有个小三角可以点开。和函数一样，用户也可以自己建立自定义GUI，这部分较为复杂，对新手而言有点遥远。</p><h5 id="2-4-toolbox"><strong>2.4 toolbox</strong></h5><p>一般翻译成工具箱，matlab将功能相近或者应用上自成体系的一组函数和GUI打包成一个toolbox。正版的matlab在购买时，几乎每一个toolbox都是要单独收费的，所以toolbox也可以理解为matlab产品的模块，一个工具箱就是一个产品/商品。</p><h5 id="2-5-simulink-仿真"><strong>2.5 simulink</strong>（仿真）</h5><p>一般用matlab解决问题的过程是：用户自定义脚本，在Command Window里运行脚本。而脚本的运行逻辑是顺序执行，和一般的编程一样。simulink则提供另一种思路，图形化编程，有点像labview，这种方法很适合于物理模型的仿真，因此有时用“matlab编程”和“simulink仿真”强调。使用方法是在home标签下点击simulink。</p><h4 id="3-获得帮助"><strong>3.获得帮助</strong></h4><p>常用的获得帮助有四种方法<br>①home标签里，有个Help标志，点开后可以获得各工具箱/产品的完整帮助文档。新版本中默认使用在线，改用本地帮助的办法是在home标签里，Preferences下的matlab/Help里选择installed locally<br>②cn.mathworks.com官网上找到支持，然后可以获得教程。这种方法获得的帮助文档和第一种方法一样。<br>③在Command Window里输入 doc+函数名 来获得帮助。比如输入&quot;doc fft&quot;可以获得离散傅里叶变换函数fft的帮助和范例。这种方法获得的文档是前两种方法文档中的部分。当然，前提是你要知道函数名，才能找到帮助。这种方法适合于获得系统自带函数的使用说明。<br>④使用GUI时，通常界面的角落里有Help，点开可以获得帮助。这种方法获得的文档是第一和第二种方法文档中的部分。这种方法适合于获得系统自带GUI的使用说明。<br>这几种方法中，最常用的是第三种，只要知道自己需要的函数名，就可以用这种方式获得说明和范例。而实际使用中，一般常用的系统自带函数，也并不是非常多，大概几十个？真正需要牢记使用方法的可能就几个，通常都是知道函数名，要用的时候doc一下。</p><h3 id="matlab最基础教程-二-：变量类型与赋值"><strong>matlab最基础教程（二）：变量类型与赋值</strong></h3><p>前言：matlab解决问题的最基本思路是建立脚本文件，那么脚本文件的第一段就是定义一些变量，这和C语言等编程思想是一样的。matlab提供的变量类型很多，最基础的是三种：数值变量、符号变量、字符串，其他的类型还有cell、table等。这里仅说明最基础的变量类型。</p><h4 id="1-数值变量"><strong>1.数值变量</strong></h4><p>matlab中所有的数值变量都是矩阵，赋值时，以方括号作为开头和结尾，以英文逗号或空格分割同行元素，以英文分号分割各列。例如在Command Window里输入<br><strong>a=[1 2;3 4]</strong>* *可以看到运算结果，a是一个数值变量。同时workspace里出现一个田字形的变量a，说明变量a的类型是数值型。</p><p>向量和数字可以视为特殊的矩阵，例如</p><ol><li><strong>a=[1 2]</strong></li><li><strong>a=[1;2]</strong></li></ol><p>分别是行向量和列向量，<strong>a=[1]<strong>可以简写为<br><strong>a=1</strong> 是数字。<br>数值变量的命名要求是英文字母开头，不能包含特殊符号，大小写敏感。这里推荐采用下划线来进行分割，例如</strong>value_of_A</strong>，这和其他编程语言的命名规则大体相当。<br>赋值中，有时需要用到等差数列，例如定义一个向量<strong>a=[1 2 3]</strong>，如果比较长，赋值很麻烦，所以matlab提供了一个简单的方法<br>**a=[1:1:3]**这里两个冒号的意思是起始值:步长:终值。采用这种赋值方式时可以获得一个等差数列行向量，并可以省略两侧的方括号。当步长为1时，可以省略步长和一个冒号，于是可以简写为<br><strong>a=1:3</strong> 另一种灵活的赋值方法是分块矩阵，其方法是变量名后面加圆括号，圆括号中加序号。例如</p><ol><li><strong>a=[1 2;3 4]</strong></li></ol><p>定义变量a之后，<br><strong>b=a(1,2)</strong> 就可以把a的第一行第二列元素赋值给b，当然也可以用<br><strong>a(1,2)=1</strong> 来修改矩阵中部分元素的值。这里需要注意，序号必须是自然数，且不能是零。当矩阵中有多个元素需要赋值时，可以将序号部分改成向量，例如<br><strong>a([1 2],[1 2])=[1 2;3 4]</strong> 中把行数和列数都用向量表示，就是说对矩阵a的第1和2行，第1和2列，总共4个元素赋值。更进一步，也可以有**a([1 2],1)**表示a的第一列，也可以写成<br>**a(1:end,1)**这里的end表示终点，即a的行数2，也可以更进一步简写成<br>**a(:,1)**这里的冒号表示从头至尾。这类赋值方法最为常用，但基本的语法非常简单，方括号表示矩阵开头和结尾，圆括号表示从矩阵中选取部分，把握这个原则，有利于读懂程序。<br>当然分块矩阵也可以<br>**b=[a a]**这样的赋值方法，但需要注意的是，方括号中的元素必须满足矩阵的行列数要求，例如</p><ol><li><strong>a=[1 1]</strong></li><li><strong>b=[1;1]</strong></li><li><strong>c=[a b]</strong></li></ol><p>就会引起错误，因为此时matlab无法确定c的行列数。</p><h4 id="2-符号变量"><strong>2.符号变量</strong></h4><p>总体而言，符号变量比数值变量简单得多，因为变化非常少，常用的赋值命令是<br>syms a b这里syms表示这里要定义一些符号变量，a和b是变量名，符号变量的命名规则和数值变量一样。有时候也采用<br>syms a real来强调a是实数变量，具体可以doc syms来获得帮助。<br>有些变量之间存在依赖关系，此时可以定义<br>syms x y(x) 这里声明x是一个符号变量，又声明y是一个符号变量，且y的值由x决定，这相当于数学中函数的概念。当然具体的函数关系并没有明确规定。也可以<br>syms x y z(x,y)来定义符号变量z，z依赖x和y。这相当于二元函数的概念。这里的圆括号显然和数值变量中的圆括号含义完全不同，这也是学习matlab最不习惯的地方，同一个符号，由于变量类型不同会有完全不同的含义。所以在学习matlab的过程中，一定要区分数值变量和符号变量。<br>上述方法定义的符号变量是一个数，或者1*1矩阵，matlab中也可以定义符号矩阵，例如</p><ol><li><strong>syms a11 a12 a21 a22</strong></li><li><strong>A=[a11 a12;a21 a22]</strong></li></ol><p>就可以获得一个矩阵符号变量A。<br>定义符号变量后，workspace中出现相应的变量名，图形不是数值变量的田字形，而是方框里有个立方体，双击后可以看到行列数。</p><h4 id="3-字符串"><strong>3.字符串</strong></h4><p>比数值、符号更为简单的就是字符串了，其定义方法是以单引号开头和结尾，例如<br><strong>a='hello world’<strong>就定义了一个字符串</strong>a</strong>，其值为<strong>hello world</strong>。matlab中较为特殊的是，字符串可视为行向量，例如</p><ol><li><strong>b='hello '</strong></li><li><strong>c='world’</strong></li><li><strong>a=[b c]</strong></li></ol><p>也可以获得字符串a，其值为你好世界。另外，有时也可以将字符串视为矩阵，例如<strong>a=[‘ab’;‘cd’]<strong>但这种用法很罕见，同时要求各行字符串长度一样，否则将违反矩阵行列数规定。当然字符串的值也可以是特殊符号，比如’,'就定义了逗号，而最特殊的就是定义单引号，因为单引号会和字符串定义中的单引号混淆，因此matlab中用两个单引号表示一个单引号，也就是</strong>a=’’’'<strong>表示a是一个字符变量，值是一个单引号。语句中第一和第四个单引号是字符串类型的开头和结尾，中间两个单引号用来表示一个单引号。定义字符串变量后，workspace中出现相应的变量名，图像是方框里写了</strong>ch</strong>，双击后可以看到行列数。</p><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PWM与PFM</title>
      <link href="posts/aeef000a/"/>
      <url>posts/aeef000a/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span><h3 id="pwm-和-pfm">PWM 和 PFM</h3><p>PWM 不是用来调节开关式转换器输出电压的唯一技术。 这种技术不是通过改变固定频率方波的占空比来调节电源输出，而是采用恒定占空比，然后以调制方波频率方式来实现调节。 采用恒定导通和关断时间控制方式的 DC/DC 电压转换器是 PFM 架构的典型例子。</p><p>另外一个 PFM 例子就是所谓的滞后电压转换器。这种转换器采用一种简单调节方法，使 <a href="http://www.elecfans.com/tags/mosfet/">MOSFET</a> 能根据转换器检测到的输出电压变化导通和关断。 这种架构使输出电压在设定点左右往连续摆动，因此有时也称作“纹波稳压器”或“双滞环控制器”。 滞后作用用于保持预期运行，避免开关抖动。 因为滞后架构会根据<a href="http://www.hqpcb.com/">电路</a>的运行情况改变 MOSFET 的驱动信号，所以开关频率会改变。</p><p>PFM 架构在 DC/DC 转换方面确实拥有一定的优势，具体包括更优的低功耗转换效率、更低的总解决方案成本和简单的转换器拓扑结构，这种架构不需要控制环补偿网络，但由于一些明显的不足而不及 PWM 受欢迎。</p><p>首先是 EMI 控制。 相对于工作频率范围宽的器件，固定开关<a href="http://www.elecfans.com/tags/%E9%A2%91%E7%8E%87%E8%BD%AC%E6%8D%A2%E5%99%A8/">频率转换器</a>的滤波电路更易于设计。 第二，PFM 架构容易在输出端导致更大的电压纹波，进而给被供电的敏感性硅器件造成问题。 第三，低频（或甚至频率为零）的 PFM 会增加开关转换器的瞬态响应时间，导致一些便携式应用响应缓慢，引起客户不满。</p><p>然而，将 PWM 架构的优点与单晶片“双模式”开关转换器中的 PEM 器件的优点相结合，制造商能为我们提供在整个运行范围内具有高效率的解决方案。 与 PFM 有关的 EMI 问题已大大缓解，此类干扰的根本原因是高电流和高电压条件下的快速切换，反之，在双模式芯片中，仅在低电流和低电压运行时才会变频运行。</p><h4 id="开关稳压器中的能量损耗"><a href="http://www.elecfans.com/tags/%E5%BC%80%E5%85%B3%E7%A8%B3%E5%8E%8B%E5%99%A8/">开关稳压器</a>中的能量损耗</h4><p>最常见的开关设备调压技术是采用<a href="http://www.elecfans.com/tags/%E6%8C%AF%E8%8D%A1%E5%99%A8/">振荡器</a>和 PWM 控制器产生方形脉冲波， 这种方波会按照通常为数百兆赫兹范围内的一组频率，对装置的内部 MOSFET（或者同步设备中的 MOSFET）进行切换操作。 （如果不考虑更严重的电磁干扰 ［EMI］，就允许采用体积越小的<a href="http://www.hqchip.com/app/868">磁性元件</a>。） 稳压器的输出电压与 PWM 波形占空比成比例关系。</p><p>这种技术一般情况下运行良好，但低频时效率降低。 要了解其中原因，就需要考虑那里出现损耗，即稳压器输入端吸取的能量没有传输至输出端的负载。</p><p>开关稳压器有四大损耗源。 首先是对 MOSFET 栅极<a href="http://www.elecfans.com/tags/%E7%94%B5%E5%AE%B9/">电容</a>进行充放电所用的能量造成的动态损耗，这是<a href="http://www.elecfans.com/tags/%E6%99%B6%E4%BD%93%E7%AE%A1/">晶体管</a>高频运行时的最大损耗。 电流流经漏源通道且该通道上压差显著时发生开关损耗。 当功率开关元件的近零通道<a href="http://www.hqchip.com/app/dianzudianrongdiangan">电阻</a>流过高电流时，会出现其它 MOSFET 损耗。 （这就是功率元件制造商努力减小产品“导通电阻”的原因。）</p><p>除开关元件外，开关稳压器电路中的无源器件也容易出现低效率。 <a href="http://www.elecfans.com/tags/%E7%94%B5%E6%84%9F%E5%99%A8/">电感器</a>损耗包括导通（绕组中）损耗和<a href="http://www.hqchip.com/app/523">磁芯</a>损耗。 <a href="http://www.elecfans.com/tags/%E7%94%B5%E5%AE%B9%E5%99%A8/">电容器</a>损耗通常与元件的等效串联电阻 （ESR） 有关，并由器件的电容大小、运行频率和负载电流决定。</p><p>开关稳压器有两种实施方法。 工程师可以利用分立元件从零开始构建一个开关稳压器，或者在 <a href="http://www.elecfans.com/tags/te/">Te</a>xas Instruments、<a href="http://www.elecfans.com/tags/linear/">Linear</a> Technology 和 <a href="http://www.elecfans.com/tags/fairchild/">Fairchild</a> Semiconductor 等主要半导体供应商提供的许多种转换器 IC 中，为他们的电源选择一种，然后构建一个开关稳压器。 模块的优势在于其设计过程简化。 （请参见 TechZone 中的《DC/DC 稳压器：如何在分立式和<a href="http://www.hqchip.com/app/1022">模块化</a>设计之间选择》</p><p>然而，转换器 IC 本身会增加开关稳压器的总损耗。 例如， 一些能量需要为<a href="http://www.elecfans.com/tags/%E6%94%BE%E5%A4%A7%E5%99%A8/">放大器</a>、<a href="http://www.elecfans.com/tags/%E6%AF%94%E8%BE%83%E5%99%A8/">比较器</a>和基准提供内部偏置电流，但 IC 的主要损耗与 PWM 控制器的内部振荡器和驱动电路有关。 相对来讲，此类损耗在开关稳压器驱动高负载时不明显，但随着负载减小，与开关动作和外部无源器件有关的损耗会降低，而与转换器有关的损耗则保持不变。</p><p>这种情况有时会让便携式产品设计人员进退两难。 面临压力的工程师会想方设法控制<a href="http://www.elecfans.com/dianyuan/603907.html">电池</a>预算，因此选择一款高效率开关稳压器（如与<a href="http://www.elecfans.com/tags/%E7%BA%BF%E6%80%A7%E7%A8%B3%E5%8E%8B%E5%99%A8/">线性稳压器</a>比较）似乎是一种再明显不过的选择。 （参见 TechZone 中的《延长<a href="http://www.elecfans.com/d/725725.html">锂离子电池</a>续航时间的设计方法》） 然而，便携式产品在低功耗“待机”或“休眠”模式下时间相当长，其中，对开关转换器的要求则比较温和，且开关稳压器的运行效率相对较差。</p><p>典型的手持式设备在完全运行时的电流消耗约为 1 安培，但在待机或者休眠模式下则小于 1 毫安。 考虑到转换 IC 保持运行状态时就需消耗多达几个毫安的电流，低负载条件下的低转换效率会让人有些感到意外，因为稳压器总负载电流中相当大的一部分是静态电流。</p><h4 id="提升能效">提升能效</h4><p>为解决主要损耗问题（即与 PWM 控制器的内部振荡器和驱动电路有关的损耗），设计人员可在市面上的多种双模式开关转换器中选择一种。 这些器件融合了正常 PWM 运行功能 PFM 技术（在 PWM 模式下运行时，这种技术的可变频率通常远低于正常固定频率）</p><p>双模式开关转换器在中等到高电流之间运行时，进入连续导通模式（因此，<a href="http://m.elecfans.com/article/570177.html">电感</a>器中的电流永远不会降为零）。 负载电流减小时，转换器会切换至断续模式（当电感器中的电流由于轻负载确实降为零时）。 负载非常轻时，转换器进入 PFM（有时被制造商称作“省电模式 ［PSM］”）。 其他供应商会通过完全停止振荡器将变频运行的优势发挥到极致（通常指“脉冲跳跃”）。</p><p>应指出，低负载时使用 PFM 并不表示开关转换器使用了 PFM 架构，而是使用了能够在需要时利用 PFM 运行功能的 PWM 架构。</p><p>轻负载条件下，开关转换器的输出电容器能在开关脉冲的间隔时间内保持输出电压一段时间。 理想情况下，振荡器在空载时可完全关闭，且输出电压由于输出电容器的充满状态将保持恒定。 然而，寄生损耗会消耗电容器电能，且电路要求功率开关至少具有偶发脉冲，以保持调节过程中的稳压输出。</p><p>在 PFM 运行期间，输出功率与脉冲链的平均频率成比例，并且输出电压低于由反馈控制回路测得的设定输出电压时，转换器开始工作。 然后，转换器的开关频率持续升高，直到输出电压达到由设定输出电压和高于设定输出电压 0.8 - 1.5% 的电压值确定的范围内（如图 1 所示）。</p><p><a href="http://file.elecfans.com/web1/M00/82/EB/pIYBAFw-c7KAaus3AADJPAYucSU974.jpg"><img src="http://file.elecfans.com/web1/M00/82/EB/pIYBAFw-c7KAaus3AADJPAYucSU974.jpg" alt="PFM的工作原理、优势及集成功率芯片中实现PFM技术" loading="lazy"></a></p><p>图 1：PFM 改变稳压器的固定占空比脉冲链频率，以满足负载要求。</p><h4 id="pfm-操作的负面影响">PFM 操作的负面影响</h4><p>由于需要一个容差频带（非固定点）来检测功率开关何时再次导通，因此在开关转换器切换至 PFM 模式时能经常观察到输出电压纹波增加。 如采用较窄容差频带，转换器会提升开关频率，造成省电能力减弱。 工程师必须在提升低负载能效和提升输出电压纹波之间找到平衡点。 图 2a 和 2b 所示分别为 PWM 和 PFM 模式下的开关转换器运行时的电压纹波差异。</p><p><a href="http://file.elecfans.com/web1/M00/82/6C/o4YBAFw-c5GAc79YAAIuPMw78FE428.jpg"><img src="http://file.elecfans.com/web1/M00/82/6C/o4YBAFw-c5GAc79YAAIuPMw78FE428.jpg" alt="PFM的工作原理、优势及集成功率芯片中实现PFM技术" loading="lazy"></a></p><p>图 2：PWM 模式 （a） 和 PFM 运行 （b） 的电压纹波（感谢 Analog Devices 提供数据）。</p><p>在负载过渡期间，任何开关转换器都会在高负载向低负载过渡时出现某种程度的过冲，或者由低负载向高负载过渡时出现下冲。 转换器在 PSM 模式运行时，负载水平已很低，因此下一次负载过渡就是从低电流过渡到高电流（通常对应于由休眠向激活模式过渡）。 稳压器输出端的负载提升经常会造成持续“输出电压陷”，直至转换回路有时间对其做出响应。</p><p>一些开关转换器具有将这种电压陷降至最低的措施。 <a href="http://www.elecfans.com/tags/ti/">TI</a> 的 TPS62400 采用“动态电压定位”功能。 PSM 运行期间，输出电压设定点会稍有提升（如，提升 1%），以预计考虑负载突然升高时发生的即时电压瞬间下降。 这样会防止输出电压在初始负载过渡时跌落至所需的调节窗口以下。</p><p>一些器件还具有增强功能，可用于对良好瞬态响应（PWM 模式下最佳）和低功耗（PSM 模式下最佳）之间的所做的让步进行平衡。 这种增强功能是一种间歇模式，工程师可对瞬态响应比 PSM 具有更优、能效比 PWM 更高的转换器 IC 使用 I²C 指令来实现。 对于从高负载向如休眠模式之类轻负载转换的系统，这种中间模式是一种很好的选择。</p><h4 id="商业芯片中的-pfm">商业芯片中的 PFM</h4><p>低负载下的 PFM 运行能将 IC 静态电流从数个 mA 降至几个 μA。 图 3 所示为 TPS62400 开关转换器在 PWM 模式下运行时相比轻负载 PSM 的功率转换效率。</p><p><a href="http://file.elecfans.com/web1/M00/82/EB/pIYBAFw-c7SAfFq4AAIhNxQqQ3U328.jpg"><img src="http://file.elecfans.com/web1/M00/82/EB/pIYBAFw-c7SAfFq4AAIhNxQqQ3U328.jpg" alt="PFM的工作原理、优势及集成功率芯片中实现PFM技术" loading="lazy"></a></p><p>图 3：对 TI TPS62400 执行 PSM 时的能效提升。</p><p>由图 3 可知，尽管 PWM 模式能保持高于 100 mA 的良好能效，但采用 PSM 后能在负载电流低于 1 mA 的情况下将效率提升至 80 - 90% 之间。 如果转换器在如此轻的负载期间在 PWM 模式下运行，其运行电流将明显高于负载电流，从而造成非常差的转换效率（远低于 30%）。</p><p>Analog Devices 提供多种采用 PSM 的开关转换器。 进入这种模式时，PWM 稳压级导致的偏移使输出电压持续升高，直至达到比 PWM 稳压级高 1.5% 的值，在该点处，PWM 运行停止：两个功率开关均关断并进入空载模式。 在 VOUT 降至 PWM 稳压值前，允许电容器放电。 然后，转换器会驱动电感器，使 VOUT 再次上升至阈值上限。 只要负载电流低于 PSM 电流阈值，该过程就会重复。</p><p>公司的 TPS7A8300 稳压器采用 PSM，以便在 2.3 V 输入电压和 10 mA 输出电流条件下，将效率从 40% 提升至 75%。 该芯片是一款 3 MHz <a href="http://www.elecfans.com/tags/%E9%99%8D%E5%8E%8B%E8%BD%AC%E6%8D%A2%E5%99%A8/">降压转换器</a>，能在高达的 600 mA 的电流下利用 2.3 - 5.5 V 输入提供 3.3 V 输出。 图 4 所示为发生 PWM 和 PSM 转换的点。</p><p><a href="http://file.elecfans.com/web1/M00/82/6C/o4YBAFw-c5OAa0CsAAFY9jTo2Lk221.jpg"><img src="http://file.elecfans.com/web1/M00/82/6C/o4YBAFw-c5OAa0CsAAFY9jTo2Lk221.jpg" alt="PFM的工作原理、优势及集成功率芯片中实现PFM技术" loading="lazy"></a></p><p>图 4：Analog Devices <a href="https://dfm.elecfans.com/uploads/software/hqdfm.zip?neilian">AD</a>P2108 的 PWM 到 PSM 的阈值。</p><p>其他功率元件制造商也提供双模式开关转换器。 Linear Technology 提供 LTC3412A 器件，该器件具有能在低负载条件下提升效率的“猝发模式”和脉冲跳跃运行功能。 该芯片是一款降压转换器，能在高达 3 A 的电流下将 2.25 - 5.5 V 输入提升至 0.8 - 5 V 输出。</p><p>猝发模式是上文介绍的中间 PFM 技术的一个例子，它能在保持合理瞬态响应能力的同时提升效率。 例如：通过实施猝发模式，在 10 mA 输出电流（VIN 3.3 V、VOUT 2.5 V）下的效率将从 30% 提升至 90%。 LTC3412A 还包括一个传统的脉冲跳跃运行模式，能在轻负载时进一步减小开关损耗。</p><h4 id="延长电池寿命">延长电池寿命</h4><p>设计工程师需要延长便携设备中的电池寿命时，PWM 控制式开关转换器是一种大众化选择。 不过应当牢记，许多便携式产品在大部分时间内是处于低功耗的休眠模式的，只是在工作时点转换器才处于最小能效状态。 虽然对电池的要求较温和，但长时间电流累加在一起，电池寿命就会缩短。</p><p>通过采用具有 PWM 架构、但在低于某一负载阈值时仍可以实现 PFM 和 PSM 技术优势的转换器，设计人员可以在正常运行期间获得 PWM 优势，同时在在许多便携式设备处于空闲状态时，又能在很长时间内保持电池容量。</p><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>电机驱动模块-TB6612FNG</title>
      <link href="posts/78f126d1/"/>
      <url>posts/78f126d1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span><p>TB6612的用法<br>双驱动，也就是可以驱动两个电机。<br>STBY:接单片机的IO口，清零，电机全部停止。<br>置1，通过AIN1 AIN2,BIN1,BIN2来控制正反转<br>VM 接12V电源<br>VCC 接5V电源<br>GND 接地</p><p>驱动1路<br>PWMA 接单片机的PWM口<br>TB6612FNG每通道输出最高<strong>1A</strong>的连续驱动电流，启动峰值电流达2A／3A(连续脉冲／单脉冲)；4种电机控制模式：正转／反转／制动／停止；<strong>PWM支持频率高达100 kHz</strong>；待机状态；片内低压检测电路与热停机保护电路；工作温度：-20～85℃；SSOP24小型贴片封装。<br><img src="https://picyun.oss-cn-shanghai.aliyuncs.com/img/20220719130704.png" alt="" loading="lazy"><br>[刹车和自由停车有什么区别]</p><p><strong>刹车耗能，自由停车不耗能。刹车耗能来源于刹车片摩擦和电机制动，自由停车相当于断电。</strong><em>冥狐注</em></p><p><strong>TB6612FNG的主要引脚功能：</strong><br>(1)<strong>AINl／AIN2、BIN1／BIN2、PWMA／PWMB为控制信号输入端；</strong><br>(2)<strong>AO1／A02、B01／B02为2路电机控制输出端；</strong><br>(3)<strong>STBY为正常工作／待机状态控制引脚；</strong><br>(4)<strong>VM(3～13.5 V)和VCC(2．7～5．5 V)分别为电机驱动电压输入和逻辑电平输入端。</strong></p><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>电赛电工指导问题</title>
      <link href="posts/19479d3b/"/>
      <url>posts/19479d3b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span><h3 id="问题">问题</h3><h4 id="第一章">第一章</h4><ul><li>1．指针式万用表的测量电路有哪几部分?各有什么功能?</li><li>2．指针式万用表表头内阻Rg、等效内阻R’g，各为什么含义?</li><li>3．如何理解“反比分流”?VOM是怎样运用“反比分流“的?</li><li>4．为什么说“万用表的等效内阻愈大、电压测量的精度愈高”；而“万用表的等效内阻愈小，电流测量的误差愈小”?</li><li>5．指针式万用表的表头刻度盘上所标符号“KO／V”是什么意思?</li><li>6．如何理解万用表的“机械调零”与“电气调零”?二者有何不同?</li><li>7．如何辨别数字万用表的“位”数?</li><li><ol start="8"><li>数字万用表测量电路包括哪几部分?各有什么功能?</li></ol></li></ul><h4 id="第二章">第二章</h4><ul><li>1．为什么说380V／220V交流电是正弦波?</li><li>2．我国通用的低压供电的相电压UP、线电压Ul分别是多少伏?它们又是如何得出的?</li><li>3，三相负载星形连接，在什么情况下可无中线供电?</li><li>4．为什么说熔断器只能装在相线上，而不可装在中线上?</li><li>5．为什么要保护接地?保护接零?具体如何实施?</li><li>6．为什么三芯插座中工作零线端不能与保护零线端短接在一起?</li><li>7．低压自动空气开关的开与关是如何工作的?</li></ul><h4 id="第三章">第三章</h4><ul><li>1．在使用电阻器与电容器时，要注意哪些主要的质量参数?为什么?</li><li>2．几只电阻器串联总阻值会增大，而并联后总阻会减小，这是为什么？电阻器串、并联对电路电压与电流各起什么作用?</li><li>3．几只电容器的串联总容量会减小，而并联总容量会增加，这是为什么?</li><li>4．有些小功率的电源电路中，常采用电容器并联一个电阻器的降压电路，试说明电容器<br>与电阻器各起什么作用?</li><li>5．常见电位器的阻值变化规律有哪几种?在运用中应如何选用?</li><li>6.常用的特殊电阻有那些?各有什么特点?</li><li>7．常用的电感线圈有哪些?应注意哪些使用知识?</li><li>8．变压器怎样变换电压、电流、阻抗?</li><li>9．设计一只稳压电源的电源变压器，要求原边电压为220V50Hz，副边为15V/2A、7V/5A。</li></ul><h4 id="第四章">第四章</h4><ul><li>1．二极管正向运用与反向运用的等效电路有何不同?</li><li>2．二极管的电气参数IDM、URM、IRM、fM各有何含义?</li><li>3．整流二极管不适宜用于检波，检波二极管通常不用于整流，这是为什么?</li><li>4．如何用万用表检测二极管的质量?</li><li>5．为什么说普通二极管工作时要远离反向击穿区，稳压二极管却要工作在反向击穿区?</li><li>6．普通发光二极管通常有哪几种驱动方式?</li><li>7．光耦合器有哪几种结构形式?它是怎样耦合信号的?</li><li>8．三极管有哪几种偏置电路？应当如何安置三极管的截止态、放大态及饱和态?</li><li>9．如何识别三极管的共射极电路、共集电极电路、共基极电路这三种电路各有什么突出特点</li><li>10.如何用万用表判别三极管的管脚，估测三极管的穿透电流ICEO及电流放大系数 ？</li><li>11.大功率达林顿管为何要设置“泄放电阻”及“续流二极管”?</li><li>12.怎样用万用表判定场效应管、单向晶闸管、双向晶闸管的电极及其质量的好坏？</li></ul><h4 id="第五章">第五章</h4><ul><li>1．什么叫地线的共阻抗干扰?设计印制板时；应如何消除这种干扰7    ．</li><li>2．所谓电源干扰表现在哪些方面?设计印制板时，应采取哪些方法抑制这种干扰?</li><li>3．设计印制板图的元件排列方式一般有哪几种?各有什么特点?</li><li>4．印制板图的绘制，要注意些什么?</li><li>5．手工制作印制板有哪些步骤?</li></ul><h4 id="第六章">第六章</h4><ul><li>1．电烙铁由哪几部分组成?内热式与外热式有何区别?今有一支25W的电烙铁，其烙铁芯阻值为1936 ，这是怎样算出来的?</li><li>2．为什么新购来的电烙铁在第1次使用时，必须先对烙铁焊头镀锡?又是怎样进行镀锡的y</li><li>3，在焊接中，对元器件的安插、焊接工艺、焊点形状以及拆焊工序，各有什么具体要求?</li><li>4，何谓焊接“1—2—3”步骤？</li><li>5，工业生产中，有哪些主要的焊接方式？各有什么特点?</li></ul><h4 id="第七章">第七章</h4><ul><li>1．半导体集成电路中的二极管有哪几种连接方式?</li><li>2．半导体集成电路的引脚排列主要有哪些形式?如何识别?</li><li>3．半导体集成电路应用中应注意些什么?</li><li>4．555时基电路的内部结构与逻辑关系是怎样的?</li><li>5．试用555时基电路设计一个定时电路，其定时时间可在1—60秒内可调。</li></ul><h4 id="第八章">第八章</h4><ul><li>1.电子电路中，有哪些常用开关?何谓开关的极、位？</li><li>2.交流电磁继电器与直流电磁继电器在结构上有什么异同点?</li><li>3.如何测定电磁继电器的吸合电压、吸合电流、释放电压、释放电流?</li><li>4.电磁继电器使用中常有些什么附加电路?其作用如何?</li><li>5.固态继电器的电气结构包括哪些部分?各自有什么功能?</li></ul><h4 id="第九章">第九章</h4><ul><li>I，动卧式扬声器由哪几部分构成?在应用中要注意哪些主要参数y</li><li>2．怎样用万用表检测扬声器的质量?</li><li>3．动圈式传声器的作用原理及其结构与动圈式扬声器有何异同?</li><li>4．驻极体传声器由哪几部分构成?它在电路中常有哪几种连接方式?</li><li>5．怎样用万用电表测试驻极体传声器?</li><li>6．耳机与耳塞机按其阻抗分各有哪几种？如何用万用电表判别其极性与质量?</li></ul><h4 id="第十一章">第十一章</h4><ul><li>1．传感器一般由哪几部分组成?各部分有何功能?</li><li>2．负温度系数与正温度系数的热敏电阻，其电气特性各有何不同?怎样用万用表检测它们的质量?</li><li>3．压敏电阻为什么有过压保护功能?它有哪些主要参数？如何用万用表判断其质量?</li><li>4．光敏电阻、光敏二极管、光敏三极管有何异同点?怎样用万用表测试其质量y</li><li>5．光耦合器是怎样传输信号的?为什么说光藕合器的抗干扰能力强?</li><li>6．光耦合器是怎样实现“门电路”逻辑功能的?</li><li>7．气敏传感器由哪些部分构成?它的电气特性主要通过什么部件起作用</li><li>8.晶振的压电效应是怎样形成的?它有哪些重要特性?</li><li>9.晶振与陶瓷谐振元件各有哪些常见器件?</li><li>10.声表面波滤波器是怎样传递信号的?，</li><li>11．肖特基二极管的伏安特性与普通晶体二极管的伏安特性有什么不同?它有什么特殊<br>用途?</li></ul><h4 id="第十二章">第十二章</h4><ul><li>1．LED数码管是怎样组成的?所谓“共阳极”、“共阴极”管工作特点有何不同?</li><li>2．液晶显示器是怎样显示数码的?</li><li>3．LED数码显示电路与LCD数码显示电路各有哪几种驱动方法?它们是怎样工作的?</li><li>4．LCL103显示电路由哪几部分组成?各起什么作用?它们是怎样工作的?</li></ul><h4 id="第十三章">第十三章</h4><ul><li>1．AC／DC电路一般由哪几部分组成?各起什么作用？</li><li>2．常见的三端式稳压电路有哪些?图13.9与13.10的典型应用电路中，其输入端与输出端</li><li>为什么要在大容量电容器旁并联一个小容量的电容器?</li><li>3．降压式DC／DC变换器是怎样工作的？</li><li>4．升压式DC/DC变挟器是怎样工作的y在图13．12典型应用电路中，二极管D为什么要选用肖特基二极管？</li><li>5．电压反转式电路由哪些部分构成。它是如何实现电压反转的?</li><li>6．开关电源有哪几种类型?高频变压器式开关电源是如何实现稳压的?</li><li>7．小型密封铝蓄电池由哪几部分构成?它有哪些重要参数?如何保持蓄电池的容量?</li></ul><h4 id="第十四章">第十四章</h4><ul><li>1．直流稳压电源由哪几部分组成?各有什么功能?</li><li>2．为什么交流毫伏表会出现所谓“打表针”现象?</li><li>3．为什么示波器的y轴衰减器及探头中的衰减器要采用阻容分压而不是纯阻分压?</li><li>4．何谓示波器的扫描“同步”?为什么要同步?</li><li>5．双踪示波器的“交替”和“断续”工作方式是何含义?为什么说，在观测低频信号时宜用断续”方式，而在观测高频信号时宜用“交替”方式?</li><li>6．信号发生器的结构主要包括哪几部分?函数信号发生器在结构上有何特点?</li><li>7．电子计数器测频，测周的原理有何异同点？</li><li>8．何谓计数器的±1误差?为了提高测频、测周的准确度，应如何减小土1误差?</li></ul><h3 id="部分解答">部分解答</h3><ul><li><p>1.1</p><p>A、测直流电流原理</p><p>如图A所示，在表头上并联一个适当的电阻（叫分流电阻）进行分流，就可以扩展电流量程。改变分流电阻的阻值，就能改变电流测量范围。</p><p>B、测直流电压原理</p><p>如图B所示，在表头上串联一个适当的电阻（叫倍增电阻）进行降压，就可以扩展电压量程。改变倍增电阻的阻值，就能改变电压的测量范围。</p><p>C、测交流电压原理</p><p>如图C所示，因为表头是直流表，所以测量交流时，需加装一个并、串式半波整流电路，将交流进行整流变成直流后再通过表头，这样就可以根据直流电的大小来测量交流电压。扩展交流电压量程的方法与直流电压量程相似。</p><p>D、测电阻原理</p><p>如图D所示，在表头上并联和串联适当的电阻，同时串接一节电池，使电流通过被测电阻，根据电流的大小，就可测量出电阻值。改变分流电阻的阻值，就能改变电阻的量程。</p><p><img src="https://i.loli.net/2021/05/22/3xTZEvNbhs24Rfp.png" alt="o4YBAFphshSAfN6zAADr4-7kO-4153" loading="lazy"></p></li></ul><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 电赛 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>在openmv中画图</title>
      <link href="posts/c030c78a/"/>
      <url>posts/c030c78a/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span><h4 id="画线">画线</h4><ul><li>image.draw_line(line_tuple, color=White) 在图像中画一条直线。<ul><li>line_tuple的格式是(x0, y0, x1, y1)，意思是(x0, y0)到(x1, y1)的直线。</li><li>颜色可以是灰度值(0-255)，或者是彩色值(r, g, b)的tupple。默认是白色</li></ul></li></ul><h4 id="画框">画框</h4><ul><li>image.draw_rectangle(rect_tuple, color=White) 在图像中画一个矩形框。<ul><li>rect_tuple 的格式是 (x, y, w, h)。</li></ul></li></ul><h4 id="画圆">画圆</h4><ul><li>image.draw_circle(x, y, radius, color=White) 在图像中画一个圆。<ul><li>x,y是圆心坐标</li><li>radius是圆的半径</li></ul></li></ul><h4 id="画十字">画十字</h4><ul><li>image.draw_cross(x, y, size=5, color=White) 在图像中画一个十字<ul><li>x,y是坐标</li><li>size是两侧的尺寸</li></ul></li></ul><h4 id="写字">写字</h4><ul><li>image.draw_string(x, y, text, color=White) 在图像中写字 8x10的像素<ul><li>x,y是坐标。使用\n, \r, and \r\n会使光标移动到下一行。</li><li>text是要写的字符串。</li></ul></li></ul><h4 id="圆十字瞄准镜例程-qvga类型摄像头">圆十字瞄准镜例程（qvga类型摄像头）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sensor, image, time</span><br><span class="line"></span><br><span class="line">sensor.reset() <span class="comment"># 初始化摄像头</span></span><br><span class="line">sensor.set_pixformat(sensor.RGB565) <span class="comment"># 格式为 RGB565.</span></span><br><span class="line">sensor.set_framesize(sensor.QVGA)</span><br><span class="line">sensor.skip_frames(<span class="number">10</span>) <span class="comment"># 跳过10帧，使新设置生效</span></span><br><span class="line">sensor.set_hmirror(<span class="literal">True</span>)</span><br><span class="line">sensor.set_vflip(<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">    img = sensor.snapshot()         <span class="comment"># Take a picture and return the image.</span></span><br><span class="line">    img.draw_line((<span class="number">155</span>, <span class="number">115</span>, <span class="number">160</span>, <span class="number">120</span>),color=(<span class="number">155</span>,<span class="number">255</span>,<span class="number">255</span>))</span><br><span class="line">    img.draw_line((<span class="number">160</span>, <span class="number">120</span>, <span class="number">165</span>, <span class="number">115</span>), color=(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    img.draw_rectangle((<span class="number">145</span>, <span class="number">105</span>, <span class="number">30</span>, <span class="number">30</span>), color=(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    img.draw_circle(<span class="number">160</span>, <span class="number">120</span>, <span class="number">15</span>)</span><br><span class="line">    img.draw_cross(<span class="number">160</span>,<span class="number">120</span>,size=<span class="number">15</span>)</span><br><span class="line">    img.draw_string(<span class="number">140</span>,<span class="number">135</span>, <span class="string">&quot;Target&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#引入感光元件的模块</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sensor, image, time</span><br><span class="line"></span><br><span class="line">sensor.reset()                      <span class="comment"># 初始化元器件</span></span><br><span class="line">sensor.set_pixformat(sensor.RGB565) <span class="comment"># 设置为彩色</span></span><br><span class="line"><span class="comment">#设置翻转</span></span><br><span class="line"><span class="comment">#水平方向翻转</span></span><br><span class="line">sensor.set_hmirror(<span class="literal">True</span>)</span><br><span class="line">sensor.set_vflip(<span class="literal">True</span>)</span><br><span class="line"><span class="comment">#垂直方向翻转</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置图像大小</span></span><br><span class="line">sensor.set_framesize(sensor.QVGA)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sensor.skip_frames(time = <span class="number">2000</span>)     <span class="comment"># #跳过n张照片，在更改设置后，跳过一些帧，等待感光元件变稳定。</span></span><br><span class="line">clock = time.clock()                <span class="comment"># Create a clock object to track the FPS.</span></span><br><span class="line"></span><br><span class="line">sensor.set_auto_gain(<span class="literal">False</span>) <span class="comment">#自动增益开启（True）或者关闭（False）。在使用颜色追踪时，需要关闭自动增益。</span></span><br><span class="line"></span><br><span class="line">sensor.set_auto_whitebal(<span class="literal">False</span>) <span class="comment">#自动白平衡开启（True）或者关闭（False）。在使用颜色追踪时，需要关闭自动白平衡。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">    img = sensor.snapshot()         <span class="comment"># Take a picture and return the image.</span></span><br><span class="line">    img.draw_line((<span class="number">145</span>, <span class="number">105</span>, <span class="number">160</span>, <span class="number">120</span>))</span><br><span class="line">    img.draw_line((<span class="number">175</span>, <span class="number">105</span>, <span class="number">160</span>, <span class="number">120</span>), color=(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    img.draw_rectangle((<span class="number">145</span>, <span class="number">105</span>, <span class="number">30</span>, <span class="number">30</span>), color=(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    img.draw_circle(<span class="number">160</span>, <span class="number">120</span>, <span class="number">15</span>)</span><br><span class="line">    img.draw_cross(<span class="number">160</span>,<span class="number">120</span>,size=<span class="number">15</span>)</span><br><span class="line">    img.draw_string(<span class="number">140</span>,<span class="number">140</span>, <span class="string">&quot;Target！&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>需要其他样式的话，根据代码和注释魔改即可。</p><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> openmv </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openmv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maths</title>
      <link href="posts/d20bfa26/"/>
      <url>posts/d20bfa26/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>  记录一下一些数学公式以及md写法的表达 </center><span id="more"></span><h4 id="老经典的希腊字母：">老经典的希腊字母：</h4><table><thead><tr><th style="text-align:center">显示</th><th style="text-align:center">命令</th><th style="text-align:center">显示</th><th style="text-align:center">命令</th></tr></thead><tbody><tr><td style="text-align:center">α</td><td style="text-align:center">\alpha</td><td style="text-align:center">β</td><td style="text-align:center">\beta</td></tr><tr><td style="text-align:center">γ</td><td style="text-align:center">\gamma</td><td style="text-align:center">δ</td><td style="text-align:center">\delta</td></tr><tr><td style="text-align:center">ε</td><td style="text-align:center">\epsilon</td><td style="text-align:center">ζ</td><td style="text-align:center">\zeta</td></tr><tr><td style="text-align:center">η</td><td style="text-align:center">\eta</td><td style="text-align:center">θ</td><td style="text-align:center">\theta</td></tr><tr><td style="text-align:center">ι</td><td style="text-align:center">\iota</td><td style="text-align:center">κ</td><td style="text-align:center">\kappa</td></tr><tr><td style="text-align:center">λ</td><td style="text-align:center">\lambda</td><td style="text-align:center">μ</td><td style="text-align:center">\mu</td></tr><tr><td style="text-align:center">ν</td><td style="text-align:center">\nu</td><td style="text-align:center">ξ</td><td style="text-align:center">\xi</td></tr><tr><td style="text-align:center">π</td><td style="text-align:center">\pi</td><td style="text-align:center">ρ</td><td style="text-align:center">\rho</td></tr><tr><td style="text-align:center">σ</td><td style="text-align:center">\sigma</td><td style="text-align:center">τ</td><td style="text-align:center">\tau</td></tr><tr><td style="text-align:center">υ</td><td style="text-align:center">\upsilon</td><td style="text-align:center">φ</td><td style="text-align:center">\phi</td></tr><tr><td style="text-align:center">χ</td><td style="text-align:center">\chi</td><td style="text-align:center">ψ</td><td style="text-align:center">\psi</td></tr><tr><td style="text-align:center">ω</td><td style="text-align:center">\omega</td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><h4 id="上标和下标">上标和下标</h4><ul><li>上标：<code>^</code></li><li>下标：<code>_</code></li></ul><p>例如C_n^2   显示为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>C</mi><mi>n</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">C_n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></p><h4 id="矢量">矢量</h4><p>\vec表示为矢量 \vec a 显示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>a</mi><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.714em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault">a</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span></p><p>多个字母矢量用\overrightarrow例如：\overrightarrow{xy} 显示为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>x</mi><mi>y</mi></mrow><mo stretchy="true">→</mo></mover></mrow><annotation encoding="application/x-tex">\overrightarrow{xy}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.147em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9525600000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span></p><h4 id="分类分组">分类分组</h4><p>例如10^{10+x} 显示为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mrow><mn>10</mn><mo>+</mo><mi>x</mi></mrow></msup></mrow><annotation encoding="application/x-tex">10^{10+x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span></span></p><h4 id="计算符号">计算符号</h4><p>求和 \sum_x^6{a^i}  显示为：$\sum_x^6{a^i} $</p><p>极限 \lim_{x\to 0}   显示为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>x</mi><mo>→</mo><mn>0</mn></mrow></msub></mrow><annotation encoding="application/x-tex">\lim_{x\to 0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">→</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>无穷 \infty  显示为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">∞</span></span></span></span></p><p>积分\int  显示为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∫</mo></mrow><annotation encoding="application/x-tex">\int</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.11112em;vertical-align:-0.30612em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span></span></span></span></p><p>分式 ：\frac{分式1} {分式2} 显示为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mtext>分式</mtext><mn>1</mn></mrow><mrow><mtext>分式</mtext><mn>2</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{分式1} {分式2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">分</span><span class="mord cjk_fallback mtight">式</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">分</span><span class="mord cjk_fallback mtight">式</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>根式： \sqrt [x] {y} 显示为：$  \sqrt [x] {y}$</p><h4 id="其他符号">其他符号</h4><p><img src="https://i.loli.net/2021/05/20/VBERxCQogkrAmea.png" alt="" loading="lazy"></p><h4 id="矩阵">矩阵</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$$</span>\<span class="keyword">begin</span>&#123;matrix&#125;</span><br><span class="line"><span class="number">1</span>&amp;<span class="number">0</span>&amp;<span class="number">0</span>\\</span><br><span class="line"><span class="number">0</span>&amp;<span class="number">1</span>&amp;<span class="number">0</span>\\</span><br><span class="line"><span class="number">0</span>&amp;<span class="number">0</span>&amp;<span class="number">1</span>\\</span><br><span class="line">\<span class="keyword">end</span>&#123;matrix&#125;<span class="variable">$$</span></span><br></pre></td></tr></table></figure><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{matrix}1&amp;0&amp;0\\0&amp;1&amp;0\\0&amp;0&amp;1\\\end{matrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.6000000000000005em;vertical-align:-1.5500000000000007em;"></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$$</span>\<span class="keyword">begin</span>&#123;bmatrix&#125;</span><br><span class="line">&#123;a_&#123;<span class="number">11</span>&#125;&#125;&amp;&#123;a_&#123;<span class="number">12</span>&#125;&#125;&amp;&#123;\cdots&#125;&amp;&#123;a_&#123;1n&#125;&#125;\\</span><br><span class="line">&#123;a_&#123;<span class="number">21</span>&#125;&#125;&amp;&#123;a_&#123;<span class="number">22</span>&#125;&#125;&amp;&#123;\cdots&#125;&amp;&#123;a_&#123;2n&#125;&#125;\\</span><br><span class="line">&#123;\vdots&#125;&amp;&#123;\vdots&#125;&amp;&#123;\ddots&#125;&amp;&#123;\vdots&#125;\\</span><br><span class="line">&#123;a_&#123;m1&#125;&#125;&amp;&#123;a_&#123;m2&#125;&#125;&amp;&#123;\cdots&#125;&amp;&#123;a_&#123;mn&#125;&#125;\\</span><br><span class="line">\<span class="keyword">end</span>&#123;bmatrix&#125;<span class="variable">$$</span></span><br></pre></td></tr></table></figure><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>11</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>12</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mn>1</mn><mi>n</mi></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>21</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>22</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mn>2</mn><mi>n</mi></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋱</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mi>m</mi><mn>1</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mi>m</mi><mn>2</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mi>m</mi><mi>n</mi></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix}{a_{11}}&amp;{a_{12}}&amp;{\cdots}&amp;{a_{1n}}\\{a_{21}}&amp;{a_{22}}&amp;{\cdots}&amp;{a_{2n}}\\{\vdots}&amp;{\vdots}&amp;{\ddots}&amp;{\vdots}\\{a_{m1}}&amp;{a_{m2}}&amp;{\cdots}&amp;{a_{mn}}\\\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.459999999999999em;vertical-align:-2.4799999999999995em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.953995em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.4999850000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.0959850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.6919850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.712975em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.953995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.7674999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span></span><span style="top:-1.5675000000000006em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.7674999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span></span><span style="top:-1.5675000000000006em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.64em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="mord"><span class="minner">⋯</span></span></span></span><span style="top:-4.44em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="mord"><span class="minner">⋯</span></span></span></span><span style="top:-2.5799999999999996em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="mord"><span class="minner">⋱</span></span></span></span><span style="top:-1.3800000000000006em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="mord"><span class="minner">⋯</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.7674999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span></span><span style="top:-1.5675000000000006em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.953995em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.4999850000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.0959850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.6919850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.712975em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.953995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$$\begin&#123;array&#125;&#123;c<span class="operator">|</span>lll&#125;</span><br><span class="line">&#123;<span class="operator">↓</span>&#125;<span class="operator">&amp;</span>&#123;a&#125;<span class="operator">&amp;</span>&#123;b&#125;<span class="operator">&amp;</span>&#123;c&#125;\\</span><br><span class="line">\hline</span><br><span class="line">&#123;<span class="type">R_1</span>&#125;<span class="operator">&amp;</span>&#123;c&#125;<span class="operator">&amp;</span>&#123;b&#125;<span class="operator">&amp;</span>&#123;a&#125;\\</span><br><span class="line">&#123;<span class="type">R_2</span>&#125;<span class="operator">&amp;</span>&#123;b&#125;<span class="operator">&amp;</span>&#123;c&#125;<span class="operator">&amp;</span>&#123;c&#125;\\</span><br><span class="line">\end&#123;array&#125;$$</span><br></pre></td></tr></table></figure><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="center left left left" columnlines="solid none none" columnspacing="1em" rowlines="solid none"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">↓</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>R</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>R</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{c|lll}{↓}&amp;{a}&amp;{b}&amp;{c}\\\hline{R_1}&amp;{c}&amp;{b}&amp;{a}\\{R_2}&amp;{b}&amp;{c}&amp;{c}\\\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.6000000000000005em;vertical-align:-1.5500000000000007em;"></span><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:4.05em;"></span><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mrel">↓</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="vertical-separator" style="height:3.6em;border-right-width:0.04em;border-right-style:solid;margin:0 -0.02em;vertical-align:-1.5500000000000003em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">c</span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">b</span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">c</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span style="top:-4.8999999999999995em;"><span class="pstrut" style="height:4.05em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span></span></span></p><h4 id="方程">方程</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$$\begin&#123;cases&#125;</span><br><span class="line">a_1x+b_1y+c_1z=d_1\\</span><br><span class="line">a_2x+b_2y+c_2z=d_2\\</span><br><span class="line">a_3x+b_3y+c_3z=d_3\\</span><br><span class="line">\end&#123;cases&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub><mi>y</mi><mo>+</mo><msub><mi>c</mi><mn>1</mn></msub><mi>z</mi><mo>=</mo><msub><mi>d</mi><mn>1</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>2</mn></msub><mi>x</mi><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub><mi>y</mi><mo>+</mo><msub><mi>c</mi><mn>2</mn></msub><mi>z</mi><mo>=</mo><msub><mi>d</mi><mn>2</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>a</mi><mn>3</mn></msub><mi>x</mi><mo>+</mo><msub><mi>b</mi><mn>3</mn></msub><mi>y</mi><mo>+</mo><msub><mi>c</mi><mn>3</mn></msub><mi>z</mi><mo>=</mo><msub><mi>d</mi><mn>3</mn></msub></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}a_1x+b_1y+c_1z=d_1\\a_2x+b_2y+c_2z=d_2\\a_3x+b_3y+c_3z=d_3\\\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.9099999999999997em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.2950099999999996em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.30501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在孤独中茧变</title>
      <link href="posts/f36c2e7e/"/>
      <url>posts/f36c2e7e/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>人这一生，不论爱情如何美妙、世界如何精彩，孤独都是必须去面对和承担的永恒宿命，没有任何人任何事能够将它改变。毕竟，深究这个神奇的世界，本就是孤独的。在诞生宇宙之前一切都是孤独的，因为时间与空间没有意义，更没有生命，没有花鸟鱼虫，有的只有一片死沉沉的孤寂。终于有一天，宇宙受不了了，它爆发了，爆发的歇斯底里，以致于空间开始无限膨胀。但是，这也只是片刻的喧闹，它终究会冷静下来，再次陷入那死沉沉的孤寂，这一切都是注定的，这就是它的命运。世界如此，身为它的一部分，人更是如此。从一出生就注定了其必将湮灭，陪伴着宇宙母亲，一起陷入无穷尽的孤寂中，这谁也无法改变。</p><span id="more"></span><p>所以，朋友，孤独是你的终点，也是你的起点，这世界的一切都是始于孤独终于孤独。学会与它共处，而不是学着与它对抗。试想一下，这位自始至终陪伴我们的，一直陪伴在你身边的孤独，是朋友？还是敌人呢？其实，它更像一位旁观者，它制定了这一切的规则，而它不需要做什么，也不必做什么，只需在旁边欣赏自己的作品。朋友，这都是规则下的产物，没有人可以打破这个终极孤独的局面。我们能做的只有接受它。</p><p>生命，是个奇迹。对于这个世界来讲，生命就像被点燃了的绚丽烟花，窜上云霄，在片刻间火花绽放，又在片刻间冷寂。有人会思考，这一切有什么意义？朋友，对于时间来讲，人生，本就没有意义，一切都将成为过往的云烟。所谓的意义，就是人在不断的寻找意义，就是这个过程。人的一生就是在不断探寻意义的过程，不断认识自己的过程。但是朋友，人终将还是自己的陌生人。人们常踟蹰多年，仍然不知道，他们需要的只是一双可以依靠的臂膀，而并不是一个能读懂自己沉默的人。人总是像智者一样劝慰别人，像傻子一样折磨自己，但最终，还是不得不承认，自己仍然是自己的陌生人。</p><p>对生命而言，接纳才是最好的温柔，不论是接纳一个人的出现，还是，接纳一个人的从此不见。如果有一天你能接纳自己所有的曾经，那么你就找到了一条通往幸福的捷径。接纳别人往往不难，人最难的是接纳自己。人们往往将热枕抛向他人，却始终无法接纳自己。那些过往，那些时光，成为了一份沉重的包袱，始终压在了心头。世上的大部分人都背着太多的“放不下”，可是那些“放不下”会让你的步伐变慢，人生本是一场看不完的风景。陌生人啊，何不轻装上路，成就一个更丰富的自己。</p><p>孤独很强大，人也很强大。孤独制定了规则，而我们制造了bug。人，会成长、会变成熟、会变世故、会变老。但是，心，不会变。即使孤独伴随着时间将你的内心刻满痕迹，它也无法改变你的心。人心不变，一切皆可期。哪怕过着最苦难的生活，也不要忘了你的心，那里留存着这个世界上最宝贵的礼物——梦想！要知道，倔强是时光在心上留下的茧，厚厚的孤独，让你变得更坚强！</p><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 文章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>柯西积分公式</title>
      <link href="posts/29abfbc/"/>
      <url>posts/29abfbc/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><iframe id="b" class="b video_pc"         src="https://xbeibeix.com/api/bilibili/biliplayer/?url=https://www.bilibili.com/video/BV1uA411j7jA?from=search&seid=8534947394227717108" frameborder="0"framespacing="0"allowfullscreen="true"style="position: middle;width="100%" height="600" controls="controls" autoplay="autoplay"quality="high"></video>></iframe><span id="more"></span><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
            <tag> 复变函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个简单的总结</title>
      <link href="posts/10b2113f/"/>
      <url>posts/10b2113f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>你被骗了</title>
      <link href="posts/be7a8f00/"/>
      <url>posts/be7a8f00/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p><img src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/img/20210920202843.png" alt="" loading="lazy"></p><span id="more"></span><iframe id="b" class="b video_pc" src="https://xbeibeix.com/api/bilibili/biliplayer/?url=https://www.bilibili.com/video/BV1GJ411x7h7/?spm_id_from=333.788.recommend_more_video.-1" frameborder="0"framespacing="0"allowfullscreen="true"style="position: middle;width="100%" height="600" controls="controls" autoplay="autoplay"quality="high"></video>></iframe><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> fun </category>
          
      </categories>
      
      
        <tags>
            
            <tag> fun </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>boot的烧写</title>
      <link href="posts/fd45d1aa/"/>
      <url>posts/fd45d1aa/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span><h3 id="使用其他arduino板-烧写">使用其他Arduino板 烧写</h3><p>使用我们可以正常使用的Arduino 开发板也可作为烧写器给单片机芯片烧写BootLoader。在手上并没有如上2种方法的烧写/下载器等工具的时候，我们可以采用该种方法来完成Arduino BootLoader 的烧写。</p><p>在这里我们采用一块Arduino UNO 开发板作为烧写器对待烧写单片机进行Arduino BootLoader 的烧写。</p><h4 id="1-连接方式">（1）连接方式</h4><p>将Arduino 的 数字11、12、13引脚对应与待烧写的数字11、12、13引脚相连，UNO 的10号引脚连接到待烧写的RESET引脚上，并将UNO 板上的5V、GND接口与待烧写板的5V、GND分别相连。</p><p><em>也有说法称，当被烧写的电路板或对应最小系统电路为Arduino UNO 时，需要使用一个10uf的电容连接待烧写电路板的reset和GND。笔者未进行实验。</em></p><table><thead><tr><th>作为烧写器的Arduino UNO 板</th><th>待烧写单片机芯片/电路板</th></tr></thead><tbody><tr><td>D10</td><td>RESET</td></tr><tr><td>D11</td><td>D11</td></tr><tr><td>D12</td><td>D12</td></tr><tr><td>D13</td><td>D13</td></tr><tr><td>5V</td><td>5V</td></tr><tr><td>GND</td><td>GND</td></tr></tbody></table><h4 id="2-烧写arduinoisp固件">（2）烧写ArduinoISP固件</h4><p>1.将作为烧写器的Arduino UNO板通过USB线连接到电脑，打开Arduino IDE 。</p><p>2.选择并设置好开发板型号、处理器及COM口。（注意要选择的型号为作为烧写器的Arduino 型号）</p><p>3.在工具栏选择-&gt;文件-&gt;示例-&gt;11.Arduino ISP-&gt;ArduinoISP，打开ArduinoISP程序，编译（验证）、上传到开发板中。<br><img src="https://arduino.nxez.com/wp-content/uploads/2018/08/20180827224328520.png" alt="img" loading="lazy"></p><h4 id="3-bootloader烧写">（3）BootLoader烧写</h4><p>1.在在工具栏选择-&gt;工具-&gt;开发板型号，选择待烧写的Arduino型号。在工具-&gt;处理器，选择正确的处理器型号。</p><p>2.在工具-&gt;编译器 中，选择Arduino as ISP。</p><p><img src="https://arduino.nxez.com/wp-content/uploads/2018/08/20180827224328881.png" alt="img" loading="lazy"><br>3.点击 工具-&gt;烧录引导程序，等待下方提示烧录成功。</p><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> arduino </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编语言学习</title>
      <link href="posts/4f95e9f6/"/>
      <url>posts/4f95e9f6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 汇编语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇编语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些想法</title>
      <link href="posts/2556b57a/"/>
      <url>posts/2556b57a/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>  都说人闲着的话能闲出来毛病，我为啥一闲下来就有一些奇怪的想法。。。。 </center><span id="more"></span><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">背景音乐:</span><br><span class="line">【呐呐呐——镜音；初音】</span><br></pre></td></tr></table></figure><audio id="audio" controls="" preload="none"><source id="mp3" src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/music/%E3%80%90%E9%8F%A1%E9%9F%B3%E3%83%AA%E3%83%B3%E3%83%BB%E5%88%9D%E9%9F%B3%E3%83%9F%E3%82%AF%E3%80%91%E5%91%90%E5%91%90%E5%91%90%E3%80%90%E3%83%94%E3%83%8E%E3%82%AD%E3%82%AA%E3%83%94%E3%83%BC%E3%80%91%20.mp3"></audio><h4 id="idea">IDEA</h4><h4 id="1-迷你打印机">1.迷你打印机</h4><p>虽然这个玩意早就有了，但是我还是想要搞一个。</p><p>原因：</p><p>之前需要写很多报告之类的东西，动不动就成千上万字，很难受。但是还tm不让打印，你说抄那玩意干啥?你又不看，我们抄下来也不过脑子，实验也是水一下，图个啥吧。起初我是想搞个之前网上很火的那种写字机来着（并且我也搞了）。</p><img src="https://i.loli.net/2021/04/17/4cvlsnkxWe8iLFJ.jpg" alt="雕刻机" style="zoom:67%;" / loading="lazy"><p>这个是半成品，再加个小舵机写字模块就行了，问题不大。但是这个玩意有个问题，就是写字太慢了，毕竟拿笔写哪里有直接印的快。</p><p>于是乎，做个小打印机的想法就出来了。就是那种扫描一下识别字体，然后修正成自己的字体，再打印出来的那种小玩意。但是仔细想想，这种东西好像也不适合偷懒写报告。<strong>BUT</strong>他是不是很适合做笔记呢？？？</p><p><strong>是不是？</strong></p><p>有时候，我们做笔记其实就是把课本上的照抄一下，是不是有点浪费时间，并且有的图表我们也是画不了太规范.使用工具进行绘制的话又太浪费时间。直接打印的话，还要编辑文档（word，cad啥的）然后只能打印到打印纸上，想弄到笔记上还要进行裁剪粘贴，时间都浪费了。如果有这样一个小玩意，扫描一下原文本就可以直接打印在我们的笔记上，岂不美哉。省了时间还不用裁剪之类的操作就可以把很多东西放到我们的笔记上（还是纸质的）。<strong>COOL!</strong></p><p>这个玩意太极客了，就是目前做不出来。。。。。</p><h4 id="2-还没想好名字">2.还没想好名字</h4><p>大概就是一种特殊的传输结构可以快速还原一些地形和形状，有点像我们玩的那种橡皮泥插上牙签的一个玩意。具体有啥用，还没想好，以后再加。</p><hr><p>下面的是一些别的大佬的玩具（真厉害），改天没事了复刻一个！</p><p><img src="https://i.loli.net/2021/04/17/VWwmqOoiHckdgvy.jpg" alt="2" style="zoom:67%;" / loading="lazy"><img src="https://i.loli.net/2021/04/17/lo8Xai92z1CjQdL.jpg" alt="3" style="zoom:67%;" / loading="lazy"></p><p>发现材料不够以后再复刻。</p><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> idea </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图床大升级——picgo</title>
      <link href="posts/91c893f/"/>
      <url>posts/91c893f/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center> 所以我使用了picgo  </center><span id="more"></span><h3 id="使用原因">使用原因</h3><p>之前的图片都是要打开网站，例如</p><p><img src="https://i.loli.net/2021/04/16/Ii28fB16ctFTVqU.png" alt="" loading="lazy"></p><p>然后手动上传，再打开之后复制链接，就像这样</p><img src="https://i.loli.net/2021/04/16/XZw2KBRjSHx6Idi.png" style="zoom: 67%;" / loading="lazy"><img src="https://i.loli.net/2021/04/16/Nn6O8ljI1rhiesc.png" style="zoom:67%;" / loading="lazy"><p>很麻烦，并且每次都要开开关关网页啦，编辑器啦</p><p>经过查询我用的markdown编辑器typora支持自动上传（芜湖起飞）</p><img src="https://i.loli.net/2021/04/16/7iBedgzM4LJs2T3.png" alt="Snipaste_2021-04-16_11-14-12" style="zoom:67%;" / loading="lazy"><p>于是乎就设置了一下，其实也很简单，去github下载picgo对应的版本然后注册图床账号，把接口放在picgo即可。剩下的就是点点鼠标的事情。</p><img src="https://i.loli.net/2021/04/16/xuHjwcayAzo2DSv.png" alt="picgo界面" style="zoom:67%;" / loading="lazy"><p><strong>真不戳！</strong></p><p>另外配合snipaste使用效果绝佳，因为snipaste有一个复制图片链接按键，picgo有一个快速上传的快捷键，两个相配合，绝了。甚至你可以自己搞个鼠标宏，一键解决。</p><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>学习资源网站</title>
      <link href="posts/a7bf6cfe/"/>
      <url>posts/a7bf6cfe/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span><p>一、国内学习资源<br>1、中国大学MOOC（有app） <a href="https://www.icourse163.org/">https://www.icourse163.org/</a><br>2、中国职教MOOC <a href="https://www.icourse163.org/vemooc">https://www.icourse163.org/vemooc</a><br>3、学堂在线（有app） <a href="https://www.xuetangx.com/">https://www.xuetangx.com/</a><br>4、网易公开课（有app） <a href="https://open.163.com/">https://open.163.com/</a><br>5、网易云课堂（有app） <a href="https://study.163.com/">https://study.163.com/</a><br>6、腾讯课堂（有app） <a href="https://ke.qq.com/">https://ke.qq.com/</a></p><p>二、国外学习资源<br>1、译学馆（有app） <a href="https://www.yxgapp.com/">https://www.yxgapp.com/</a><br>2、MIT Open Courseware <a href="https://ocw.mit.edu/">https://ocw.mit.edu/</a><br>3、edX（有app） <a href="https://www.edx.org/">https://www.edx.org/</a><br>4、coursera（有app） <a href="https://www.coursera.org/">https://www.coursera.org/</a><br>5、Udemy（有app） <a href="https://www.udemy.com/">https://www.udemy.com/</a></p><p>三、学习资源聚合平台<br>1、爱课程 <a href="https://www.icourses.cn/">https://www.icourses.cn/</a><br>2、Coursade <a href="http://www.coursade.com/">http://www.coursade.com/</a><br>3、MOOC中国 <a href="https://www.mooc.cn/">https://www.mooc.cn/</a><br>4、哔哩哔哩（有app） <a href="https://www.bilibili.com/">https://www.bilibili.com/</a></p><p>自媒体需求网站</p><p>1.视频片头动画模板 <a href="https://panzoid.com/">https://panzoid.com/</a><br>2.在线抠图 <a href="https://www.remove.bg/">https://www.remove.bg/</a><br>3.字体下载 <a href="https://www.zitijia.com/">https://www.zitijia.com/</a><br>4.p站 （二次元插画网站） <a href="https://www.pixiv.net/">https://www.pixiv.net/</a><br>5.论文下载 <a href="https://www.cn-ki.net/">https://www.cn-ki.net/</a><br>6.文档格式在线转换 <a href="https://smallpdf.com/">https://smallpdf.com/</a><br>7.录屏投屏  <a href="http://web.airdroid.com/">http://web.airdroid.com/</a><br>8.各大网站热榜 <a href="https://tophub.today/">https://tophub.today/</a><br>9.超清图片壁纸 <a href="https://www.pexels.com/">https://www.pexels.com/</a><br>10.找网站的网站  <a href="http://www.addog.vip/">http://www.addog.vip/</a></p><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>自动控制原理(1)</title>
      <link href="posts/7a16e845/"/>
      <url>posts/7a16e845/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h3 id="学习重点">学习重点</h3><ul><li>了解自动控制系统的基本结构和特点及其工作原理；</li><li>了解闭环控制系统的组成和基本环节；</li><li>掌握反馈控制系统的基本要求及反馈控制系统的作用；</li><li>学会分析自动控制系统的类型及本质特征。</li></ul><h3 id="自动控制原理课程的性质和特点">自动控制原理课程的性质和特点</h3><p>自动控制是一门技术学科，从方法论的角度来研究控制系统的建立、分析与设计，《自动控制原理》是本学科的技术基础课。</p><span id="more"></span><h3 id="与其他课程的关系">与其他课程的关系</h3><p><a href="https://imgtu.com/i/6ZilIs"><img src="https://s3.ax1x.com/2021/03/04/6ZilIs.md.png" alt="6ZilIs.md.png" loading="lazy"></a></p><h3 id="开环控制系统和闭环控制系统">开环控制系统和闭环控制系统</h3><h4 id="自动控制">自动控制</h4><p>自动控制是在没有人的直接干预下，利用物理装置对生产设备和工艺过程进行合理的控制，使被控制的物理量保持恒定，或者按照一定的规律变化，例如矿井提升机的速度控制、轧钢厂加热炉温度的控制等等。</p><h4 id="自动控制系统">自动控制系统</h4><p>自动控制系统是为实现某一控制目标所需要的所有物理部件的有机组合体。</p><h4 id="开环控制系统">开环控制系统</h4><p><a href="https://imgtu.com/i/6ZFiOU"><img src="https://s3.ax1x.com/2021/03/04/6ZFiOU.png" alt="6ZFiOU.png" loading="lazy"></a></p><p><a href="https://imgtu.com/i/6ZFmf1"><img src="https://s3.ax1x.com/2021/03/04/6ZFmf1.png" alt="6ZFmf1.png" loading="lazy"></a></p><h4 id="开环控制">开环控制</h4><p>只有输入量对输出量产生控制作用，输出量不参与对系统的控制。</p><h4 id="开环控制特点">开环控制特点</h4><ul><li>输入控制输出－输入和输出之间存在对应关系；</li><li>信号传递时单方向的－输出不参与控制；</li><li>系统没有抗干扰能力。</li></ul><h3 id="闭环控制系统">闭环控制系统</h3><h4 id="人工闭环控制">人工闭环控制</h4><p><img src="https://s3.ax1x.com/2021/03/05/6eD0CF.png" alt="6eD0CF.png" loading="lazy"><em>图片来源于mooc</em></p><h4 id="自动闭环控制">自动闭环控制</h4><p><a href="https://imgtu.com/i/6eDcHx"><img src="https://s3.ax1x.com/2021/03/05/6eDcHx.png" alt="6eDcHx.png" loading="lazy"></a></p><p><a href="https://imgtu.com/i/6eDW4O"><img src="https://s3.ax1x.com/2021/03/05/6eDW4O.png" alt="6eDW4O.png" loading="lazy"></a></p><h4 id="闭环控制-反馈控制-偏差控制">闭环控制（反馈控制、偏差控制）</h4><p>把输出量的一部分检测出来，反馈到输入端，与给定信号进行比较，产生偏差，此偏差经过控制器产生<br>控制作用，使输出量按照要求的规律变化。反馈信号与给定信号极性相反为负反馈，反之为正反馈。</p><h4 id="闭环控制特点">闭环控制特点</h4><ul><li>输入控制输出－输入和输出之间存在对应关系；</li><li>信号传递是双方向的－输出参与控制；</li><li>检测与纠正偏差－具有抗干扰能力。</li></ul><h4 id="闭环控制系统中的基本术语">闭环控制系统中的基本术语</h4><ul><li><p>被控对象:要求实现自动控制的机器、设备或生产过程。</p></li><li><p>被控量或输出量:指被控对象中要求保持给定值、或按给定规律</p></li><li><p>控制量:使系统输出量达到应达到的数值（例如与要求的炉温对应的电压）。</p></li><li><p>扰动量:破坏系统输入量和输出量之间预定规律的信号。</p></li><li><p>反馈量</p></li><li><p>偏差量</p></li><li><p>前向通道或正向通道</p></li><li><p>反馈通道或反向通道</p></li><li><p>实际输出</p></li><li><p>理想输出</p><p><strong>闭环控制系统是《自动控制原理》研究的重点。</strong>(因为开环不好用，经常达不到要求)</p></li></ul><hr><center>END</center><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 自动控制原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动控制原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>English-listening-training_1</title>
      <link href="posts/d3eaa239/"/>
      <url>posts/d3eaa239/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>公民科学</title>
      <link href="posts/8fdbaa14/"/>
      <url>posts/8fdbaa14/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 视频 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Just 读 it ！</title>
      <link href="posts/1ae67c5b/"/>
      <url>posts/1ae67c5b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>   </center><span id="more"></span><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 视频 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何用markdown画图</title>
      <link href="posts/7f30ae8c/"/>
      <url>posts/7f30ae8c/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center> 有需要的话直接点击标题链接即可！  </center><span id="more"></span><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>一些语法的备忘录小本本</title>
      <link href="posts/30c2270c/"/>
      <url>posts/30c2270c/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>首先是最基本的语法<br><a href="https://www.runoob.com/markdown/md-tutorial.html">Markdown基本用法</a></p><p><em><span id="more"></span></em></p><h4 id="markdown-列表">Markdown 列表</h4><p>Markdown 支持有序列表和无序列表。</p><p>无序列表使用星号(<em><strong><strong>)、加号(</strong>+</strong>)或是减号(</em><em>-</em>*)作为列表标记，这些标记后面要添加一个空格，然后再填写内容：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> 第一项</span><br><span class="line"><span class="bullet">*</span> 第二项</span><br><span class="line"><span class="bullet">*</span> 第三项</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> 第一项</span><br><span class="line"><span class="bullet">+</span> 第二项</span><br><span class="line"><span class="bullet">+</span> 第三项</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 第一项</span><br><span class="line"><span class="bullet">-</span> 第二项</span><br><span class="line"><span class="bullet">-</span> 第三项</span><br></pre></td></tr></table></figure><p>显示结果如下：</p><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><p>有序列表使用数字并加上 <strong>.</strong> 号来表示，如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 第一项</span><br><span class="line"><span class="bullet">2.</span> 第二项</span><br><span class="line"><span class="bullet">3.</span> 第三项</span><br></pre></td></tr></table></figure><p>显示结果如下：</p><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol><h5 id="列表嵌套">列表嵌套</h5><p>列表嵌套只需在子列表中的选项前面添加四个空格即可：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 第一项：</span><br><span class="line"><span class="bullet">    -</span> 第一项嵌套的第一个元素</span><br><span class="line"><span class="bullet">    -</span> 第一项嵌套的第二个元素</span><br><span class="line"><span class="bullet">2.</span> 第二项：</span><br><span class="line"><span class="bullet">    -</span> 第二项嵌套的第一个元素</span><br><span class="line"><span class="bullet">    -</span> 第二项嵌套的第二个元素</span><br></pre></td></tr></table></figure><p>显示结果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/godmid/pic-for-cdn@main//img/202411261131436.png" alt="image-20241126113106400" loading="lazy"></p><h4 id="图片注释">图片注释</h4><p>你可以遵循如下写法来对图片进行注释。</p><p>markdown图片地址_注释</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">Audits - Lighthouse</span>](<span class="link">https://i.loli.net/2020/03/08/DhfLu5yngb7NZE2.png</span>)<span class="emphasis">_谷歌浏览器 Audits - Lighthouse 检测分数_</span></span><br></pre></td></tr></table></figure><h4 id="视频局部播放器插入方法之一">视频局部播放器插入方法之一</h4><p>利用了xbeibeix的api实现</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">&quot;b&quot;</span> <span class="attr">class</span>=<span class="string">&quot;b video_pc&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://xbeibeix.com/api/bilibili/biliplayer/?url=</span></span></span></span><br><span class="line"><span class="xml">https://www.bilibili.com/video/BV1RW411S7As/&quot; </span></span><br><span class="line"><span class="xml">frameborder=&quot;0&quot;</span></span><br><span class="line"><span class="xml">framespacing=&quot;0&quot;</span></span><br><span class="line"><span class="xml">allowfullscreen=&quot;true&quot;</span></span><br><span class="line"><span class="xml">style=&quot;position: middle;</span></span><br><span class="line"><span class="xml">width=&quot;100%&quot; </span></span><br><span class="line"><span class="xml">height=&quot;600&quot; </span></span><br><span class="line"><span class="xml">controls=&quot;controls&quot; </span></span><br><span class="line"><span class="xml">autoplay=&quot;autoplay&quot;</span></span><br><span class="line"><span class="xml">quality=&quot;high&quot;&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span>&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="视频全局化插入">视频全局化插入</h4><p>取消api的使用，其余语法一致</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">&quot;b&quot;</span> <span class="attr">class</span>=<span class="string">&quot;b video_pc&quot;</span> <span class="attr">src</span>=<span class="string">&quot;</span></span></span></span><br><span class="line"><span class="xml">https://www.bilibili.com/video/BV1RW411S7As/&quot; </span></span><br><span class="line"><span class="xml">frameborder=&quot;0&quot;</span></span><br><span class="line"><span class="xml">framespacing=&quot;0&quot;</span></span><br><span class="line"><span class="xml">allowfullscreen=&quot;true&quot;</span></span><br><span class="line"><span class="xml">style=&quot;position: middle;</span></span><br><span class="line"><span class="xml">width=&quot;100%&quot; </span></span><br><span class="line"><span class="xml">height=&quot;600&quot; </span></span><br><span class="line"><span class="xml">controls=&quot;controls&quot; </span></span><br><span class="line"><span class="xml">autoplay=&quot;autoplay&quot;</span></span><br><span class="line"><span class="xml">quality=&quot;high&quot;&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span>&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="新增草稿语法">新增草稿语法</h4><p>1、添加草稿：hexo new draft “xx”<br>2、预览草稿：hexo server --draft<br>3、发布草稿：hexo publish draft “xx”</p><h4 id="新增的tag-common语法">新增的tag-common语法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs First unique name %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line">**This is Tab 1.**</span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line">**This is Tab 2.**</span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line">**This is Tab 3.**</span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><div class="tag-common tabs" id="first-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#first-unique-name-1">First unique name 1</a></li><li class="tab"><a href="#first-unique-name-2">First unique name 2</a></li><li class="tab"><a href="#first-unique-name-3">First unique name 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="first-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="first-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="first-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div><h4 id="单元格语法">单元格语法</h4><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|  表头   | 表头  |</span><br><span class="line">|  ----  | ----  |</span><br><span class="line">| 单元格  | 单元格 |</span><br><span class="line">| 单元格  | 单元格 |</span><br></pre></td></tr></table></figure><p>实例</p><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 左对齐 | 右对齐 | 居中对齐 |</span><br><span class="line">| :-----| ----: | :----: |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">左对齐</th><th style="text-align:right">右对齐</th><th style="text-align:center">居中对齐</th></tr></thead><tbody><tr><td style="text-align:left">单元格</td><td style="text-align:right">单元格</td><td style="text-align:center">单元格</td></tr><tr><td style="text-align:left">单元格</td><td style="text-align:right">单元格</td><td style="text-align:center">单元格</td></tr></tbody></table><h4 id="markdown-高级技巧">Markdown 高级技巧</h4><h5 id="支持的-html-元素">支持的 HTML 元素</h5><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</p><p>目前支持的 HTML 元素有：<code>&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;</code>等 ，如：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用 <span class="xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>Ctrl<span class="xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span>+<span class="xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>Alt<span class="xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span>+<span class="xml"><span class="tag">&lt;<span class="name">kbd</span>&gt;</span></span>Del<span class="xml"><span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span> 重启电脑</span><br></pre></td></tr></table></figure><p>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p><p>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">\   反斜线</span><br><span class="line">&#96;   反引号</span><br><span class="line">*   星号</span><br><span class="line">_   下划线</span><br><span class="line">&#123;&#125;  花括号</span><br><span class="line">[]  方括号</span><br><span class="line">()  小括号</span><br><span class="line">#   井字号</span><br><span class="line">+   加号</span><br><span class="line">-   减号</span><br><span class="line">.   英文句点</span><br><span class="line">!   感叹号</span><br></pre></td></tr></table></figure><p>另外有的编辑器自带注入功能，更快</p><h4 id="公式">公式</h4><p>当你需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。提交后，问答和文章页会根据需要加载 Mathjax 对数学公式进行渲染。如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\mathbf&#123;V&#125;_1 \times \mathbf&#123;V&#125;_2 &#x3D;  \begin&#123;vmatrix&#125; </span><br><span class="line">\mathbf&#123;i&#125; &amp; \mathbf&#123;j&#125; &amp; \mathbf&#123;k&#125; \\</span><br><span class="line">\frac&#123;\partial X&#125;&#123;\partial u&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial u&#125; &amp; 0 \\</span><br><span class="line">\frac&#123;\partial X&#125;&#123;\partial v&#125; &amp;  \frac&#123;\partial Y&#125;&#123;\partial v&#125; &amp; 0 \\</span><br><span class="line">\end&#123;vmatrix&#125;</span><br><span class="line">$&#123;$tep1&#125;&#123;\style&#123;visibility:hidden&#125;&#123;(x+1)(x+1)&#125;&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>经过渲染后如下</p><p class='katex-block katex-error' title='ParseError: KaTeX parse error: Can&#039;t use function &#039;$&#039; in math mode at position 248: …\end{vmatrix}$̲{$tep1}{\style{…'>\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix} \mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \\\frac{\partial X}{\partial u} &amp;  \frac{\partial Y}{\partial u} &amp; 0 \\\frac{\partial X}{\partial v} &amp;  \frac{\partial Y}{\partial v} &amp; 0 \\\end{vmatrix}${$tep1}{\style{visibility:hidden}{(x+1)(x+1)}}</p><p><img src="https://cdn.jsdelivr.net/gh/godmid/pic-for-cdn@main//img/202411261132610.png" alt="image-20241126113225581" loading="lazy"></p><h4 id="流程图">流程图</h4><p>以下几个实例效果图如下：</p><h5 id="1-横向流程图源码格式："><strong>1、横向流程图源码格式：</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">​&#96;&#96;&#96;mermaid</span><br><span class="line">graph LR</span><br><span class="line">A[方形] --&gt;B(圆角)</span><br><span class="line">    B --&gt; C&#123;条件a&#125;</span><br><span class="line">    C --&gt;|a&#x3D;1| D[结果1]</span><br><span class="line">    C --&gt;|a&#x3D;2| E[结果2]</span><br><span class="line">    F[横向流程图]</span><br><span class="line">​&#96;&#96;&#96;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A[方形] --&gt;B(圆角)</span><br><span class="line">    B --&gt; C&#123;条件a&#125;</span><br><span class="line">    C --&gt;|a&#x3D;1| D[结果1]</span><br><span class="line">    C --&gt;|a&#x3D;2| E[结果2]</span><br><span class="line">    F[横向流程图]</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/godmid/pic-for-cdn@main//img/202411261132830.png" alt="image-20241126113239800" loading="lazy"></p><h5 id="2-竖向流程图源码格式："><strong>2、竖向流程图源码格式：</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">​&#96;&#96;&#96;mermaid</span><br><span class="line">graph TD</span><br><span class="line">A[方形] --&gt; B(圆角)</span><br><span class="line">    B --&gt; C&#123;条件a&#125;</span><br><span class="line">    C --&gt; |a&#x3D;1| D[结果1]</span><br><span class="line">    C --&gt; |a&#x3D;2| E[结果2]</span><br><span class="line">    F[竖向流程图]</span><br><span class="line">​&#96;&#96;&#96;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">A[方形] --&gt; B(圆角)</span><br><span class="line">    B --&gt; C&#123;条件a&#125;</span><br><span class="line">    C --&gt; |a&#x3D;1| D[结果1]</span><br><span class="line">    C --&gt; |a&#x3D;2| E[结果2]</span><br><span class="line">    F[竖向流程图]</span><br></pre></td></tr></table></figure><h5 id="3-标准流程图源码格式："><strong>3、标准流程图源码格式：</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">​&#96;&#96;&#96;flow</span><br><span class="line">st&#x3D;&gt;start: 开始框</span><br><span class="line">op&#x3D;&gt;operation: 处理框</span><br><span class="line">cond&#x3D;&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1&#x3D;&gt;subroutine: 子流程</span><br><span class="line">io&#x3D;&gt;inputoutput: 输入输出框</span><br><span class="line">e&#x3D;&gt;end: 结束框</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;io-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br><span class="line">​&#96;&#96;&#96;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">st&#x3D;&gt;start: 开始框</span><br><span class="line">op&#x3D;&gt;operation: 处理框</span><br><span class="line">cond&#x3D;&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1&#x3D;&gt;subroutine: 子流程</span><br><span class="line">io&#x3D;&gt;inputoutput: 输入输出框</span><br><span class="line">e&#x3D;&gt;end: 结束框</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;io-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure><h5 id="4-标准流程图源码格式-横向-："><strong>4、标准流程图源码格式（横向）：</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">​&#96;&#96;&#96;flow</span><br><span class="line">st&#x3D;&gt;start: 开始框</span><br><span class="line">op&#x3D;&gt;operation: 处理框</span><br><span class="line">cond&#x3D;&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1&#x3D;&gt;subroutine: 子流程</span><br><span class="line">io&#x3D;&gt;inputoutput: 输入输出框</span><br><span class="line">e&#x3D;&gt;end: 结束框</span><br><span class="line">st(right)-&gt;op(right)-&gt;cond</span><br><span class="line">cond(yes)-&gt;io(bottom)-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br><span class="line">​&#96;&#96;&#96;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">st&#x3D;&gt;start: 开始框</span><br><span class="line">op&#x3D;&gt;operation: 处理框</span><br><span class="line">cond&#x3D;&gt;condition: 判断框(是或否?)</span><br><span class="line">sub1&#x3D;&gt;subroutine: 子流程</span><br><span class="line">io&#x3D;&gt;inputoutput: 输入输出框</span><br><span class="line">e&#x3D;&gt;end: 结束框</span><br><span class="line">st(right)-&gt;op(right)-&gt;cond</span><br><span class="line">cond(yes)-&gt;io(bottom)-&gt;e</span><br><span class="line">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure><h5 id="5-uml时序图源码样例："><strong>5、UML时序图源码样例：</strong></h5><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```sequence</span></span><br><span class="line"><span class="code">对象A-&gt;对象B: 对象B你好吗?（请求）</span></span><br><span class="line"><span class="code">Note right of 对象B: 对象B的描述</span></span><br><span class="line"><span class="code">Note left of 对象A: 对象A的描述(提示)</span></span><br><span class="line"><span class="code">对象B--&gt;对象A: 我很好(响应)</span></span><br><span class="line"><span class="code">对象A-&gt;对象B: 你真的好吗？</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class="line">Note right of 对象B: 对象B的描述</span><br><span class="line">Note left of 对象A: 对象A的描述(提示)</span><br><span class="line">对象B--&gt;对象A: 我很好(响应)</span><br><span class="line">对象A-&gt;对象B: 你真的好吗？</span><br></pre></td></tr></table></figure><h5 id="6-uml时序图源码复杂样例："><strong>6、UML时序图源码复杂样例：</strong></h5><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```sequence</span></span><br><span class="line"><span class="code">Title: 标题：复杂使用</span></span><br><span class="line"><span class="code">对象A-&gt;对象B: 对象B你好吗?（请求）</span></span><br><span class="line"><span class="code">Note right of 对象B: 对象B的描述</span></span><br><span class="line"><span class="code">Note left of 对象A: 对象A的描述(提示)</span></span><br><span class="line"><span class="code">对象B--&gt;对象A: 我很好(响应)</span></span><br><span class="line"><span class="code">对象B-&gt;小三: 你好吗</span></span><br><span class="line"><span class="code">小三--&gt;&gt;对象A: 对象B找我了</span></span><br><span class="line"><span class="code">对象A-&gt;对象B: 你真的好吗？</span></span><br><span class="line"><span class="code">Note over 小三,对象B: 我们是朋友</span></span><br><span class="line"><span class="code">participant C</span></span><br><span class="line"><span class="code">Note right of C: 没人陪我玩</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Title: 标题：复杂使用</span><br><span class="line">对象A-&gt;对象B: 对象B你好吗?（请求）</span><br><span class="line">Note right of 对象B: 对象B的描述</span><br><span class="line">Note left of 对象A: 对象A的描述(提示)</span><br><span class="line">对象B--&gt;对象A: 我很好(响应)</span><br><span class="line">对象B-&gt;小三: 你好吗</span><br><span class="line">小三--&gt;&gt;对象A: 对象B找我了</span><br><span class="line">对象A-&gt;对象B: 你真的好吗？</span><br><span class="line">Note over 小三,对象B: 我们是朋友</span><br><span class="line">participant C</span><br><span class="line">Note right of C: 没人陪我玩</span><br></pre></td></tr></table></figure><h5 id="7-uml标准时序图样例："><strong>7、UML标准时序图样例：</strong></h5><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```mermaid</span></span><br><span class="line"><span class="code">%% 时序图例子,-&gt; 直线，--&gt;虚线，-&gt;&gt;实线箭头</span></span><br><span class="line"><span class="code">  sequenceDiagram</span></span><br><span class="line"><span class="code">    participant 张三</span></span><br><span class="line"><span class="code">    participant 李四</span></span><br><span class="line"><span class="code">    张三-&gt;王五: 王五你好吗？</span></span><br><span class="line"><span class="code">    loop 健康检查</span></span><br><span class="line"><span class="code">        王五-&gt;王五: 与疾病战斗</span></span><br><span class="line"><span class="code">    end</span></span><br><span class="line"><span class="code">    Note right of 王五: 合理 食物 &lt;br/&gt;看医生...</span></span><br><span class="line"><span class="code">    李四--&gt;&gt;张三: 很好!</span></span><br><span class="line"><span class="code">    王五-&gt;李四: 你怎么样?</span></span><br><span class="line"><span class="code">    李四--&gt;王五: 很好!</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">%% 时序图例子,-&gt; 直线，--&gt;虚线，-&gt;&gt;实线箭头</span><br><span class="line">  sequenceDiagram</span><br><span class="line">    participant 张三</span><br><span class="line">    participant 李四</span><br><span class="line">    张三-&gt;王五: 王五你好吗？</span><br><span class="line">    loop 健康检查</span><br><span class="line">        王五-&gt;王五: 与疾病战斗</span><br><span class="line">    end</span><br><span class="line">    Note right of 王五: 合理 食物 &lt;br&#x2F;&gt;看医生...</span><br><span class="line">    李四--&gt;&gt;张三: 很好!</span><br><span class="line">    王五-&gt;李四: 你怎么样?</span><br><span class="line">    李四--&gt;王五: 很好!</span><br></pre></td></tr></table></figure><h5 id="8-甘特图样例："><strong>8、甘特图样例：</strong></h5><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```mermaid</span></span><br><span class="line"><span class="code">%% 语法示例</span></span><br><span class="line"><span class="code">        gantt</span></span><br><span class="line"><span class="code">        dateFormat  YYYY-MM-DD</span></span><br><span class="line"><span class="code">        title 软件开发甘特图</span></span><br><span class="line"><span class="code">        section 设计</span></span><br><span class="line"><span class="code">        需求                      :done,    des1, 2014-01-06,2014-01-08</span></span><br><span class="line"><span class="code">        原型                      :active,  des2, 2014-01-09, 3d</span></span><br><span class="line"><span class="code">        UI设计                     :         des3, after des2, 5d</span></span><br><span class="line"><span class="code">    未来任务                     :         des4, after des3, 5d</span></span><br><span class="line"><span class="code">        section 开发</span></span><br><span class="line"><span class="code">        学习准备理解需求                      :crit, done, 2014-01-06,24h</span></span><br><span class="line"><span class="code">        设计框架                             :crit, done, after des2, 2d</span></span><br><span class="line"><span class="code">        开发                                 :crit, active, 3d</span></span><br><span class="line"><span class="code">        未来任务                              :crit, 5d</span></span><br><span class="line"><span class="code">        耍                                   :2d</span></span><br><span class="line"><span class="code">        section 测试</span></span><br><span class="line"><span class="code">        功能测试                              :active, a1, after des3, 3d</span></span><br><span class="line"><span class="code">        压力测试                               :after a1  , 20h</span></span><br><span class="line"><span class="code">        测试报告                               : 48h</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">%% 语法示例</span><br><span class="line">        gantt</span><br><span class="line">        dateFormat  YYYY-MM-DD</span><br><span class="line">        title 软件开发甘特图</span><br><span class="line">        section 设计</span><br><span class="line">        需求                      :done,    des1, 2014-01-06,2014-01-08</span><br><span class="line">        原型                      :active,  des2, 2014-01-09, 3d</span><br><span class="line">        UI设计                     :         des3, after des2, 5d</span><br><span class="line">    未来任务                     :         des4, after des3, 5d</span><br><span class="line">        section 开发</span><br><span class="line">        学习准备理解需求                      :crit, done, 2014-01-06,24h</span><br><span class="line">        设计框架                             :crit, done, after des2, 2d</span><br><span class="line">        开发                                 :crit, active, 3d</span><br><span class="line">        未来任务                              :crit, 5d</span><br><span class="line">        耍                                   :2d</span><br><span class="line">        section 测试</span><br><span class="line">        功能测试                              :active, a1, after des3, 3d</span><br><span class="line">        压力测试                               :after a1  , 20h</span><br><span class="line">        测试报告                               : 48h</span><br></pre></td></tr></table></figure><h4 id="markdown-代码">Markdown 代码</h4><p>如果是段落上的一个函数或片段的代码可以用反引号把它包起来（<strong>`</strong>），例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#96;printf()&#96; 函数</span><br></pre></td></tr></table></figure><p>显示结果如下：</p><p><code>printf()</code> 函数</p><p><img src="https://cdn.jsdelivr.net/gh/godmid/pic-for-cdn@main//img/202411261132821.png" alt="image-20241126113257793" loading="lazy"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用 &lt;kbd&gt;Ctrl&lt;&#x2F;kbd&gt;+&lt;kbd&gt;Alt&lt;&#x2F;kbd&gt;+&lt;kbd&gt;Del&lt;&#x2F;kbd&gt; 重启电脑</span><br></pre></td></tr></table></figure><p>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p><h4 id="代码区块">代码区块</h4><p>代码区块使用 <strong>4 个空格</strong>或者一个<strong>制表符（Tab 键）</strong>。</p><p>你也可以用 <strong>```</strong> 包裹一段代码，并指定一种语言（也可以不指定）：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```javascript</span></span><br><span class="line"><span class="code">$(document).ready(function () &#123;</span></span><br><span class="line"><span class="code">    alert(&#x27;RUNOOB&#x27;);</span></span><br><span class="line"><span class="code">&#125;);</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure><p>显示结果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/godmid/pic-for-cdn@main//img/202411261133219.png" alt="image-20241126113326187" loading="lazy"></p><h4 id="思维导图">思维导图</h4><pre><code>&#123;% markmap 300px %&#125;    # Testa    ## test1    ## test2    # Testb    ## test1    ## test2    &#123;%endmarkmap%&#125;</code></pre><p>效果预览</p><div class="markmap-container" style="height:300px;" ><svg class="markmap-svg">{"t":"root","d":0,"v":"","c":[{"t":"heading","d":1,"v":"一级","c":[{"t":"heading","d":2,"v":"1.1"},{"t":"heading","d":2,"v":"1.2"}]},{"t":"heading","d":1,"v":"二级","c":[{"t":"heading","d":2,"v":"2.1"},{"t":"heading","d":2,"v":"2.2"}]}]}</svg></div><h4 id="steam游戏价格部分内嵌">STEAM游戏价格部分内嵌</h4><h5 id="单个游戏">单个游戏</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% steamgame appid description %&#125;</span><br><span class="line">appid: Steam 游戏 id.</span><br><span class="line">description(可选): 用于替换默认游戏简介。</span><br></pre></td></tr></table></figure><iframe src="https://store.steampowered.com/widget/4000/?t=description" frameborder="0" width="100%" height="190"></iframe><h5 id="批量游戏">批量游戏</h5><pre><code>&#123;% steamgames %&#125;appidappid&#123;% endsteamgames %&#125;</code></pre><iframe src="https://store.steampowered.com/widget/4000/" frameborder="0" width="100%" height="190"></iframe><iframe src="https://store.steampowered.com/widget/4000/" frameborder="0" width="100%" height="190"></iframe><h4 id="音乐内嵌">音乐内嵌</h4><h5 id="网易云的音乐内嵌；">网易云的音乐内嵌；</h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">life</span>&gt;</span></span> </span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginwidth</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginheight</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">300</span> <span class="attr">height</span>=<span class="string">86</span> <span class="attr">src</span>=<span class="string">&quot;https://music.163.com/outchain/player?type=2&amp;id=1347717822&amp;auto=1&amp;height=66&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><div align=life> <iframe frameborder="0" marginwidth="0" marginheight="0" width=300 height=86 src="https://music.163.com/outchain/player?type=2&id=1347717822&auto=0&height=66"></iframe></div>`frameborder`：为0关闭边框，为1显示边框<p><code>marginwidth</code>：框架的左边距和右边距</p><p><code>marginheight</code>：框架的上下空白边距</p><p><code>width</code>：<code>iframe</code>的<code>width</code>为宽度</p><p><code>height</code>：<code>iframe</code>的<code>height</code>为高度</p><p><code>src</code>：音乐的外链</p><p><code>id</code>：这是重点，网易云音乐的歌的ID</p><h5 id="其他平台资源内嵌-如腾讯云">其他平台资源内嵌（如腾讯云）</h5><p>mp3资源放在了我的cos里面，通过外链访问（实际上放在公共资源更划算）；</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">id</span>=<span class="string">&quot;audio&quot;</span> <span class="attr">controls</span>=<span class="string">&quot;&quot;</span> <span class="attr">preload</span>=<span class="string">&quot;none&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">source</span> <span class="attr">id</span>=<span class="string">&quot;mp3&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://pic-1304932877.cos.ap-shanghai.myqcloud.com/music/Vitamin%20String%20Quartet%20-%20I%27m%20Yours.mp3&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span></span><br></pre></td></tr></table></figure><audio id="audio" controls="" preload="none"><source id="mp3" src="https://pic-1304932877.cos.ap-shanghai.myqcloud.com/music/Vitamin%20String%20Quartet%20-%20I%27m%20Yours.mp3"></audio>#### codepen嵌入<ul><li>你甚至还可以嵌入外部代码块在markdown里玩游戏</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;codepen&quot;</span> <span class="attr">data-height</span>=<span class="string">&quot;265&quot;</span> <span class="attr">data-theme-id</span>=<span class="string">&quot;light&quot;</span> <span class="attr">data-default-tab</span>=<span class="string">&quot;js,result&quot;</span> <span class="attr">data-user</span>=<span class="string">&quot;moPsych&quot;</span> <span class="attr">data-slug-hash</span>=<span class="string">&quot;KKgQxWb&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;&quot;</span> <span class="attr">data-pen-title</span>=<span class="string">&quot;Snake Game&quot;</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span>See the Pen <span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://codepen.io/moPsych/pen/KKgQxWb&quot;</span>&gt;</span></span></span><br><span class="line">  Snake Game<span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span> by moPsych (<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://codepen.io/moPsych&quot;</span>&gt;</span></span>@moPsych<span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>)</span><br><span class="line">  on <span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://codepen.io&quot;</span>&gt;</span></span>CodePen<span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>.<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;https://static.codepen.io/assets/embed/ei.js&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p class="codepen" data-height="265" data-theme-id="light" data-default-tab="js,result" data-user="moPsych" data-slug-hash="KKgQxWb" style="height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;" data-pen-title="Snake Game">  <span>See the Pen <a href="https://codepen.io/moPsych/pen/KKgQxWb">  Snake Game</a> by moPsych (<a href="https://codepen.io/moPsych">@moPsych</a>)  on <a href="https://codepen.io">CodePen</a>.</span></p><script async src="https://static.codepen.io/assets/embed/ei.js"></script><h4 id="嵌入gist">嵌入gist</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://gist.github.com/Theigrams/98f6323969aa763cd1e343540e5420b4.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><script src="https://gist.github.com/Theigrams/98f6323969aa763cd1e343540e5420b4.js"></script><h4 id="pdf内嵌">pdf内嵌</h4><p><a href="https://zhuanlan.zhihu.com/p/342135587">谷歌引入方法来源</a></p><h5 id="谷歌的pdf外链引入内嵌">谷歌的pdf外链引入内嵌</h5><p>通过  <kbd>Google</kbd><kbd>Drive</kbd><kbd>Viewer</kbd>引入</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;https://docs.google.com/gview?embedded=true&amp;url=http://infolab.stanford.edu/pub/papers/google.pdf&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:800px; height:500px;&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span></span><br></pre></td></tr></table></figure><iframe src="https://docs.google.com/gview?embedded=true&url=http://infolab.stanford.edu/pub/papers/google.pdf" style="width:800px; height:500px;" frameborder="0"></iframe><h5 id="hexo渲染器的pdf内嵌-前提是你装了渲染器">hexo渲染器的pdf内嵌（前提是你装了渲染器）</h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf   文件名  /HTTP.pdf %&#125;</span><br></pre></td></tr></table></figure><h4 id="内嵌网页">内嵌网页</h4><iframe   height=100%  width=100%  src="https://caspervonb.xyz/toneofsorting/" "   frameborder=0   allowfullscreen> </iframe><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span>  </span></span><br><span class="line"><span class="tag"> <span class="attr">height</span>=<span class="string">100%</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">width</span>=<span class="string">100%</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">src</span>=<span class="string">&quot;https://caspervonb.xyz/toneofsorting/&quot;</span> &quot;  </span></span><br><span class="line"><span class="tag"> <span class="attr">frameborder</span>=<span class="string">0</span>  </span></span><br><span class="line"><span class="tag"> <span class="attr">allowfullscreen</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>游戏名言</title>
      <link href="posts/b7933f67/"/>
      <url>posts/b7933f67/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>  我们能从游戏中学到什么？<center>英雄联盟：你一个人靠谱能做的很好，但一群人靠谱才能走的更远<center>阴阳师：你永远不知道运气什么时候会砸向你<center>魔兽世界：能陪你走过十二年的，不止朋友，还有艾泽拉斯<span id="more"></span><p>贪吃蛇大作战：长大的我们渐渐失去了横冲直撞的勇气</p><p>纪念碑谷：面对困难多转几个弯，总会遇见柳暗花明</p><p>守望先锋：生活中并不缺少美，只是缺少发现美的眼睛，热火朝天的战场中也有靓丽的风景</p><p>愤怒的小鸟：失败时总有一群猪在嘲笑你，而他们不知道有再来一次</p><p>俄罗斯方块：犯下的错误会积累，而成功会消失</p><p>我的世界:一个游戏，一个人生，你的世界里你和你的朋友可以体验你梦寐以求的自由</p><p>TF2:如果你不懂得努力，你始终会失败，不要害怕强大的队友，而是永不放弃的去猎杀他;如果你没有朋友，陪伴着你一起战斗的队友，就是你真正的朋友;其实失败并不可怕，可怕的是你选择了放弃</p><p>半条命:你要懂得反抗，你不是弱者，你只是没有反抗</p><p>玩具熊的五夜后宫:不要害怕黑暗中的恐惧，只害怕你不敢去面对</p><p>泰拉瑞亚:虽然你什么都没，但是自己动手，你就能努力的生存下去</p><p>传说之下:只要你有决心，你就会知道决心能帮你实现很多东西</p><p>求生之路:只要和你的队友同心协力你们永远能战胜所有困难</p> </center><p><strong>我的几位有才的朋友又加了几条：</strong></p><p>黑暗之魂——菜就多练练</p><p>王者荣耀:你永远不知道孤儿是队友还是对面</p><p>原神:充3000和零氪没有什么区别</p><p>消逝的光芒：那天，我们在夕阳下奔跑……艹，夜魔</p><p>只狼:重复显示的“菜”显得你很呆</p><p>本文阅览次数 ：<span id="twikoo_visitors">0</span></p><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 游戏名言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>流程图</title>
      <link href="posts/7f59c40c/"/>
      <url>posts/7f59c40c/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center> 程序框图也叫做流程图，它直观形象,易于理解，是描述算法的常用方式。美国国家标准化协会（ANSI）规定了一些常用的程序框图符号（如下图所示），已经成为世界各国程序工作者普遍采用的标准。  </center><img src="https://picyun.oss-cn-shanghai.aliyuncs.com/20190401090908105.JPG" alt="1.jpg" style="zoom: 67%;" / loading="lazy"><span id="more"></span><p>从网络上找了个例子如下：</p><p><img src="https://picyun.oss-cn-shanghai.aliyuncs.com/20190401091228716.JPG" alt="img" loading="lazy"></p><p><img src="https://picyun.oss-cn-shanghai.aliyuncs.com/20190401090941605.png" alt="img" loading="lazy"></p><p>是不是和上一篇文章的伪代码有点像呢？其实这两个可以结合使用的，并且还经常这么干。</p><h3 id="基本结构">基本结构</h3><p>不论什么程序设计语言，程序设计都有3种基本结构：顺序结构、选择结构和循环结构。三种基本结构的特点： 一个入口，一个出口，不出现死循环和死语句。</p><img src="https://img-blog.csdn.net/20180923195231944" alt="img" style="zoom:50%;" / loading="lazy"><img src="https://img-blog.csdn.net/20180923195402731" alt="img" style="zoom:50%;" / loading="lazy"><img src="https://picyun.oss-cn-shanghai.aliyuncs.com/20181227164842271.png" alt="img" style="zoom: 67%;" / loading="lazy"><h3 id="实际应用类型">实际应用类型</h3><p>一般我们理工狗使用的较多的是<u>系统流程图与程序流程图</u>。此外还有<u>业务路程图、任务流程图、页面流程图</u>。多了解几个流程图更有助于我们理解这个新的事物，故将其列举于此。</p><p>一般说来做系统高层设计时，首先会考虑系统的整体结构，把<strong>系统</strong>会分成多个<strong>子系统</strong>，每个<strong>子系统</strong>又分成多个<strong>程序模块</strong>。系统流程图用图形化的符号来记录整个系统和系统各模块的结构，描述了系统各子系统、相关文件和数据之间的关系，记录了整个系统的体系结构。系统流程图主要应用在系统架构阶段，是系统分析员或系统设计师对将要构建系统的一种描述，这种描述以简单图形化的方式给出了系统的整体结构，涉及到系统将要使用的各种部件，如<strong>子系统、数据库、磁盘、文件、用户的输入与输出</strong>等。而每个模块中，单个功能的实现则可用程序流程图来描述。</p><p>下面展示几个例子：</p><p><strong>程序流程图</strong>：</p><img src="https://picyun.oss-cn-shanghai.aliyuncs.com/20191216113341635.png" alt="img" style="zoom: 80%;" / loading="lazy"><p><strong>系统流程图</strong>：</p><img src="https://picyun.oss-cn-shanghai.aliyuncs.com/20191216113443426.png" alt="img" style="zoom: 80%;" / loading="lazy"><p>同为流程图，下面这三个商务类的了解一下即可，因为对c语言学习帮助不大。</p><p><strong>业务流程图</strong><br>业务流程图就是描述那些个体在什么条件下做了什么事情，他们之间有何关联。主要分三个方面：</p><ul><li>涉及到哪些主体？</li><li>每个主体都有哪些任务？</li><li>各个主体之间怎么联系的？</li></ul><p>一般涉及到多个主体，每个主体之间有联系，比如p2p平台。下图为p2p的业务流程图、涉及到借款人、平台、投资人、第三方支付四个主体，以及每个主题需要完成的任务、任务之间的联系和先后顺序。<br><img src="https://picyun.oss-cn-shanghai.aliyuncs.com/20190510152051210.png" alt="在这里插入图片描述"  / loading="lazy"></p><p><strong>任务流程图</strong></p><p>泳道图一般是从战略上分析整个业务流程，让你对公司所做的业务有个大概的了解，而任务流程图就是在你的产品操作上，用户通过什么样的操作来完成它的目标，比如你去银行ATM机器上取钱，你是如何一步步操作把钱取出来的，这里以p2p理财产品购买为例，来说明购买的任务流程图。</p><img src="https://picyun.oss-cn-shanghai.aliyuncs.com/20190510152125838.png" alt="在这里插入图片描述"  / loading="lazy">画流程图的时候注意主要流程和异常流程，在这个例子中，主要流程就是购买流程、异常流程就是没有设置交易密码、用户忘记交易密码、以及超过重试次数这些流程，画流程图的时候先画主要的流程，然后再把异常额流程考虑上，查漏补缺，保证不遗漏，产品的逻辑漏洞多半是由于异常情况没有考虑清楚，画流程图可以有效的帮助你梳理逻辑。<p><strong>页面流程图</strong></p><p>如果说业务流程图帮助你梳理战略，任务流程图帮助你梳理用户操作行为（主要给程序员看）、页面跳转流程在帮助你梳理各个页面之间的跳转关系（主要给UI和前端程序员看）这是一个逐步从整体到局部，从后端到前端的过程。</p><p>所有的产品都是由页面组成的，不论是APP、PC、H5都是由一个个页面组成的，页面流程图描述完成一个任务需要经过哪些步骤，你在画图的时候只需要清晰的表现出用户点击页面的什么地方，然后跳转到那个页面。主要由页面、行动点、连接线组成，下面以用户购买理财产品举例。</p><img src="https://picyun.oss-cn-shanghai.aliyuncs.com/20190510152236906.png" alt="在这里插入图片描述"  / loading="lazy">页面流程一般只考虑正常的操作流程就行，对于异常的操作流程在正常流程的旁边画出，例如：上面的正常页面跳转是用户购买这个流程，异常页面跳转流程是在购买界面金额不足的时候点击去充值流程，这个在正常流程的旁边标示出来就好。<p>对这三种流程图感兴趣的话，来源：<a href="https://blog.csdn.net/qq_32811489/article/details/90067054?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161266580216780264089304%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=161266580216780264089304&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-90067054.first_rank_v2_pc_rank_v29_10&amp;utm_term=%E6%B5%81%E7%A8%8B%E5%9B%BE&amp;spm=1018.2226.3001.4187">流程图介绍以及工具推荐</a></p><h3 id="文章来源：">文章来源：</h3><p><a href="https://blog.csdn.net/bird_tp/article/details/103559761?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=%E6%B5%81%E7%A8%8B%E5%9B%BE&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-8-103559761.first_rank_v2_pc_rank_v29_10&amp;spm=1018.2226.3001.4187">流程图学习</a></p><p><a href="https://blog.csdn.net/qq_42675313/article/details/88941058?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161266580216780264089304%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=161266580216780264089304&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-6-88941058.first_rank_v2_pc_rank_v29_10&amp;utm_term=%E6%B5%81%E7%A8%8B%E5%9B%BE&amp;spm=1018.2226.3001.4187">一个简单的画程序框图例子</a></p><p>另外如果需要绘制流程图，下面为快速链接</p><p><a href="https://blog.csdn.net/langhonglin/article/details/81091727?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161266580216780264042445%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=161266580216780264042445&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-10-81091727.first_rank_v2_pc_rank_v29_10&amp;utm_term=%E6%B5%81%E7%A8%8B%E5%9B%BE&amp;spm=1018.2226.3001.4187">画流程图的软件教程</a></p><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> c语言学习历程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c语言初步学习 </tag>
            
            <tag> 流程图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c语言初步学习——伪代码(2)</title>
      <link href="posts/7923a685/"/>
      <url>posts/7923a685/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center> VS CODE支持很多的插件，今天我们就是利用code的一个插件实现对新的语言（伪代码）进行编辑。  </center>code不像vs studio，他不是ide，没有运行的环境，而是一款轻量级的跨平台的编辑器。所以环境我们要自己进行搭建，新的语言要利用一些插件实现。<p><strong>原作者的小建议</strong>：这篇文章的最佳阅读姿势是在电脑上打开，并跟着文章一步步做下去。</p><span id="more"></span><h2 id="创建项目">创建项目</h2><p>编写插件的第一步，就是创建我们的目录结构。这里我们使用一个叫做<code>yo</code>的脚手架工具。<code>yo</code>是一个富有高度扩展性的通用脚手架，可以通过插件来实现不同目录结构和初始选项。VS Code官方提供了名为<code>generator-code</code>的插件，来进行插件目录的创建。首先我们需要安装<code>yo</code>以及插件<code>generator-code</code>。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g yo generator-code</span><br></pre></td></tr></table></figure><p>在安装完成以后，使用下面的命令来创建目录结构。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yo code</span><br></pre></td></tr></table></figure><p>在运行<code>yo code</code>以后，它会问你下面这些问题。建议大家和我的输入保持相同，以免遇到意外。这里我们给伪代码的取名为<code>zhuanzhuan</code>，并且告诉VS Code，当碰到一个文件的扩展名为<code>.zhuanzhuan</code>或者<code>.zz</code>时，就要运行我们这个插件。</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9UODFiQVYwTk5OaWN2ZkxoTjRPaWNzbjhQcVJPUjRmNmxoaWFJb0lpYzVEVTloTFpXS0ZpYzNXeG1tTlRHb3N0MmliUk10RTZyVVQycG1yUUdsb0JoZUlEbG84Zy82NDA?x-oss-process=image/format,png" alt="img" loading="lazy"></p><p>输入完所有的选项以后，我们的插件目录就创建完成了。结构是这样子的：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">├── CHANGELOG.md</span><br><span class="line"></span><br><span class="line">├── README.md</span><br><span class="line"></span><br><span class="line">├── language-configuration.json</span><br><span class="line"></span><br><span class="line">├── <span class="keyword">package</span>.json</span><br><span class="line"></span><br><span class="line">├── syntaxes</span><br><span class="line"></span><br><span class="line">├──     # 在tmLanguage.json中自定义语法</span><br><span class="line"></span><br><span class="line">│   └── zhuanzhuan.tmLanguage.json </span><br><span class="line"></span><br><span class="line">└── vsc-extension-quickstart.md</span><br></pre></td></tr></table></figure><h2 id="了解scope">了解Scope</h2><p>想要实现语法高亮，就需要将一串代码字符串，拆分成无数的小碎片，然后分别为它们指定<code>color</code>等样式。这些拆分后的小碎片，被称作<code>token</code>。这里的<code>token</code>与<code>jwt</code>中的<code>token</code>不同，并没有安全、令牌等方面的意思，而是更偏向&quot;符号&quot;的含义。我们来看一个简单例子???来理解一下这段话。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">function sum(a: number, b: number): number &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> a + b;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这段TS代码中，我们定义了一个用于求和的函数。这时候我们按下VS Code快捷键，<code>shift+cmd+p</code>，然后输入<code>inspect editor tokens and scopes</code>，就可以看到每个token对应的类型。比如<code>sum</code>这个token的类型就是<code>function</code>，<code>a</code>和<code>b</code>的类型是<code>parameter</code>。</p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9UODFiQVYwTk5OaWN2ZkxoTjRPaWNzbjhQcVJPUjRmNmxod0tRZjNhclVnQUx5VDd4SFg0cGJFbGV6NXR2MGZoUmpCMmppYWVvVDVHcGN6MFl1QTZxbEJMQS82NDA?x-oss-process=image/format,png" alt="img" style="zoom:50%;" / loading="lazy"><p>另外从截图的底部中，我们还可以看到，每个<code>token</code>还具有一个叫<code>textmate scope</code>的属性。通俗地说，<code>scope</code>指这个<code>token</code>所处的位置。</p><p>比如下面的代码片段里，有两个a变量。第一个是一个变量声明，而第二个是函数的参数之一。虽然它们都可以被笼统地称为变量，但是因为所处的<code>scope</code>不同（也就是处于不同环境），所以在VS Code中会被显示成不同的颜色。(由于微信文章中的代码高亮较弱，看不出区别。)</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> a = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function sum(a: number, b: number): number &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> a + b;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="支持注释">支持注释</h2><p>至此前置知识已经介绍完了，现在开始真正修改脚手架创建的代码。我们的第一个目标是，让<code>zhuanzhuan</code>语言支持注释。</p><p>首先打开根目录下的<code>language-configuration.json</code>文件，找到<code>comments</code>字段，将<code>lineComment</code>从默认的<code>//</code>修改为<code>注释：</code>。完成以后按下F5启动Debug程序，VS Code会打开一个新的窗口，且我们的插件会在其中生效。在新窗口中，我们随意打开一个空文件夹，然后新建名为<code>fakeCode.zz</code>，并输入以下内容进行测试。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">注释： 当我们用中文伪代码来描述执行过程的时候，</span><br><span class="line"></span><br><span class="line">注释： 不管什么内容都被显示成灰色的字符串了。</span><br><span class="line"></span><br><span class="line">注释： 我们的目标就是让它们变得五彩斑斓。</span><br><span class="line"></span><br><span class="line">注释： 不要试图重构这个方法，不然你会虚度一天的光阴。</span><br><span class="line"></span><br><span class="line">如果 ([某个条件]) &#123;</span><br><span class="line"></span><br><span class="line">  做一些条件成立时的事情</span><br><span class="line"></span><br><span class="line">&#125; 否则 &#123;</span><br><span class="line"></span><br><span class="line">  当条件不成立的时候...</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">遍历 商品</span><br><span class="line"></span><br><span class="line">  打印 《商品id》</span><br><span class="line"></span><br><span class="line">结束</span><br><span class="line"></span><br><span class="line">函数 [函数名] &#123;</span><br><span class="line"></span><br><span class="line">  函数的内容</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这时，我们按下注释转换的快捷键<code>cmd+/</code>，就会惊讶地发现，VS Code会为你自动转换注释内容，在这之间转换：<code>注释：具体内容</code>⇔<code>具体内容</code>。</p><p>这样，我们的Hello World项目就完成了，开始做稍微复杂一些的事情。打开<code>/syntexes/zhuanzhuan.tmLanguage.json</code>文件，将这个文件的所有内容替换成下面的内容：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"> <span class="string">&quot;$schema&quot;</span>: <span class="string">&quot;https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json&quot;</span>,</span><br><span class="line"></span><br><span class="line"> <span class="string">&quot;name&quot;</span>: <span class="string">&quot;zhuanzhuan&quot;</span>,</span><br><span class="line"></span><br><span class="line"> <span class="string">&quot;scopeName&quot;</span>: <span class="string">&quot;source.zz&quot;</span>,</span><br><span class="line"></span><br><span class="line"> <span class="string">&quot;patterns&quot;</span>: [</span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line"></span><br><span class="line">   <span class="string">&quot;include&quot;</span>: <span class="string">&quot;#comments&quot;</span></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> ],</span><br><span class="line"></span><br><span class="line"> <span class="string">&quot;repository&quot;</span>: &#123;</span><br><span class="line"></span><br><span class="line">  <span class="string">&quot;comments&quot;</span>: &#123;</span><br><span class="line"></span><br><span class="line">   <span class="string">&quot;name&quot;</span>: <span class="string">&quot;punctuation.comment&quot;</span>,</span><br><span class="line"></span><br><span class="line">   <span class="string">&quot;begin&quot;</span>: <span class="string">&quot;注释：&quot;</span>,</span><br><span class="line"></span><br><span class="line">   <span class="string">&quot;end&quot;</span>: <span class="string">&quot;\\n&quot;</span>,</span><br><span class="line"></span><br><span class="line">   <span class="string">&quot;beginCaptures&quot;</span>: &#123;</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;0&quot;</span>: &#123;</span><br><span class="line"></span><br><span class="line">     <span class="string">&quot;name&quot;</span>: <span class="string">&quot;punctuation.comment.open&quot;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   &#125;,</span><br><span class="line"></span><br><span class="line">   <span class="string">&quot;endCaptures&quot;</span>: &#123;</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;0&quot;</span>: &#123;</span><br><span class="line"></span><br><span class="line">     <span class="string">&quot;name&quot;</span>: <span class="string">&quot;punctuation.comment.close&quot;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一眼看的时候都会懵的，我们慢慢理解一下这到底是什么意思。</p><ul><li><p>patterns &amp; repository</p><p>repository是规则的仓库，它规定了该条规则如何识别其适用的对象。而patterns则是规定了规则仓库中，哪些规则是需要生效的。所以如果我们想要加一条新的规则，需要在repository中加规则的内容，并在patterns中将这条规则<code>include</code>，不然即使在repository添加了规则也不会生效。</p></li><li><p>comments</p><p>这是我们加入的自定义规则，comments是规则的名字。</p></li><li><p>begin &amp; end</p><p>决定这条规则的适用对象。这里我们将<code>注释：</code>开头，回车符结尾的这部分字符作为适用对象。</p></li><li><p>beginCapture &amp; endCapture &amp; name</p><p>这三个属性，代表着我们赋予适用对象的scope名称。比这样一条注释&quot;注释：不要试图重构这个方法，不然你会虚度一天的光阴&quot;。，对应到我们这条规则，就是<code>注释：</code>这部分被赋予了<code>punctuation.comment.open</code> scope，不要试图重构这个方法，不然你会虚度一天的光阴。scope为<code>punctuation.comment</code>，最后的回车符scope为<code>punctuation.comment.open</code>。</p></li></ul><p>然后切换到刚才使用<code>F5</code>打开的Debug窗口，按下<code>cmd+shift+p</code>，运行<code>reload window</code>，让我们的修改生效，就可以看到scope名称的变化：</p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9UODFiQVYwTk5OaWN2ZkxoTjRPaWNzbjhQcVJPUjRmNmxobGNPU2txVlVvZE9GUkRlZXBGQjA3UHVOcFYzd2lhRHlPbEpkMWljWHlGMTRFcHk1cDUzRTdmaWJnLzY0MA?x-oss-process=image/format,png" alt="img" style="zoom:50%;" / loading="lazy"><h2 id="支持关键字">支持关键字</h2><p>关键字同样是编辑这个文件<code>/syntexes/zhuanzhuan.tmLanguage.json</code>，在<code>repository</code>中新加入<code>keywords</code>规则(记得在顶部的patterns中include它)：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="string">&quot;keywords&quot;</span>: &#123;</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;patterns&quot;</span>: [</span><br><span class="line"></span><br><span class="line">      &#123;</span><br><span class="line"></span><br><span class="line">        <span class="string">&quot;match&quot;</span>: <span class="string">&quot;\\b(如果|遍历|结束|打印|函数)\\b&quot;</span>,</span><br><span class="line"></span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;keyword.control.zhuanzhuan&quot;</span>,</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解释一下这里的意思：</p><ul><li><code>match</code> 这是一个正则，如果碰上<code>如果|遍历|结束|打印|函数</code>其中之一，就将它标记为关键字。</li><li><code>name</code> 这些关键字对应的scope是什么。</li></ul><p>效果如图：</p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9UODFiQVYwTk5OaWN2ZkxoTjRPaWNzbjhQcVJPUjRmNmxoSGlhZmJhRklZcDQzMDF3R0lVQ1h2Ynk0YlVDbm9pYllSOVQ4NHB1ZEc5bzV4SG9EVlE2d0FncWcvNjQw?x-oss-process=image/format,png" alt="img" style="zoom:50%;" / loading="lazy"><p>从图中我们可以看出，正则中匹配的字符(如果、遍历、函数等)已经被一一高亮了。不过你的VS Code中不一定是蓝色，这取决于你当前使用的主题。</p><h2 id="支持字符串">支持字符串</h2><p>接着我们让<code>zhuanzhuan</code>语言支持字符串功能，同样是修改json文件。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="string">&quot;repository&quot;</span>: &#123;</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;strings&quot;</span>: &#123;</span><br><span class="line"></span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;string.quoted.book.zhuanzhuan&quot;</span>,</span><br><span class="line"></span><br><span class="line">      <span class="string">&quot;begin&quot;</span>: <span class="string">&quot;《&quot;</span>,</span><br><span class="line"></span><br><span class="line">      <span class="string">&quot;end&quot;</span>: <span class="string">&quot;》&quot;</span>,</span><br><span class="line"></span><br><span class="line">      <span class="string">&quot;beginCaptures&quot;</span>: &#123;</span><br><span class="line"></span><br><span class="line">        <span class="string">&quot;0&quot;</span>: &#123;</span><br><span class="line"></span><br><span class="line">          <span class="string">&quot;name&quot;</span>: <span class="string">&quot;string.quoted.book.open&quot;</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      <span class="string">&quot;endCaptures&quot;</span>: &#123;</span><br><span class="line"></span><br><span class="line">        <span class="string">&quot;0&quot;</span>: &#123;</span><br><span class="line"></span><br><span class="line">          <span class="string">&quot;name&quot;</span>: <span class="string">&quot;string.quoted.book.close&quot;</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就像JS中使用单双引号和模板字符串作为字符串的标志，为了体现<code>zhuanzhuan</code>语言的不同之处，我们使用书名号，而不是单双引号，来标志一个字符串。例如<code>《xxxx》</code>，它被分成了<code>《</code> <code>xxxx</code> <code>》</code>三个部分，这三个部分有各自的<code>scope</code>，对应关系如下：</p><ul><li><strong>《</strong>      <code>string.quoted.book.open</code></li><li><strong>xxxx</strong>    <code>string.quoted.book.zhuanzhuan</code></li><li><strong>》</strong>     <code>string.quoted.book.close</code></li></ul><p>为了看到修改后的效果，需要在调试窗口中，<code>cmd+shift+p</code>并运行<code>reload window</code>。重载后的效果是这样的：</p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9UODFiQVYwTk5OaWN2ZkxoTjRPaWNzbjhQcVJPUjRmNmxoeVJQYjJOMUhTbW5KNmNHUVVpYnRHc1NLSnNTVVdUZ3BwTVhDd1NMQXV4cGNXdEdQdnFpY29ldEEvNjQw?x-oss-process=image/format,png" alt="img" style="zoom:50%;" / loading="lazy"><p>这时候第13行发生了变化，从原来的黑色，变成了绿色。</p><h2 id="深入理解scope">深入理解scope</h2><p>看到效果以后，再回过头看那份json文件，它到底表达了什么意思？</p><p>首先我们规定了顶层的<code>scope</code>名字叫<code>source.zz</code>。也就是说，当我们新建了<code>.zz</code>结尾的文件，开始写代码，这时所有的代码都处在顶层<code>scope</code>。</p><p><code>patterns</code>属性规定了在顶层<code>scope</code>中，有哪些方式可以开辟一个子<code>scope</code>。<code>patterns</code>数组<code>inclucde</code>(即引入)了名为<code>strings</code>和<code>keywords</code>的规则，这些规则被放在了<code>repository</code>(也就是仓库，一个规则的仓库)。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="string">&quot;strings&quot;</span>: &#123;</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;string.quoted.book.zhuanzhuan&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;begin&quot;</span>: <span class="string">&quot;《&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;end&quot;</span>: <span class="string">&quot;》&quot;</span></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>repository</code>中，以<code>strings</code>规则为例，当VS Code解析引擎遇到以“《”开头，“》”结尾的<code>token</code>时，中间的内容会被认为是字符串。也就是说，我们让书名号具备了和JS中的单双引号相同的功能。字符串的<code>scope</code>变成了我们规定的<code>string.quoted.book.zhuanzhuan</code>。我们可以通过<code>inspect editor tokens and scopes</code>命令来验证这一点。</p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9UODFiQVYwTk5OaWN2ZkxoTjRPaWNzbjhQcVJPUjRmNmxoTlJrVnFwN21vVGZ4TmVEOTIzZUJWSm5qcnVxcmlhandqWFlvMmlhU3labVlEbGJIRHB3NnNJZHcvNjQw?x-oss-process=image/format,png" alt="img" style="zoom:50%;" / loading="lazy"><p>图片中，<code>xxxx</code>所属的<code>scope</code>有两个，一个是<code>constant.character.escape.zhuanzhuan</code>，另一个就是根<code>scope</code>。一个<code>token</code>往往拥有多个<code>scope</code>，就像字符串，同时处于根<code>scope</code>和书名号创建的一个<code>scope</code>。</p><p>在上文的json文件中，还有一个叫<code>keywords</code>的属性，当有字符串满足<code>match</code>字段中的正则表达式时，会被认为是一个关键字。</p><p>事实上，当我们把上文的json规则进行更多的扩展和嵌套，就会越来越接近现流行的其他语言，存在无数的嵌套。一个<code>token</code>会属于无数的<code>scope</code>。</p><p>那么问题来了，这些<code>scope</code>的作用是什么？我们花了很多的力气去定义json格式，来让不同位置的<code>token</code>拥有不同的<code>scope</code>。这样我们就拥有了一个类似于CSS选择器的东西，我们可以为不同<code>scope</code>指定不同的样式，从而让我们自创的语言高亮起来。</p><h2 id="使用scope">使用Scope</h2><p>接下来我们要使用上文中定义的几个<code>scope</code>。因为目前为止，我们只是重新定义了<code>zhuanzhuan</code>语言中一部分情景下的<code>scope</code>名称，我们可以利用这些自定义的<code>scope</code>，做出更细致的高亮配置。</p><p>使用<code>scope</code>的方式就是创建一个<code>theme</code>类型的插件(没错我们要写第二个插件了)。这次我们需要cd到用户文件夹下的<code>.vscode/extensions</code>，这样我们的主题就可以免安装，可以直接出现在VS Code主题列表中。</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9UODFiQVYwTk5OaWN2ZkxoTjRPaWNzbjhQcVJPUjRmNmxoNVJZcDNQSTgwaWJmNUdCOWJOWXBLQzB6NTFmSGpRMjQ4eDlHNWw4bUl6YXVqMlFWMXZMQ1ZIZy82NDA?x-oss-process=image/format,png" alt="img" loading="lazy"></p><p>使用VS Code打开项目，然后编辑<code>theme/zhuanzhuan-lang-theme-color-theme.json</code>文件，文件的结构是这样的：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"> <span class="string">&quot;name&quot;</span>: <span class="string">&quot;zhuanzhuan-lang-theme&quot;</span>,</span><br><span class="line"></span><br><span class="line"> <span class="string">&quot;type&quot;</span>: <span class="string">&quot;light&quot;</span>,</span><br><span class="line"></span><br><span class="line"> <span class="string">&quot;colors&quot;</span>: &#123;</span><br><span class="line"></span><br><span class="line">  <span class="string">&quot;editor.background&quot;</span>: <span class="string">&quot;#f5f5f5&quot;</span>,</span><br><span class="line"></span><br><span class="line">  <span class="string">&quot;editor.foreground&quot;</span>: <span class="string">&quot;#333333&quot;</span></span><br><span class="line"></span><br><span class="line"> &#125;,</span><br><span class="line"></span><br><span class="line"> <span class="string">&quot;tokenColors&quot;</span>: [</span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line"></span><br><span class="line">   <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Comments&quot;</span>,</span><br><span class="line"></span><br><span class="line">   <span class="string">&quot;scope&quot;</span>: [</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;comment&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;punctuation.definition.comment&quot;</span></span><br><span class="line"></span><br><span class="line">   ],</span><br><span class="line"></span><br><span class="line">   <span class="string">&quot;settings&quot;</span>: &#123;</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;fontStyle&quot;</span>: <span class="string">&quot;italic&quot;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;foreground&quot;</span>: <span class="string">&quot;#AAAAAA&quot;</span></span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"> ]</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，<code>tokenColors</code>字段是我们需要关心的地方，它针对了不同的<code>scope</code>，指定不同的样式。<code>name</code>是这条规则的名字，可以随意命名，保证唯一性即可。<code>scope</code>类似于CSS选择器，是规则应用的对象。<code>settings</code>则是具体的样式。</p><p>然后我们在<code>tokenColors</code>中，加上我们自定义的样式。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="string">&quot;tokenColors&quot;</span>: [</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 省略其他原有的规则，仅列出新增的规则。</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;quotedBookOpen&quot;</span>,</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 将scope为string.quoted.book.open的token，</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 也就是《，颜色设置成#33ec0e(原谅色)。</span></span><br><span class="line"></span><br><span class="line">      <span class="string">&quot;scope&quot;</span>: <span class="string">&quot;string.quoted.book.open&quot;</span>,</span><br><span class="line"></span><br><span class="line">      <span class="string">&quot;settings&quot;</span>: &#123;</span><br><span class="line"></span><br><span class="line">        <span class="string">&quot;foreground&quot;</span>: <span class="string">&quot;#33ec0e&quot;</span></span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 省略了大段雷同的配置。</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 只要scope和我们的zhuanzhuan语言定义中的scope相同，</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 就可以高亮对应的token。</span></span><br><span class="line"></span><br><span class="line">  ]</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在<code>zhuanzhuan-lang</code>插件的调试窗口，打开主题选择列表，选择<code>zhuanzhuan-lang-theme</code>主题，就可以看到上面的三条规则对<code>《商品id》</code>这部分生效了。</p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9UODFiQVYwTk5OaWN2ZkxoTjRPaWNzbjhQcVJPUjRmNmxoR1haaWNpYjFpYkRJMnVSQjcyWnc5QzdUY0dpYW9CbGx6MjBpYldpY2RoanZYd1dTNXprMzVmV2VpY0cwUS82NDA?x-oss-process=image/format,png" alt="img" loading="lazy"></p><p>文字及其对应的scope和颜色如下：</p><ul><li><code>《</code></li><li><ul><li>scope: <code>string.quoted.book.open</code></li><li>颜色：#33ec0e</li></ul></li><li><code>》</code></li><li><ul><li>scope: <code>string.quoted.book.close</code></li><li>颜色：#33ec0e</li></ul></li><li><code>xxxx</code></li><li><ul><li>scope: <code>string.quoted.book.open</code></li><li>颜色：#eb8837</li></ul></li></ul><p>其他的scope可以自行挑选喜欢的色值一一定义，这里就不再重复罗列。</p><h2 id="成果">成果</h2><p>经过上面一系列的努力，然后再添加亿点点细节，最终的效果就是下图。</p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9UODFiQVYwTk5OaWN2ZkxoTjRPaWNzbjhQcVJPUjRmNmxoVWtkQ3FnaWE0Vm9NUUM0RkJnbW1sYUFMbzZiR3NxSUozWXJjT0tpY3JEQ3R5bHRkMXQ2QzJKaHcvNjQw?x-oss-process=image/format,png" alt="img" style="zoom:50%;" / loading="lazy"><h2 id="总结">总结</h2><p>通过阅读文章，我们总共创建了两个VS Code插件。一个是语言支持插件，通过简单的配置，使<code>zhuanzhuan</code>语言支持了中文关键字、书名号字符串以及中括号表示的变量。第二个是主题插件，为<code>zhuanzhuan</code>语言中自定义的<code>scope</code>提供了高亮规则。<code>scope</code>名称，是连接两个插件的枢纽。</p><p>不过<code>zhuanzhuan</code>语言离一门完善的语言还需要海量的工作，我们需要定义更多的scope规则，规则之间往往还存在复杂的嵌套关系。这篇文章只是讲了冰山露出海面的那一角。如果想深入学习这方面的知识，仍需参考VS Code官方的文档，以及学习编译原理相关知识。</p><p>另外附上文章中两个插件最终的代码：</p><p><a href="https://github.com/inkyMountain/zhuanzhuan-lang">https://github.com/inkyMountain/zhuanzhuan-lang</a></p><p><a href="https://github.com/inkyMountain/zhuanzhuan-lang-theme">https://github.com/inkyMountain/zhuanzhuan-lang-theme</a></p><p>参考文档：<a href="https://code.visualstudio.com/api#vscode">https://code.visualstudio.com/api#vscode</a></p><p>文章来源：<a href="https://blog.csdn.net/P6P7qsW6ua47A2Sb/article/details/110151903?ops_request_misc=%25257B%252522request%25255Fid%252522%25253A%252522161228068816780262512132%252522%25252C%252522scm%252522%25253A%25252220140713.130102334.pc%25255Fall.%252522%25257D&amp;request_id=161228068816780262512132&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-16-110151903.first_rank_v2_pc_rank_v29_10&amp;utm_term=%25E4%25BC%25AA%25E4%25BB%25A3%25E7%25A0%2581">链接</a></p><p>因为我对这方面也不是太懂，市面上也已经有很多的轮子了，本着不造烂轮子误人子弟的原则，整理了这篇文章。</p><p>水平有限，若有错漏，敬请指正。</p><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> c语言学习历程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c语言初步学习 </tag>
            
            <tag> 伪代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c语言初步学习——伪代码(1)</title>
      <link href="posts/520ef546/"/>
      <url>posts/520ef546/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>伪代码（Pseudocode）是一种非正式的，类似于英语结构的，用于描述模块结构图的语言，并且英语国家使用的较多。人们在用不同的编程语言实现同一个算法时意识到，他们的实现（注意：这里是实现，不是功能）很不同。尤其是对于那些熟练于不同编程语言的程序员要理解一个（用其他编程语言编写的程序的）功能时可能很难，因为程序语言的形式限制了程序员对程序关键部分的理解。这样伪代码就应运而生了。伪代码提供了更多的设计信息，每一个模块的描述都必须与设计结构图一起出现。<br>使用伪代码的目的是使被描述的算法可以容易地以任何一种编程语言（Pascal，C，Java等）实现。因此，伪代码必须结构清晰、代码简单、可读性好，并且类似自然语言。 介于自然语言与编程语言之间。以编程语言的书写形式指明算法职能。使用伪代码， 不用拘泥于具体实现。相比程序语言（例如Java, C++,C, Dephi 等等）它更类似自然语言。它是半角式化、不标准的语言。可以将整个算法运行过程的结构用接近自然语言的形式（可以使用任何一种你熟悉的文字，关键是把程序的意思表达出来）描述出来。这个在数据结构讲算法等部分体现的较多。</p><p>并且，学习代码类相关专业的同学，在<a href="https://blog.csdn.net/weixin_41275726/article/details/102796822?ops_request_misc=%25257B%252522request%25255Fid%252522%25253A%252522161228068816780266227075%252522%25252C%252522scm%252522%25253A%25252220140713.130102334..%252522%25257D&amp;request_id=161228068816780266227075&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-102796822.first_rank_v2_pc_rank_v29_10&amp;utm_term=%25E4%25BC%25AA%25E4%25BB%25A3%25E7%25A0%2581"><strong>论文</strong></a>上也要使用一些相关的伪代码，所以<strong>掌握</strong>伪代码的写法也是很重要的一个环节 。</p><span id="more"></span><h2 id="语法规则">语法规则</h2><p>例如，类Pascal语言的伪代码的语法规则是： 在伪代码中，每一条指令占一行（else if，例外）。指令后不跟任何符号（Pascal和C中语句要以分号结尾）。书写上的“缩进”表示程序中的分支程序结构。这种缩进风格也适用于if-then-else语句。用缩进取代传统Pascal中的begin和end语句来表示程序的块结构可以大大提高代码的清晰性；同一模块的语句有相同的缩进量，次一级模块的语句相对与其父级模块的语句缩进。</p><p>算法的伪代码语言在某些方面可能显得不太正规，但是给我们描述算法提供了很多方便，并且可以使我们忽略算法实现中很多麻烦的细节。通常每个算法开始时都要描述它的输入和输出，而且算法中的每一行都给编上号码，在解释算法的过程中会经常使用算法步骤中的行号来指代算法的步骤。算法的伪代码描述形式上并不是非常严格，其主要特性和通常的规定如下：<br>1) 算法中出现的数组、变量可以是以下类型：整数、实数、字符、位串或指针。通常这些类型可以从算法的上下文来看是清楚的，并不需要额外加以说明。<br>2) 在算法中的某些指令或子任务可以用文字来叙述，例如，“设x是A中的最大项”，这里A是一个数组；或者&quot;将x插入L中&quot;，这里L是一个链表。这样做的目的是为了避免因那些与主要问题无关的细节使算法本身杂乱无章。<br>3) 算术表达式可以使用通常的算术运算符（+，-，<em>，/，以及表示幂的^）。逻辑表达式可以使用关系运算符=,≠,&lt;,&gt;,≤和≥，以及逻辑运算符与(and),或（or），非（not）。<br>4) 赋值语句是如下形式的语句：a&lt;-b 。<br>这里a是变量、数组项，b是算术表达式、逻辑表达式或指针表达式。语句的含义是将b的值赋给a。<br>5) 若a和b都是变量、数组项，那么记号a&lt;-&gt;b 表示a和b的内容进行交换。<br>6) goto语句具有形式<br>goto label（goto标号）<br>它将导致转向具有指定标号的语句。<br>7) 条件语句有以下两种形式：<br>if c then s或者<br>if c then s<br>else s′<br>这里c是逻辑表达式，s和s′是单一的语句或者是被括在do和end之间的语句串。对于上述两种形式，假若c为真，则s被执行一次。假若c为假，则在第一种形式中，if语句的执行就完成了，而在第二种形式中，执行s′。在所有的情况下，控制就进行到了下一个语句，除非在s或s′中的goto语句使控制转向到其它地方。<br>8) 有两种循环指令：while和for。<br>while语句的形式是<br>while c do<br>s<br>end<br>这里c是逻辑表达式，而s是由一个或更多个语句组成的语句串。当c为真时，执行s。在每一次执行s之前，c都被检查一下；假若c为假，控制就进行到紧跟在while语句后面的语句。注意，当控制第一次达到while语句时，假若c为假，则s一次也不执行。<br>for语句的形式是<br>for var init to limit by incr do<br>s<br>end<br>这里var是变量，init、limit和incr都是算术表达式，而s是由一个或多个语句组成的语句串。初始时，var被赋予init的值。假若incr≥0，则只要var≤limit，就执行s并且将incr加到var上。（假若incr&lt;0，则只要var≥limit，就执行s并且将incr加到var上）。incr的符号不能由s来该改变。<br>9) exit语句可以在通常的结束条件满足之前，被用来结束while循环或者for循环的执行。exit导致转向到紧接在包含exit的（最内层）while或者for循环后面的一个语句。<br>10) return用来指出一个算法执行的终点；如果算法在最后一条指令之后结束，它通常是被省略的；它被用得最多的场合是检测到不合需要的条件时。return的后面可以紧接被括在引号的信息。<br>11) 算法中的注释被括在/</em> */之中。诸如read和output之类的各种输入或者输出也在需要时被用到。</p><p><strong>伪代码实例</strong></p><p>伪代码只是像流程图一样用在程序设计的初期，帮助写出程序流程。简单的程序一般都不用写流程、写思路，但是复杂的代码，最好还是把流程写下来，总体上去考虑整个功能如何实现。写完以后不仅可以用来作为以后测试,维护的基础，还可用来与他人交流。但是，如果把全部的东西写下来必定可能会让费很多时间，那么这个时候可以采用伪代码方式。比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">IF 九点以前 THEN</span><br><span class="line"></span><br><span class="line">do 私人事务；</span><br><span class="line"></span><br><span class="line">ELSE 9点到18点 THEN</span><br><span class="line"></span><br><span class="line">工作；</span><br><span class="line"></span><br><span class="line">ELSE</span><br><span class="line"></span><br><span class="line">下班;</span><br><span class="line"></span><br><span class="line">END IF</span><br></pre></td></tr></table></figure><p>这样不但可以达到文档的效果,同时可以节约时间. 更重要的是,使结构比较清晰,表达方式更加直观.</p><p>下面介绍一种类Pascal语言的伪代码的语法规则。</p><p>在伪代码中，每一条指令占一行(else if 例外，)，指令后不跟任何符号（Pascal和C中语句要以分号结尾）；</p><p>书写上的“缩进”表示程序中的分支程序结构。这种缩进风格也适用于if-then-else语句。用缩进取代传统Pascal中的begin和end语句来表示程序的块结构可以大大提高代码的清晰性；同一模块的语句有相同的缩进量，次一级模块的语句相对与其父级模块的语句缩进；</p><p>在伪代码中，通常用连续的数字或字母来标示同一即模块中的连续语句，有时也可省略标号。</p><p>符号△后的内容表示注释；</p><p>在伪代码中，变量名和保留字不区分大小写，这一点和Pascal相同，与C或C++不同；</p><p>在伪代码中，变量不需声明，但变量局部于特定过程，不能不加显示的说明就使用全局变量；</p><p>赋值语句用符号←表示，x←exp表示将exp的值赋给x，其中x是一个变量，exp是一个与x同类型的变量或表达式（该表达式的结果与x同类型）；多重赋值i←j←e是将表达式e的值赋给变量i和j，这种表示与j←e和i←e等价。</p><p>例如：</p><pre><code>x←yx←20*(y+1)x←y←30</code></pre><p>以上语句用C分别表示为：</p><pre><code>x = y;x = 20*(y+1);x = y = 30;</code></pre><p>选择语句用if-then-else来表示，并且这种if-then-else可以嵌套，与Pascal中的if-then-else没有什么区别。</p><p>例如:</p><pre><code>if (Condition1)then [ Block 1 ]else if (Condition2)then [ Block 2 ]else [ Block 3 ]</code></pre><p>循环语句有三种：while循环、repeat-until循环和for循环，其语法均与Pascal类似，只是用缩进代替begin - end；</p><p>例如：</p><ul><li>x ← 0</li><li>y ← 0</li><li>z ← 0</li><li>while x &lt; N</li><li>do x ← x + 1</li><li>y ← x + y</li><li>for t ← 0 to 10</li><li>do z ← ( z + x * y ) / 100</li><li>repeat</li><li>y ← y + 1</li><li>z ← z - y</li><li>until z &lt; 0</li><li>z ← x * y</li><li>y ← y / 2</li></ul><p>上述语句用C或C++来描述是：</p><pre><code>x = y = z = 0;while( z &lt; N )&#123;x ++;y += x;for( t = 0; t &lt; 10; t++ )&#123;z = ( z + x * y ) / 100;do &#123;y ++;z -= y;&#125; while( z &gt;= 0 );&#125;z = x * y;&#125;y /= 2;</code></pre><p>数组元素的存取有数组名后跟“[下标]”表示。例如A[j]指示数组A的第j个元素。符号“ …”用来指示数组中值的范围。</p><p>例如：</p><p>A[1…j]表示含元素A[1], A[2], … , A[j]的子数组；</p><p>复合数据用对象(Object)来表示，对象由属性(attribute)和域(field)构成。域的存取是由域名后接由方括号括住的对象名表示。</p><p>例如：</p><p>数组可被看作是一个对象，其属性有length，表示其中元素的个数，则length[A]就表示数组A中的元素的个数。在表示数组元素和对象属性时都要用方括号，一般来说从上下文可以看出其含义。</p><p>用于表示一个数组或对象的变量被看作是指向表示数组或对象的数据的一个指针。对于某个对象x的所有域f，赋值y←x就使f[y]=f[x]，更进一步，若有f[x]←3，则不仅有f[x]=3，同时有f[y]=3，换言之，在赋值y←x后，x和y指向同一个对象。</p><p>有时，一个指针不指向任何对象，这时我们赋给他nil。</p><p>函数和过程语法与Pascal类似。</p><p>函数值利用 “return (函数返回值)” 语句来返回，调用方法与Pascal类似；过程用 “call 过程名”语句来调用；</p><p>例如：</p><p>1. x ← t + 10</p><p>2. y ← sin(x)</p><p>3. call CalValue(x,y)</p><p>参数用按值传递方式传给一个过程：被调用过程接受参数的一份副本，若他对某个参数赋值，则这种变化对发出调用的过程是不可见的。当传递一个对象时，只是拷贝指向该对象的指针，而不拷贝其各个域。</p><p>部分文章来源：<a href="https://www.cnblogs.com/huipengkankan/archive/2011/07/28/2120416.html">伪代码规范</a></p><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> c语言学习历程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c语言初步学习 </tag>
            
            <tag> 伪代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>艹</title>
      <link href="posts/4c7020/"/>
      <url>posts/4c7020/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><iframe id="b" class="b video_pc"         src="https://xbeibeix.com/api/bilibili/biliplayer/?url=https://www.bilibili.com/video/BV1cV411S7DD" frameborder="0"framespacing="0"allowfullscreen="true"style="position: middle;width="100%" height="600" controls="controls" autoplay="autoplay"quality="high"></video>></iframe><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 视频 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> video </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>远古项目</title>
      <link href="posts/78f61393/"/>
      <url>posts/78f61393/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>成本很低大约花了不到一百，视频里的是第一代机器，后续还会开发升级版本。</center><span id="more"></span><iframe id="b" class="b video_pc" src="https://xbeibeix.com/api/bilibili/biliplayer/?url=https://www.bilibili.com/video/BV1bZ4y1j76W" frameborder="0"framespacing="0"allowfullscreen="true"style="position: middle;width="100%" height="600" controls="controls" quality="high"></video>></iframe><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 视频 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> video </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《关于吃个猕猴桃酸到脸部变形这档事》</title>
      <link href="posts/668164b5/"/>
      <url>posts/668164b5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><iframe id="b" class="b video_pc" src="https://xbeibeix.com/api/bilibili/biliplayer/?url=https://www.bilibili.com/video/BV1TK411K7XP/" frameborder="0"framespacing="0"allowfullscreen="true"style="position: middle;width="100%" height="600" controls="controls" autoplay="autoplay"quality="high"></video>></iframe><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 视频 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> video </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这就是赛博抖枪术么，i了i了</title>
      <link href="posts/38ba560b/"/>
      <url>posts/38ba560b/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>不久前入手了赛博朋克2077，but，bug是真的多。。。。。。</center><span id="more"></span><iframe id="b" class="b video_pc" src="https://xbeibeix.com/api/bilibili/biliplayer/?url=https://www.bilibili.com/video/BV1nr4y1F7Dg/" frameborder="0"framespacing="0"allowfullscreen="true"style="position: middle;width="100%" height="600" controls="controls" autoplay="autoplay"quality="high"></video>></iframe><p>还有这个大字。。。。无语</p><img src="https://s3.ax1x.com/2020/12/19/rU1dYR.md.png" alt="rU1dYR.md.png" style="zoom:50%;" / loading="lazy"><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 视频 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> video </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>圣诞节（×） 万圣节（√）</title>
      <link href="posts/cdeb55ca/"/>
      <url>posts/cdeb55ca/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>今天在打守望的时候遇到了诡异的事情详情看视频</center><span id="more"></span><iframe id="b" class="b video_pc" src="https://xbeibeix.com/api/bilibili/biliplayer/?url=https://www.bilibili.com/video/BV1kv41147K3" frameborder="0"framespacing="0"allowfullscreen="true"style="position: middle;width="100%" height="600" controls="controls" quality="high"></video>></iframe><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 视频 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> video </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mc混剪（视频）</title>
      <link href="posts/c13eda59/"/>
      <url>posts/c13eda59/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>许久之前做的视频，练手用的，挺怀念的</center><span id="more"></span><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 视频 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> video </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>奥斯夫托洛斯基（视频）</title>
      <link href="posts/30c0c306/"/>
      <url>posts/30c0c306/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><center>之前闲的无聊，做的一个小视频，仅供娱乐，还望轻喷，(狗头保命)</center><span id="more"></span><iframe id="b" class="b video_pc" src="https://xbeibeix.com/api/bilibili/biliplayer/?url=https://www.bilibili.com/video/BV1j7411C7s6" frameborder="0"framespacing="0"allowfullscreen="true"style="position: middle;width="100%" height="600" controls="controls" autoplay="autoplay"quality="high"></video>></iframe><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 视频 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> video </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VS Code编写Keil工程</title>
      <link href="posts/8eea644e/"/>
      <url>posts/8eea644e/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h3 id="前言">前言</h3><p>keil 作为最经典的入门IDE，尽管功能强大，但是界面不太友好，也不支持常用的代码自动补全，代码重构等基本功能，代码量多了以后，程序的编写，调用，查看，修改等都很不方便。之前看到网上很多人都用的code进行的开发，于是我也搞了一个。我将过程记录下来，方便自己和其他人查阅和学习。</p><p>通常换了一个开发工具软件，需要重新搭建开发环境，这是很麻烦的事情，但是使用VS Code + Keil Assistant插件可以让这个过程变得非常简单。十分感谢写这个插件的大神！</p><p>另外，博客里的图片是我随手从网上截取的，只是个参考例子作用，版本可能较老旧，小伙伴们下载的时候选择最新的即可</p><span id="more"></span><hr><h3 id="大致过程">大致过程</h3><ul><li><p>1、首先下载一个CODE的安装包，用搜索引擎查一下，找到官方的安装包</p><img src="https://s3.ax1x.com/2020/12/15/rMqAW6.png" alt="rMqAW6.png" style="zoom: 80%;" / loading="lazy"></li><li><p>VS Code官网：<a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a></p></li><li><p>2、其次按照说明以及需求安装</p></li><li><p>3、配置环境</p></li><li><p>4、安装插件</p><hr></li></ul><h3 id="中文化">中文化</h3><p>大部分刚入手的的小伙伴可能看不懂英文，所以可以下载一个中文的插件</p><p>1、在插件里面搜索chinexe就可以找到中文化的插件了</p><p><img src="https://s3.ax1x.com/2020/12/15/rMLoUs.jpg" alt="rMLoUs.jpg" border="0" style="zoom: 50%;" / loading="lazy"><img src="https://img-blog.csdnimg.cn/20190118174440530.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L211bXUxOTk4,size_16,color_FFFFFF,t_70" alt="2" style="zoom:50%;" / loading="lazy"></p><img src="https://s3.ax1x.com/2020/12/15/rMOWJ1.md.png" alt="rMOWJ1.md.png"  / loading="lazy"><p>2、安装好插件后可以使用快捷键Shift+Ctrl+P，然后输入Configure Language</p><p>3、选中打开之后就会打开 locale.json 文件</p><p>{<br>// 定义 VSCode 的显示语言。</p><p>“locale”:“en”  ；<br>}</p><p>4、将en改成zh-CN重启后就变成中文</p><hr><h3 id="安装keil插件">安装keil插件</h3><p>同样的，在插件那里查找Keil Assistant</p><p><img src="https://img-blog.csdnimg.cn/20201122183739896.png#pic_center" alt="keil插件" loading="lazy"></p><p>C/C++ IntelliSense（PS：这个插件安装好就不用管它了，要问问什么，因为没啥可管的）</p><p><img src="https://s3.ax1x.com/2020/12/15/rMX66f.md.png" alt="rMX66f.md.png" loading="lazy"></p><hr><h3 id="keil-assistant的设置和使用">keil assistant的设置和使用</h3><p>打开Keil Assiatant的扩展设置，填写UV4.exe的路径到对应位置即可。这里用的是Keil C51，如果是Keil MDK，就填写在下面。</p><p><img src="https://s3.ax1x.com/2020/12/15/rMvnIJ.md.png" alt="rMvnIJ.md.png" loading="lazy"></p><p>然后就可以添加Keil工程到VS Code了：</p><p><img src="https://s3.ax1x.com/2020/12/15/rMxPTe.md.png" alt="rMxPTe.md.png" loading="lazy"></p><p>点击这里进行编译，或者按F7编译：</p><p><img src="https://s3.ax1x.com/2020/12/15/rMxum8.png" alt="rMxum8.png" loading="lazy"></p><hr><p>但是注意，VSCode只是一个纯文本<strong>编辑器</strong>(editor)，不是IDE(集成开发环境)，不含<strong>编译器</strong>(compiler)和许多其它功能，所以需要自己先搭建环境。但是对很多刚上手或者初次使用的朋友来说，面对一堆的环境变量操作，搭建环境就成了一个麻烦事，动辄就要十几分钟甚至几十分钟。</p><hr><p>我遇到的问题主要是配置c语言环境时MinGw必需文件下载不下来（f**k the wall）</p><p><img src="https://s3.ax1x.com/2020/12/10/rFW7vj.md.png" alt="rFW7vj.md.png" loading="lazy"></p><p>于是乎，去网上找了另一条途径，这个大佬做成了视频参考如下</p><iframe id="b" class="b video_pc" src="https://xbeibeix.com/api/bilibili/biliplayer/?url=https://www.bilibili.com/video/av52434248" frameborder="0"framespacing="0"allowfullscreen="true"style="position: middle;width="80%" height="500" controls="controls" autoplay="autoplay"quality="high"></video>></iframe><p>就是这个版本较老了，新的方法还在找。</p><p>分割线***</p><hr><p>新的方法找到了</p><p>MinGW64 链接：<a href="https://pan.baidu.com/s/12WgeDh6MrnOI9SwPBF7IzA">https://pan.baidu.com/s/12WgeDh6MrnOI9SwPBF7IzA</a><br>提取码：bh7u</p><p>网上有一些朋友分享了MinGW64的文件，直接下载下来放到一些地方别再动就可以了。</p><h3 id="使用教程"><strong>使用教程</strong></h3><p>配置一下系统变量即可，具体教程可以去网上寻找一下，在此不再赘述（水平不足）。</p><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> code </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习历程</title>
      <link href="posts/ecf03602/"/>
      <url>posts/ecf03602/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h3 id="center-从前辈那里讨教了一些方法-大致就是下面这些-center"><center>从前辈那里讨教了一些方法，大致就是下面这些。</center></h3><span id="more"></span><ul><li><p>1、STM32 Cube MX使用方法</p><p>2、STM32 HAL库使用方法</p><p>3、STM32启动文件理解</p><p>4、时钟系统（时钟树）梳理、systick定时器</p><p>5、GPIO（8种状态）使用</p><p>6、NVIC中断应用</p><p>7、USART串口通信</p><p>8、DMA外设的应用（基于串口）</p><p>9、IIC外设应用</p><p>10、SPI外设应用</p><p>11、ADC 电压采集</p><p>12、TIM定时器</p><p>13、RTC实时时钟</p><p>14、看门狗应用</p><p>15、PWR电源管理</p></li></ul><hr><p>还有就是不要只是看看例程玩一玩，做项目就简单改改代码。要深入了解底层的原理，比如一开始的点灯</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GPIO_InitTypeDef  GPIO_InitStructure;</span><br><span class="line">RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOF, ENABLE);<span class="comment">//使能GPIOF时钟</span></span><br></pre></td></tr></table></figure><p>很多人都知道这个是用来初始化io口用的，但是为什么这么写就不清楚了；</p><p>这时候就要翻一翻官方的手册了，主要有两本一本《STM32中文参考手册》（因为英语不好），还有一本《stm32固件库中文说明》（理由同上）。遇到一些小麻烦可以去这俩本书上查一下，说不定就会有很大收获。</p><hr><p>另外还有很多的企业或者公司或者社区又或者团队都会有一些参考资料，觉得有用的就拿过来用就是了。例如正点原子，野火等</p><p>遇到不会的问题尽量少去东奔西跑的去询问，很多人都很烦这种行为的。要学会思考，学会自己解决问题的技能，这点非常重要。也有很多人是直接百度的，有时候确实能得到一些答案，但是更多的时候还是一堆疑问。（黑人问号.jpg）毕竟百毒的作用还是有限的，这里建议去一些社区或者论坛来寻找解决方案。例如意法半导体官方，那里有很多的资料文献和文件，还有一些大神的解决方案（但是不多）。还有就是csdn，那里的带佬很多，解决方案也很全面，非常建议去那里查找你需要的答案。</p><p>最后朋友，希望我们能够一起进步、共同成长。</p><p>HOPE FOREVER</p><p>Your friend DarkFox</p><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>过山车</title>
      <link href="posts/224ff270/"/>
      <url>posts/224ff270/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://fastly.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://fastly.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h1>狐言乱语</h1><p>RTkldTIwMENBNiV1MjAwQzk2JTIwRTUldTIwMEM4NSV1MjAwQz<br>g4JTIwRTUldTIwMEM5MSV1MjAwQ0EyJTIwRUYldTIwMENCQyV<br>1MjAwQzhDJTIwRTQldTIwMENCQiV1MjAwQzhBJTIwRTUldTIwM<br>ENBNCV1MjAwQ0E5JTIwRTkldTIwMEM5MiV1MjAwQzg4JTIwRT<br>QldTIwMENCOCV1MjAwQzhEJTIwRTYldTIwMEM4OCV1MjAwQ0Iz</p><p>RTUldTIwMENCRiV1MjAwQzgzJTIwRTYldTIwMEM4MyV1MjAwQzg1<br>JTIwRTQldTIwMENCOSV1MjAwQzlGJTIwRTUldTIwMENBNiV1MjAw<br>QzgyJTIwRTUldTIwMEM5MCV1MjAwQzhDJTIwRTgldTIwMENCRiV1<br>MjAwQzg3JTIwRTUldTIwMENCMSV1MjAwQ0IxJTIwRTgldTIwMENC<br>RCV1MjAwQ0E2JTIwRTQldTIwMENCOCV1MjAwQzgwJTIwRTgldTIw<br>MEM4OCV1MjAwQ0FDJTIwRUYldTIwMENCQyV1MjAwQzhDJTIwRT<br>UldTIwMEM4RSV1MjAwQzlGJTIwRTYldTIwMEM5QyV1MjAwQ0FDJT<br>IwRTQldTIwMENCQiV1MjAwQ0E1JTIwRTQldTIwMENCOCV1MjAwQ0<br>JBJTIwRTgldTIwMEM4NyV1MjAwQ0FBJTIwRTUldTIwMENCNyV1MjA<br>wQ0IxJTIwRTUldTIw<br>MEM5NSV1MjAwQzhBJTIwRUYldTIwMENCQyV1MjAwQzhDJTIwRTU<br>ldTIwMENCNyV1MjAwQ0IyJTIwRTcldTIwMENCQiV1MjAwQzhGJTIwR<br>TgldTIwMENCNiV1MjAwQzg1JTIwRTgldTIwMENCRCV1MjAwQ0E2JT<br>IwRTQldTIwMENCQSV1MjAwQzg2JTIwRUYldTIwMENCQyV1MjAwQz<br>hDJTIwRTYldTIwMENCMiV1MjAwQ0ExJTIwRTYldTIwMEM4MyV1MjA<br>wQ0IzJTIwRTUldTIwMEM4OCV1MjAwQ0IwJTIwRTUldTIwMEM4MyV<br>1MjAwQzhGJTIwRTUldTIwMEM5RCV1MjAwQzkwJTIwRTgldTIwMENC<br>RiV1MjAwQzg3JTIwRTUldTIwMENCMSV1MjAwQ0IxJTIwRTgldTIwME<br>NCRCV1MjAwQ0E2JTIwRTQldTIwMENCOCV1MjAwQzgwJTIwRTgldT<br>IwMEM4OCV1MjAwQ0FDJTIwRUYldTIwMENCQyV1MjAwQzhDJTIwR<br>TcldTIwMEM5QiV1MjAwQ0I0JTIwRTQldTIwMENCOCV1MjAwQzhBJTI<br>wRTcldTIwMEM5QiV1MjAwQ0I0JTIwRTQldTIwMENCOCV1MjAwQzhC<br>JTIwRTMldTIwMEM4MCV1MjAwQzgy</p><p><u>E9‌92‌88 E5‌88‌BA E6‌BF‌80 E3‌80‌82</u></p><link rel="stylesheet" href="/css/markmap.css" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> Fox saying </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
